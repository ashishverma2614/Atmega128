
Test.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000010  00800100  000009cc  00000a60  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000009cc  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000c  00800110  00800110  00000a70  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000a70  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000acc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000068  00000000  00000000  00000b0c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000a30  00000000  00000000  00000b74  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000874  00000000  00000000  000015a4  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000049b  00000000  00000000  00001e18  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000018c  00000000  00000000  000022b4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000458  00000000  00000000  00002440  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000002d7  00000000  00000000  00002898  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000058  00000000  00000000  00002b6f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	d5 c0       	rjmp	.+426    	; 0x1b8 <__vector_3>
   e:	00 00       	nop
  10:	8f c0       	rjmp	.+286    	; 0x130 <__vector_4>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	6d c0       	rjmp	.+218    	; 0xf8 <__vector_7>
  1e:	00 00       	nop
  20:	53 c0       	rjmp	.+166    	; 0xc8 <__vector_8>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	d8 c0       	rjmp	.+432    	; 0x1e2 <__vector_12>
  32:	00 00       	nop
  34:	48 c0       	rjmp	.+144    	; 0xc6 <__bad_interrupt>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	11 c1       	rjmp	.+546    	; 0x260 <__vector_15>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	d3 c0       	rjmp	.+422    	; 0x210 <__vector_26>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	ec ec       	ldi	r30, 0xCC	; 204
  a0:	f9 e0       	ldi	r31, 0x09	; 9
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a0 31       	cpi	r26, 0x10	; 16
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	a0 e1       	ldi	r26, 0x10	; 16
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	ac 31       	cpi	r26, 0x1C	; 28
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	4a d1       	rcall	.+660    	; 0x358 <main>
  c4:	81 c4       	rjmp	.+2306   	; 0x9c8 <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <__vector_8>:

/* 외부 인터럽트 */

/* SW1 - 카운트 초기값 설정 / 첫번째 자리 수 점멸 */
ISR(INT7_vect)
{
  c8:	1f 92       	push	r1
  ca:	0f 92       	push	r0
  cc:	0f b6       	in	r0, 0x3f	; 63
  ce:	0f 92       	push	r0
  d0:	11 24       	eor	r1, r1
  d2:	8f 93       	push	r24
    tr = 1;
  d4:	81 e0       	ldi	r24, 0x01	; 1
  d6:	80 93 11 01 	sts	0x0111, r24	; 0x800111 <tr>
    sw_set = 1;
  da:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <__data_end>

    /* SW1을 누르면 타이머0 인터럽트 설정 */
    TCCR0 = ((0x01 << WGM01) | (0x01 << CS01) | (0x01 << CS00));		//CTC모드, 분주 : 32
  de:	8b e0       	ldi	r24, 0x0B	; 11
  e0:	83 bf       	out	0x33, r24	; 51
    OCR0 = 249;															//0.5ms = (1/16) * 32 * (249+1)
  e2:	89 ef       	ldi	r24, 0xF9	; 249
  e4:	81 bf       	out	0x31, r24	; 49
    TIMSK |= (0x01 << OCIE0);											//타이머0 출력 비교 매치 인터럽트 인에이블
  e6:	87 b7       	in	r24, 0x37	; 55
  e8:	82 60       	ori	r24, 0x02	; 2
  ea:	87 bf       	out	0x37, r24	; 55
}
  ec:	8f 91       	pop	r24
  ee:	0f 90       	pop	r0
  f0:	0f be       	out	0x3f, r0	; 63
  f2:	0f 90       	pop	r0
  f4:	1f 90       	pop	r1
  f6:	18 95       	reti

000000f8 <__vector_7>:

/* SW2 - 자리수 변경 / 1 -> 2 -> 3 -> 4 -> 1 순서 / 변경된 자리 수 점멸 */
ISR(INT6_vect)
{
  f8:	1f 92       	push	r1
  fa:	0f 92       	push	r0
  fc:	0f b6       	in	r0, 0x3f	; 63
  fe:	0f 92       	push	r0
 100:	11 24       	eor	r1, r1
 102:	8f 93       	push	r24
    if(sw_set == 1)
 104:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <__data_end>
 108:	81 30       	cpi	r24, 0x01	; 1
 10a:	29 f4       	brne	.+10     	; 0x116 <__vector_7+0x1e>
    tr++;
 10c:	80 91 11 01 	lds	r24, 0x0111	; 0x800111 <tr>
 110:	8f 5f       	subi	r24, 0xFF	; 255
 112:	80 93 11 01 	sts	0x0111, r24	; 0x800111 <tr>
    if(tr == 5)
 116:	80 91 11 01 	lds	r24, 0x0111	; 0x800111 <tr>
 11a:	85 30       	cpi	r24, 0x05	; 5
 11c:	19 f4       	brne	.+6      	; 0x124 <__vector_7+0x2c>
    tr = 1;
 11e:	81 e0       	ldi	r24, 0x01	; 1
 120:	80 93 11 01 	sts	0x0111, r24	; 0x800111 <tr>
}
 124:	8f 91       	pop	r24
 126:	0f 90       	pop	r0
 128:	0f be       	out	0x3f, r0	; 63
 12a:	0f 90       	pop	r0
 12c:	1f 90       	pop	r1
 12e:	18 95       	reti

00000130 <__vector_4>:

/* SW3 - 해당 자리수 카운트-업 / 0 -> 9 -> 0 */
ISR(INT3_vect)
{
 130:	1f 92       	push	r1
 132:	0f 92       	push	r0
 134:	0f b6       	in	r0, 0x3f	; 63
 136:	0f 92       	push	r0
 138:	11 24       	eor	r1, r1
 13a:	0b b6       	in	r0, 0x3b	; 59
 13c:	0f 92       	push	r0
 13e:	2f 93       	push	r18
 140:	3f 93       	push	r19
 142:	4f 93       	push	r20
 144:	5f 93       	push	r21
 146:	6f 93       	push	r22
 148:	7f 93       	push	r23
 14a:	8f 93       	push	r24
 14c:	9f 93       	push	r25
 14e:	af 93       	push	r26
 150:	bf 93       	push	r27
 152:	ef 93       	push	r30
 154:	ff 93       	push	r31
    if(TEMP[4-tr] == '9')
 156:	20 91 11 01 	lds	r18, 0x0111	; 0x800111 <tr>
 15a:	84 e0       	ldi	r24, 0x04	; 4
 15c:	90 e0       	ldi	r25, 0x00	; 0
 15e:	82 1b       	sub	r24, r18
 160:	91 09       	sbc	r25, r1
 162:	fc 01       	movw	r30, r24
 164:	e9 5e       	subi	r30, 0xE9	; 233
 166:	fe 4f       	sbci	r31, 0xFE	; 254
 168:	20 81       	ld	r18, Z
 16a:	29 33       	cpi	r18, 0x39	; 57
 16c:	31 f4       	brne	.+12     	; 0x17a <__vector_4+0x4a>
    TEMP[4-tr] = '0';
 16e:	fc 01       	movw	r30, r24
 170:	e9 5e       	subi	r30, 0xE9	; 233
 172:	fe 4f       	sbci	r31, 0xFE	; 254
 174:	20 e3       	ldi	r18, 0x30	; 48
 176:	20 83       	st	Z, r18
 178:	05 c0       	rjmp	.+10     	; 0x184 <__vector_4+0x54>
    else
    TEMP[4-tr]++;
 17a:	fc 01       	movw	r30, r24
 17c:	e9 5e       	subi	r30, 0xE9	; 233
 17e:	fe 4f       	sbci	r31, 0xFE	; 254
 180:	2f 5f       	subi	r18, 0xFF	; 255
 182:	20 83       	st	Z, r18

    count = atoi(TEMP);
 184:	87 e1       	ldi	r24, 0x17	; 23
 186:	91 e0       	ldi	r25, 0x01	; 1
 188:	1f d1       	rcall	.+574    	; 0x3c8 <atoi>
 18a:	90 93 16 01 	sts	0x0116, r25	; 0x800116 <count+0x1>
 18e:	80 93 15 01 	sts	0x0115, r24	; 0x800115 <count>
}
 192:	ff 91       	pop	r31
 194:	ef 91       	pop	r30
 196:	bf 91       	pop	r27
 198:	af 91       	pop	r26
 19a:	9f 91       	pop	r25
 19c:	8f 91       	pop	r24
 19e:	7f 91       	pop	r23
 1a0:	6f 91       	pop	r22
 1a2:	5f 91       	pop	r21
 1a4:	4f 91       	pop	r20
 1a6:	3f 91       	pop	r19
 1a8:	2f 91       	pop	r18
 1aa:	0f 90       	pop	r0
 1ac:	0b be       	out	0x3b, r0	; 59
 1ae:	0f 90       	pop	r0
 1b0:	0f be       	out	0x3f, r0	; 63
 1b2:	0f 90       	pop	r0
 1b4:	1f 90       	pop	r1
 1b6:	18 95       	reti

000001b8 <__vector_3>:

/* SW4 - 설정 완료 후 카운트 업 / 0.1초 시간 지연 */
ISR(INT2_vect)
{
 1b8:	1f 92       	push	r1
 1ba:	0f 92       	push	r0
 1bc:	0f b6       	in	r0, 0x3f	; 63
 1be:	0f 92       	push	r0
 1c0:	11 24       	eor	r1, r1
 1c2:	8f 93       	push	r24
    sw_set = 0;
 1c4:	10 92 10 01 	sts	0x0110, r1	; 0x800110 <__data_end>
    tr = 0;
 1c8:	10 92 11 01 	sts	0x0111, r1	; 0x800111 <tr>
    TIMSK &= ~(0x01 << OCIE0);
 1cc:	87 b7       	in	r24, 0x37	; 55
 1ce:	8d 7f       	andi	r24, 0xFD	; 253
 1d0:	87 bf       	out	0x37, r24	; 55
    TCCR0 = 0;
 1d2:	13 be       	out	0x33, r1	; 51
    TCNT0 = 0;
 1d4:	12 be       	out	0x32, r1	; 50
}
 1d6:	8f 91       	pop	r24
 1d8:	0f 90       	pop	r0
 1da:	0f be       	out	0x3f, r0	; 63
 1dc:	0f 90       	pop	r0
 1de:	1f 90       	pop	r1
 1e0:	18 95       	reti

000001e2 <__vector_12>:

/* 타이머 인터럽트 */

/* 5ms마다 timer1A 카운트 업*/
ISR(TIMER1_COMPA_vect)
{
 1e2:	1f 92       	push	r1
 1e4:	0f 92       	push	r0
 1e6:	0f b6       	in	r0, 0x3f	; 63
 1e8:	0f 92       	push	r0
 1ea:	11 24       	eor	r1, r1
 1ec:	8f 93       	push	r24
    timer1A++;
 1ee:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <timer1A>
 1f2:	8f 5f       	subi	r24, 0xFF	; 255
    if(timer1A == 5)		//20ms 마다 초기화
 1f4:	85 30       	cpi	r24, 0x05	; 5
 1f6:	19 f0       	breq	.+6      	; 0x1fe <__vector_12+0x1c>
/* 타이머 인터럽트 */

/* 5ms마다 timer1A 카운트 업*/
ISR(TIMER1_COMPA_vect)
{
    timer1A++;
 1f8:	80 93 14 01 	sts	0x0114, r24	; 0x800114 <timer1A>
 1fc:	03 c0       	rjmp	.+6      	; 0x204 <__vector_12+0x22>
    if(timer1A == 5)		//20ms 마다 초기화
    timer1A = 1;
 1fe:	81 e0       	ldi	r24, 0x01	; 1
 200:	80 93 14 01 	sts	0x0114, r24	; 0x800114 <timer1A>
}
 204:	8f 91       	pop	r24
 206:	0f 90       	pop	r0
 208:	0f be       	out	0x3f, r0	; 63
 20a:	0f 90       	pop	r0
 20c:	1f 90       	pop	r1
 20e:	18 95       	reti

00000210 <__vector_26>:

/* 100ms마다 timer1A 카운트 업*/
ISR(TIMER3_COMPA_vect)
{
 210:	1f 92       	push	r1
 212:	0f 92       	push	r0
 214:	0f b6       	in	r0, 0x3f	; 63
 216:	0f 92       	push	r0
 218:	11 24       	eor	r1, r1
 21a:	2f 93       	push	r18
 21c:	8f 93       	push	r24
 21e:	9f 93       	push	r25
    if(sw_set == 0)
 220:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <__data_end>
 224:	81 11       	cpse	r24, r1
 226:	14 c0       	rjmp	.+40     	; 0x250 <__vector_26+0x40>
    {
        count++;
 228:	80 91 15 01 	lds	r24, 0x0115	; 0x800115 <count>
 22c:	90 91 16 01 	lds	r25, 0x0116	; 0x800116 <count+0x1>
 230:	01 96       	adiw	r24, 0x01	; 1
 232:	90 93 16 01 	sts	0x0116, r25	; 0x800116 <count+0x1>
 236:	80 93 15 01 	sts	0x0115, r24	; 0x800115 <count>
        if(count > 10000)
 23a:	80 91 15 01 	lds	r24, 0x0115	; 0x800115 <count>
 23e:	90 91 16 01 	lds	r25, 0x0116	; 0x800116 <count+0x1>
 242:	81 31       	cpi	r24, 0x11	; 17
 244:	97 42       	sbci	r25, 0x27	; 39
 246:	20 f0       	brcs	.+8      	; 0x250 <__vector_26+0x40>
        count = 0;
 248:	10 92 16 01 	sts	0x0116, r1	; 0x800116 <count+0x1>
 24c:	10 92 15 01 	sts	0x0115, r1	; 0x800115 <count>
    }
}
 250:	9f 91       	pop	r25
 252:	8f 91       	pop	r24
 254:	2f 91       	pop	r18
 256:	0f 90       	pop	r0
 258:	0f be       	out	0x3f, r0	; 63
 25a:	0f 90       	pop	r0
 25c:	1f 90       	pop	r1
 25e:	18 95       	reti

00000260 <__vector_15>:

/* 50us마다 timer1A 카운트 업*/
ISR(TIMER0_COMP_vect)
{
 260:	1f 92       	push	r1
 262:	0f 92       	push	r0
 264:	0f b6       	in	r0, 0x3f	; 63
 266:	0f 92       	push	r0
 268:	11 24       	eor	r1, r1
 26a:	2f 93       	push	r18
 26c:	8f 93       	push	r24
 26e:	9f 93       	push	r25
    if(sw_set == 1)
 270:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <__data_end>
 274:	81 30       	cpi	r24, 0x01	; 1
 276:	49 f4       	brne	.+18     	; 0x28a <__vector_15+0x2a>
    timer0++;
 278:	80 91 12 01 	lds	r24, 0x0112	; 0x800112 <timer0>
 27c:	90 91 13 01 	lds	r25, 0x0113	; 0x800113 <timer0+0x1>
 280:	01 96       	adiw	r24, 0x01	; 1
 282:	90 93 13 01 	sts	0x0113, r25	; 0x800113 <timer0+0x1>
 286:	80 93 12 01 	sts	0x0112, r24	; 0x800112 <timer0>
    if(timer0 > 2000)		//1초마다 초기화
 28a:	80 91 12 01 	lds	r24, 0x0112	; 0x800112 <timer0>
 28e:	90 91 13 01 	lds	r25, 0x0113	; 0x800113 <timer0+0x1>
 292:	81 3d       	cpi	r24, 0xD1	; 209
 294:	97 40       	sbci	r25, 0x07	; 7
 296:	20 f0       	brcs	.+8      	; 0x2a0 <__vector_15+0x40>
    timer0 = 0;
 298:	10 92 13 01 	sts	0x0113, r1	; 0x800113 <timer0+0x1>
 29c:	10 92 12 01 	sts	0x0112, r1	; 0x800112 <timer0>
}
 2a0:	9f 91       	pop	r25
 2a2:	8f 91       	pop	r24
 2a4:	2f 91       	pop	r18
 2a6:	0f 90       	pop	r0
 2a8:	0f be       	out	0x3f, r0	; 63
 2aa:	0f 90       	pop	r0
 2ac:	1f 90       	pop	r1
 2ae:	18 95       	reti

000002b0 <Blink>:
/* 사용자 정의 함수 */

/* 스위치에 의해 선택된 FND 출력 없애기*/
void Blink(void)
{
    if(timer0 <= 1000)
 2b0:	80 91 12 01 	lds	r24, 0x0112	; 0x800112 <timer0>
 2b4:	90 91 13 01 	lds	r25, 0x0113	; 0x800113 <timer0+0x1>
 2b8:	89 3e       	cpi	r24, 0xE9	; 233
 2ba:	93 40       	sbci	r25, 0x03	; 3
 2bc:	88 f4       	brcc	.+34     	; 0x2e0 <Blink+0x30>
    {
        if(tr == 1)
 2be:	80 91 11 01 	lds	r24, 0x0111	; 0x800111 <tr>
 2c2:	81 30       	cpi	r24, 0x01	; 1
 2c4:	11 f4       	brne	.+4      	; 0x2ca <Blink+0x1a>
        PORTC &= ~(0x01 << PINC0);
 2c6:	a8 98       	cbi	0x15, 0	; 21
 2c8:	08 95       	ret
        else if(tr == 2)
 2ca:	82 30       	cpi	r24, 0x02	; 2
 2cc:	11 f4       	brne	.+4      	; 0x2d2 <Blink+0x22>
        PORTC &= ~(0x01 << PINC1);
 2ce:	a9 98       	cbi	0x15, 1	; 21
 2d0:	08 95       	ret
        else if(tr == 3)
 2d2:	83 30       	cpi	r24, 0x03	; 3
 2d4:	11 f4       	brne	.+4      	; 0x2da <Blink+0x2a>
        PORTC &= ~(0x01 << PINC2);
 2d6:	aa 98       	cbi	0x15, 2	; 21
 2d8:	08 95       	ret
        else if(tr == 4)
 2da:	84 30       	cpi	r24, 0x04	; 4
 2dc:	09 f4       	brne	.+2      	; 0x2e0 <Blink+0x30>
        PORTC &= ~(0x01 << PINC3);
 2de:	ab 98       	cbi	0x15, 3	; 21
 2e0:	08 95       	ret

000002e2 <Disp_FND>:
}

/* FND 출력하기*/
void Disp_FND(void)
{
    switch(timer1A)
 2e2:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <timer1A>
 2e6:	82 30       	cpi	r24, 0x02	; 2
 2e8:	a1 f0       	breq	.+40     	; 0x312 <Disp_FND+0x30>
 2ea:	18 f4       	brcc	.+6      	; 0x2f2 <Disp_FND+0x10>
 2ec:	81 30       	cpi	r24, 0x01	; 1
 2ee:	31 f0       	breq	.+12     	; 0x2fc <Disp_FND+0x1a>
 2f0:	08 95       	ret
 2f2:	83 30       	cpi	r24, 0x03	; 3
 2f4:	c9 f0       	breq	.+50     	; 0x328 <Disp_FND+0x46>
 2f6:	84 30       	cpi	r24, 0x04	; 4
 2f8:	11 f1       	breq	.+68     	; 0x33e <Disp_FND+0x5c>
 2fa:	08 95       	ret
    {
        case 1:
        FND1;
 2fc:	88 e0       	ldi	r24, 0x08	; 8
 2fe:	85 bb       	out	0x15, r24	; 21
        PORTA = FND[TEMP[0] - '0'];
 300:	e0 91 17 01 	lds	r30, 0x0117	; 0x800117 <TEMP>
 304:	f0 e0       	ldi	r31, 0x00	; 0
 306:	eb 52       	subi	r30, 0x2B	; 43
 308:	ff 4f       	sbci	r31, 0xFF	; 255
 30a:	80 81       	ld	r24, Z
 30c:	8b bb       	out	0x1b, r24	; 27
        Blink();
 30e:	d0 cf       	rjmp	.-96     	; 0x2b0 <Blink>
        break;
 310:	08 95       	ret
        case 2:
        FND2;
 312:	84 e0       	ldi	r24, 0x04	; 4
 314:	85 bb       	out	0x15, r24	; 21
        PORTA = FND[TEMP[1] - '0'];
 316:	e0 91 18 01 	lds	r30, 0x0118	; 0x800118 <TEMP+0x1>
 31a:	f0 e0       	ldi	r31, 0x00	; 0
 31c:	eb 52       	subi	r30, 0x2B	; 43
 31e:	ff 4f       	sbci	r31, 0xFF	; 255
 320:	80 81       	ld	r24, Z
        Blink();
 322:	8b bb       	out	0x1b, r24	; 27
 324:	c5 cf       	rjmp	.-118    	; 0x2b0 <Blink>
        break;
 326:	08 95       	ret
        case 3:
        FND3;
 328:	82 e0       	ldi	r24, 0x02	; 2
 32a:	85 bb       	out	0x15, r24	; 21
        PORTA = FND[TEMP[2] - '0'];
 32c:	e0 91 19 01 	lds	r30, 0x0119	; 0x800119 <TEMP+0x2>
 330:	f0 e0       	ldi	r31, 0x00	; 0
 332:	eb 52       	subi	r30, 0x2B	; 43
 334:	ff 4f       	sbci	r31, 0xFF	; 255
 336:	80 81       	ld	r24, Z
        Blink();
 338:	8b bb       	out	0x1b, r24	; 27
 33a:	ba cf       	rjmp	.-140    	; 0x2b0 <Blink>
        break;
 33c:	08 95       	ret
        case 4:
        FND4;
 33e:	81 e0       	ldi	r24, 0x01	; 1
 340:	85 bb       	out	0x15, r24	; 21
        PORTA = FND[TEMP[3] - '0'];
 342:	e0 91 1a 01 	lds	r30, 0x011A	; 0x80011a <TEMP+0x3>
 346:	f0 e0       	ldi	r31, 0x00	; 0
 348:	eb 52       	subi	r30, 0x2B	; 43
 34a:	ff 4f       	sbci	r31, 0xFF	; 255
 34c:	80 81       	ld	r24, Z
        Blink();
 34e:	8b bb       	out	0x1b, r24	; 27
 350:	af df       	rcall	.-162    	; 0x2b0 <Blink>
        timer1A = 0;
 352:	10 92 14 01 	sts	0x0114, r1	; 0x800114 <timer1A>
 356:	08 95       	ret

00000358 <main>:
}

int main(void)
{
    /*PORTA/PORTC 출력 설정 PORTD/PORTE 입력 설정 */
    DDRA = 0xFF;
 358:	8f ef       	ldi	r24, 0xFF	; 255
 35a:	8a bb       	out	0x1a, r24	; 26
    DDRC = ((0x01 << DDC3) | (0x01 << DDC2) | (0x01 << DDC1) | (0x01 << DDC0));
 35c:	9f e0       	ldi	r25, 0x0F	; 15
 35e:	94 bb       	out	0x14, r25	; 20
    DDRD = 0x00;
 360:	11 ba       	out	0x11, r1	; 17
    DDRE = 0x00;
 362:	12 b8       	out	0x02, r1	; 2

    /*SW 풀업 저항 설정*/
    PORTD = 0xFF;
 364:	82 bb       	out	0x12, r24	; 18
    PORTE = 0xFF;
 366:	83 b9       	out	0x03, r24	; 3
    
    /*외부 인터럽트 설정*/
    EICRA = ((0x01 << ISC21) | (0x01 << ISC31));									//trigger설정 : falling edge
 368:	80 ea       	ldi	r24, 0xA0	; 160
 36a:	80 93 6a 00 	sts	0x006A, r24	; 0x80006a <__TEXT_REGION_LENGTH__+0x7e006a>
    EICRB = ((0x01 << ISC61) | (0x01 << ISC71));									//trigger설정 : falling edge
 36e:	8a bf       	out	0x3a, r24	; 58
    EIMSK = ((0x01 << INT2) | (0x01 << INT3) | (0x01 << INT6) | (0x01 << INT7));
 370:	8c ec       	ldi	r24, 0xCC	; 204
 372:	89 bf       	out	0x39, r24	; 57
    
    /* 타이머 인터럽트 설정*/
    TCCR1B = ((0x01 << WGM12) | (0x01 << CS11) | (0x01 << CS10));					//타이머1 CTC모드, 분주 : 64
 374:	8b e0       	ldi	r24, 0x0B	; 11
 376:	8e bd       	out	0x2e, r24	; 46
    TCCR3B = ((0x01 << WGM32) | (0x01 << CS31) | (0x01 << CS30));					//타이머3 CTC모드, 분주 : 64
 378:	80 93 8a 00 	sts	0x008A, r24	; 0x80008a <__TEXT_REGION_LENGTH__+0x7e008a>
    TIMSK = ((0x01 << OCIE1A));														//타이머1 출력 비교 매치 A 인터럽트 인에이블
 37c:	80 e1       	ldi	r24, 0x10	; 16
 37e:	87 bf       	out	0x37, r24	; 55
    ETIMSK = ((0x01 << OCIE3A));													//타이머3 출력 비교 매치 A 인터럽트 인에이블
 380:	80 93 7d 00 	sts	0x007D, r24	; 0x80007d <__TEXT_REGION_LENGTH__+0x7e007d>
    OCR1A = 1249;																	//5ms = (1/16) * 64 * (1249+1)
 384:	81 ee       	ldi	r24, 0xE1	; 225
 386:	94 e0       	ldi	r25, 0x04	; 4
 388:	9b bd       	out	0x2b, r25	; 43
 38a:	8a bd       	out	0x2a, r24	; 42
    OCR3A = 24999;																	//100ms = (1/16) * 64 * (24999+1)
 38c:	87 ea       	ldi	r24, 0xA7	; 167
 38e:	91 e6       	ldi	r25, 0x61	; 97
 390:	90 93 87 00 	sts	0x0087, r25	; 0x800087 <__TEXT_REGION_LENGTH__+0x7e0087>
 394:	80 93 86 00 	sts	0x0086, r24	; 0x800086 <__TEXT_REGION_LENGTH__+0x7e0086>

    sei();
 398:	78 94       	sei

    while(1)
    {
        sprintf(TEMP, "%04d", count);
 39a:	00 e0       	ldi	r16, 0x00	; 0
 39c:	11 e0       	ldi	r17, 0x01	; 1
 39e:	c7 e1       	ldi	r28, 0x17	; 23
 3a0:	d1 e0       	ldi	r29, 0x01	; 1
 3a2:	80 91 15 01 	lds	r24, 0x0115	; 0x800115 <count>
 3a6:	90 91 16 01 	lds	r25, 0x0116	; 0x800116 <count+0x1>
 3aa:	9f 93       	push	r25
 3ac:	8f 93       	push	r24
 3ae:	1f 93       	push	r17
 3b0:	0f 93       	push	r16
 3b2:	df 93       	push	r29
 3b4:	cf 93       	push	r28
 3b6:	2d d0       	rcall	.+90     	; 0x412 <sprintf>
        Disp_FND();
 3b8:	94 df       	rcall	.-216    	; 0x2e2 <Disp_FND>
 3ba:	0f 90       	pop	r0
 3bc:	0f 90       	pop	r0
 3be:	0f 90       	pop	r0
 3c0:	0f 90       	pop	r0
 3c2:	0f 90       	pop	r0
 3c4:	0f 90       	pop	r0
 3c6:	ed cf       	rjmp	.-38     	; 0x3a2 <main+0x4a>

000003c8 <atoi>:
 3c8:	fc 01       	movw	r30, r24
 3ca:	88 27       	eor	r24, r24
 3cc:	99 27       	eor	r25, r25
 3ce:	e8 94       	clt
 3d0:	21 91       	ld	r18, Z+
 3d2:	20 32       	cpi	r18, 0x20	; 32
 3d4:	e9 f3       	breq	.-6      	; 0x3d0 <atoi+0x8>
 3d6:	29 30       	cpi	r18, 0x09	; 9
 3d8:	10 f0       	brcs	.+4      	; 0x3de <atoi+0x16>
 3da:	2e 30       	cpi	r18, 0x0E	; 14
 3dc:	c8 f3       	brcs	.-14     	; 0x3d0 <atoi+0x8>
 3de:	2b 32       	cpi	r18, 0x2B	; 43
 3e0:	39 f0       	breq	.+14     	; 0x3f0 <atoi+0x28>
 3e2:	2d 32       	cpi	r18, 0x2D	; 45
 3e4:	31 f4       	brne	.+12     	; 0x3f2 <atoi+0x2a>
 3e6:	68 94       	set
 3e8:	03 c0       	rjmp	.+6      	; 0x3f0 <atoi+0x28>
 3ea:	0b d0       	rcall	.+22     	; 0x402 <__mulhi_const_10>
 3ec:	82 0f       	add	r24, r18
 3ee:	91 1d       	adc	r25, r1
 3f0:	21 91       	ld	r18, Z+
 3f2:	20 53       	subi	r18, 0x30	; 48
 3f4:	2a 30       	cpi	r18, 0x0A	; 10
 3f6:	c8 f3       	brcs	.-14     	; 0x3ea <atoi+0x22>
 3f8:	1e f4       	brtc	.+6      	; 0x400 <__LOCK_REGION_LENGTH__>
 3fa:	90 95       	com	r25
 3fc:	81 95       	neg	r24
 3fe:	9f 4f       	sbci	r25, 0xFF	; 255
 400:	08 95       	ret

00000402 <__mulhi_const_10>:
 402:	7a e0       	ldi	r23, 0x0A	; 10
 404:	97 9f       	mul	r25, r23
 406:	90 2d       	mov	r25, r0
 408:	87 9f       	mul	r24, r23
 40a:	80 2d       	mov	r24, r0
 40c:	91 0d       	add	r25, r1
 40e:	11 24       	eor	r1, r1
 410:	08 95       	ret

00000412 <sprintf>:
 412:	0f 93       	push	r16
 414:	1f 93       	push	r17
 416:	cf 93       	push	r28
 418:	df 93       	push	r29
 41a:	cd b7       	in	r28, 0x3d	; 61
 41c:	de b7       	in	r29, 0x3e	; 62
 41e:	2e 97       	sbiw	r28, 0x0e	; 14
 420:	0f b6       	in	r0, 0x3f	; 63
 422:	f8 94       	cli
 424:	de bf       	out	0x3e, r29	; 62
 426:	0f be       	out	0x3f, r0	; 63
 428:	cd bf       	out	0x3d, r28	; 61
 42a:	0d 89       	ldd	r16, Y+21	; 0x15
 42c:	1e 89       	ldd	r17, Y+22	; 0x16
 42e:	86 e0       	ldi	r24, 0x06	; 6
 430:	8c 83       	std	Y+4, r24	; 0x04
 432:	1a 83       	std	Y+2, r17	; 0x02
 434:	09 83       	std	Y+1, r16	; 0x01
 436:	8f ef       	ldi	r24, 0xFF	; 255
 438:	9f e7       	ldi	r25, 0x7F	; 127
 43a:	9e 83       	std	Y+6, r25	; 0x06
 43c:	8d 83       	std	Y+5, r24	; 0x05
 43e:	ae 01       	movw	r20, r28
 440:	47 5e       	subi	r20, 0xE7	; 231
 442:	5f 4f       	sbci	r21, 0xFF	; 255
 444:	6f 89       	ldd	r22, Y+23	; 0x17
 446:	78 8d       	ldd	r23, Y+24	; 0x18
 448:	ce 01       	movw	r24, r28
 44a:	01 96       	adiw	r24, 0x01	; 1
 44c:	10 d0       	rcall	.+32     	; 0x46e <vfprintf>
 44e:	ef 81       	ldd	r30, Y+7	; 0x07
 450:	f8 85       	ldd	r31, Y+8	; 0x08
 452:	e0 0f       	add	r30, r16
 454:	f1 1f       	adc	r31, r17
 456:	10 82       	st	Z, r1
 458:	2e 96       	adiw	r28, 0x0e	; 14
 45a:	0f b6       	in	r0, 0x3f	; 63
 45c:	f8 94       	cli
 45e:	de bf       	out	0x3e, r29	; 62
 460:	0f be       	out	0x3f, r0	; 63
 462:	cd bf       	out	0x3d, r28	; 61
 464:	df 91       	pop	r29
 466:	cf 91       	pop	r28
 468:	1f 91       	pop	r17
 46a:	0f 91       	pop	r16
 46c:	08 95       	ret

0000046e <vfprintf>:
 46e:	2f 92       	push	r2
 470:	3f 92       	push	r3
 472:	4f 92       	push	r4
 474:	5f 92       	push	r5
 476:	6f 92       	push	r6
 478:	7f 92       	push	r7
 47a:	8f 92       	push	r8
 47c:	9f 92       	push	r9
 47e:	af 92       	push	r10
 480:	bf 92       	push	r11
 482:	cf 92       	push	r12
 484:	df 92       	push	r13
 486:	ef 92       	push	r14
 488:	ff 92       	push	r15
 48a:	0f 93       	push	r16
 48c:	1f 93       	push	r17
 48e:	cf 93       	push	r28
 490:	df 93       	push	r29
 492:	cd b7       	in	r28, 0x3d	; 61
 494:	de b7       	in	r29, 0x3e	; 62
 496:	2b 97       	sbiw	r28, 0x0b	; 11
 498:	0f b6       	in	r0, 0x3f	; 63
 49a:	f8 94       	cli
 49c:	de bf       	out	0x3e, r29	; 62
 49e:	0f be       	out	0x3f, r0	; 63
 4a0:	cd bf       	out	0x3d, r28	; 61
 4a2:	6c 01       	movw	r12, r24
 4a4:	7b 01       	movw	r14, r22
 4a6:	8a 01       	movw	r16, r20
 4a8:	fc 01       	movw	r30, r24
 4aa:	17 82       	std	Z+7, r1	; 0x07
 4ac:	16 82       	std	Z+6, r1	; 0x06
 4ae:	83 81       	ldd	r24, Z+3	; 0x03
 4b0:	81 ff       	sbrs	r24, 1
 4b2:	bf c1       	rjmp	.+894    	; 0x832 <vfprintf+0x3c4>
 4b4:	ce 01       	movw	r24, r28
 4b6:	01 96       	adiw	r24, 0x01	; 1
 4b8:	3c 01       	movw	r6, r24
 4ba:	f6 01       	movw	r30, r12
 4bc:	93 81       	ldd	r25, Z+3	; 0x03
 4be:	f7 01       	movw	r30, r14
 4c0:	93 fd       	sbrc	r25, 3
 4c2:	85 91       	lpm	r24, Z+
 4c4:	93 ff       	sbrs	r25, 3
 4c6:	81 91       	ld	r24, Z+
 4c8:	7f 01       	movw	r14, r30
 4ca:	88 23       	and	r24, r24
 4cc:	09 f4       	brne	.+2      	; 0x4d0 <vfprintf+0x62>
 4ce:	ad c1       	rjmp	.+858    	; 0x82a <vfprintf+0x3bc>
 4d0:	85 32       	cpi	r24, 0x25	; 37
 4d2:	39 f4       	brne	.+14     	; 0x4e2 <vfprintf+0x74>
 4d4:	93 fd       	sbrc	r25, 3
 4d6:	85 91       	lpm	r24, Z+
 4d8:	93 ff       	sbrs	r25, 3
 4da:	81 91       	ld	r24, Z+
 4dc:	7f 01       	movw	r14, r30
 4de:	85 32       	cpi	r24, 0x25	; 37
 4e0:	21 f4       	brne	.+8      	; 0x4ea <vfprintf+0x7c>
 4e2:	b6 01       	movw	r22, r12
 4e4:	90 e0       	ldi	r25, 0x00	; 0
 4e6:	d6 d1       	rcall	.+940    	; 0x894 <fputc>
 4e8:	e8 cf       	rjmp	.-48     	; 0x4ba <vfprintf+0x4c>
 4ea:	91 2c       	mov	r9, r1
 4ec:	21 2c       	mov	r2, r1
 4ee:	31 2c       	mov	r3, r1
 4f0:	ff e1       	ldi	r31, 0x1F	; 31
 4f2:	f3 15       	cp	r31, r3
 4f4:	d8 f0       	brcs	.+54     	; 0x52c <vfprintf+0xbe>
 4f6:	8b 32       	cpi	r24, 0x2B	; 43
 4f8:	79 f0       	breq	.+30     	; 0x518 <vfprintf+0xaa>
 4fa:	38 f4       	brcc	.+14     	; 0x50a <vfprintf+0x9c>
 4fc:	80 32       	cpi	r24, 0x20	; 32
 4fe:	79 f0       	breq	.+30     	; 0x51e <vfprintf+0xb0>
 500:	83 32       	cpi	r24, 0x23	; 35
 502:	a1 f4       	brne	.+40     	; 0x52c <vfprintf+0xbe>
 504:	23 2d       	mov	r18, r3
 506:	20 61       	ori	r18, 0x10	; 16
 508:	1d c0       	rjmp	.+58     	; 0x544 <vfprintf+0xd6>
 50a:	8d 32       	cpi	r24, 0x2D	; 45
 50c:	61 f0       	breq	.+24     	; 0x526 <vfprintf+0xb8>
 50e:	80 33       	cpi	r24, 0x30	; 48
 510:	69 f4       	brne	.+26     	; 0x52c <vfprintf+0xbe>
 512:	23 2d       	mov	r18, r3
 514:	21 60       	ori	r18, 0x01	; 1
 516:	16 c0       	rjmp	.+44     	; 0x544 <vfprintf+0xd6>
 518:	83 2d       	mov	r24, r3
 51a:	82 60       	ori	r24, 0x02	; 2
 51c:	38 2e       	mov	r3, r24
 51e:	e3 2d       	mov	r30, r3
 520:	e4 60       	ori	r30, 0x04	; 4
 522:	3e 2e       	mov	r3, r30
 524:	2a c0       	rjmp	.+84     	; 0x57a <vfprintf+0x10c>
 526:	f3 2d       	mov	r31, r3
 528:	f8 60       	ori	r31, 0x08	; 8
 52a:	1d c0       	rjmp	.+58     	; 0x566 <vfprintf+0xf8>
 52c:	37 fc       	sbrc	r3, 7
 52e:	2d c0       	rjmp	.+90     	; 0x58a <vfprintf+0x11c>
 530:	20 ed       	ldi	r18, 0xD0	; 208
 532:	28 0f       	add	r18, r24
 534:	2a 30       	cpi	r18, 0x0A	; 10
 536:	40 f0       	brcs	.+16     	; 0x548 <vfprintf+0xda>
 538:	8e 32       	cpi	r24, 0x2E	; 46
 53a:	b9 f4       	brne	.+46     	; 0x56a <vfprintf+0xfc>
 53c:	36 fc       	sbrc	r3, 6
 53e:	75 c1       	rjmp	.+746    	; 0x82a <vfprintf+0x3bc>
 540:	23 2d       	mov	r18, r3
 542:	20 64       	ori	r18, 0x40	; 64
 544:	32 2e       	mov	r3, r18
 546:	19 c0       	rjmp	.+50     	; 0x57a <vfprintf+0x10c>
 548:	36 fe       	sbrs	r3, 6
 54a:	06 c0       	rjmp	.+12     	; 0x558 <vfprintf+0xea>
 54c:	8a e0       	ldi	r24, 0x0A	; 10
 54e:	98 9e       	mul	r9, r24
 550:	20 0d       	add	r18, r0
 552:	11 24       	eor	r1, r1
 554:	92 2e       	mov	r9, r18
 556:	11 c0       	rjmp	.+34     	; 0x57a <vfprintf+0x10c>
 558:	ea e0       	ldi	r30, 0x0A	; 10
 55a:	2e 9e       	mul	r2, r30
 55c:	20 0d       	add	r18, r0
 55e:	11 24       	eor	r1, r1
 560:	22 2e       	mov	r2, r18
 562:	f3 2d       	mov	r31, r3
 564:	f0 62       	ori	r31, 0x20	; 32
 566:	3f 2e       	mov	r3, r31
 568:	08 c0       	rjmp	.+16     	; 0x57a <vfprintf+0x10c>
 56a:	8c 36       	cpi	r24, 0x6C	; 108
 56c:	21 f4       	brne	.+8      	; 0x576 <vfprintf+0x108>
 56e:	83 2d       	mov	r24, r3
 570:	80 68       	ori	r24, 0x80	; 128
 572:	38 2e       	mov	r3, r24
 574:	02 c0       	rjmp	.+4      	; 0x57a <vfprintf+0x10c>
 576:	88 36       	cpi	r24, 0x68	; 104
 578:	41 f4       	brne	.+16     	; 0x58a <vfprintf+0x11c>
 57a:	f7 01       	movw	r30, r14
 57c:	93 fd       	sbrc	r25, 3
 57e:	85 91       	lpm	r24, Z+
 580:	93 ff       	sbrs	r25, 3
 582:	81 91       	ld	r24, Z+
 584:	7f 01       	movw	r14, r30
 586:	81 11       	cpse	r24, r1
 588:	b3 cf       	rjmp	.-154    	; 0x4f0 <vfprintf+0x82>
 58a:	98 2f       	mov	r25, r24
 58c:	9f 7d       	andi	r25, 0xDF	; 223
 58e:	95 54       	subi	r25, 0x45	; 69
 590:	93 30       	cpi	r25, 0x03	; 3
 592:	28 f4       	brcc	.+10     	; 0x59e <vfprintf+0x130>
 594:	0c 5f       	subi	r16, 0xFC	; 252
 596:	1f 4f       	sbci	r17, 0xFF	; 255
 598:	9f e3       	ldi	r25, 0x3F	; 63
 59a:	99 83       	std	Y+1, r25	; 0x01
 59c:	0d c0       	rjmp	.+26     	; 0x5b8 <vfprintf+0x14a>
 59e:	83 36       	cpi	r24, 0x63	; 99
 5a0:	31 f0       	breq	.+12     	; 0x5ae <vfprintf+0x140>
 5a2:	83 37       	cpi	r24, 0x73	; 115
 5a4:	71 f0       	breq	.+28     	; 0x5c2 <vfprintf+0x154>
 5a6:	83 35       	cpi	r24, 0x53	; 83
 5a8:	09 f0       	breq	.+2      	; 0x5ac <vfprintf+0x13e>
 5aa:	55 c0       	rjmp	.+170    	; 0x656 <vfprintf+0x1e8>
 5ac:	20 c0       	rjmp	.+64     	; 0x5ee <vfprintf+0x180>
 5ae:	f8 01       	movw	r30, r16
 5b0:	80 81       	ld	r24, Z
 5b2:	89 83       	std	Y+1, r24	; 0x01
 5b4:	0e 5f       	subi	r16, 0xFE	; 254
 5b6:	1f 4f       	sbci	r17, 0xFF	; 255
 5b8:	88 24       	eor	r8, r8
 5ba:	83 94       	inc	r8
 5bc:	91 2c       	mov	r9, r1
 5be:	53 01       	movw	r10, r6
 5c0:	12 c0       	rjmp	.+36     	; 0x5e6 <vfprintf+0x178>
 5c2:	28 01       	movw	r4, r16
 5c4:	f2 e0       	ldi	r31, 0x02	; 2
 5c6:	4f 0e       	add	r4, r31
 5c8:	51 1c       	adc	r5, r1
 5ca:	f8 01       	movw	r30, r16
 5cc:	a0 80       	ld	r10, Z
 5ce:	b1 80       	ldd	r11, Z+1	; 0x01
 5d0:	36 fe       	sbrs	r3, 6
 5d2:	03 c0       	rjmp	.+6      	; 0x5da <vfprintf+0x16c>
 5d4:	69 2d       	mov	r22, r9
 5d6:	70 e0       	ldi	r23, 0x00	; 0
 5d8:	02 c0       	rjmp	.+4      	; 0x5de <vfprintf+0x170>
 5da:	6f ef       	ldi	r22, 0xFF	; 255
 5dc:	7f ef       	ldi	r23, 0xFF	; 255
 5de:	c5 01       	movw	r24, r10
 5e0:	4e d1       	rcall	.+668    	; 0x87e <strnlen>
 5e2:	4c 01       	movw	r8, r24
 5e4:	82 01       	movw	r16, r4
 5e6:	f3 2d       	mov	r31, r3
 5e8:	ff 77       	andi	r31, 0x7F	; 127
 5ea:	3f 2e       	mov	r3, r31
 5ec:	15 c0       	rjmp	.+42     	; 0x618 <vfprintf+0x1aa>
 5ee:	28 01       	movw	r4, r16
 5f0:	22 e0       	ldi	r18, 0x02	; 2
 5f2:	42 0e       	add	r4, r18
 5f4:	51 1c       	adc	r5, r1
 5f6:	f8 01       	movw	r30, r16
 5f8:	a0 80       	ld	r10, Z
 5fa:	b1 80       	ldd	r11, Z+1	; 0x01
 5fc:	36 fe       	sbrs	r3, 6
 5fe:	03 c0       	rjmp	.+6      	; 0x606 <vfprintf+0x198>
 600:	69 2d       	mov	r22, r9
 602:	70 e0       	ldi	r23, 0x00	; 0
 604:	02 c0       	rjmp	.+4      	; 0x60a <vfprintf+0x19c>
 606:	6f ef       	ldi	r22, 0xFF	; 255
 608:	7f ef       	ldi	r23, 0xFF	; 255
 60a:	c5 01       	movw	r24, r10
 60c:	2d d1       	rcall	.+602    	; 0x868 <strnlen_P>
 60e:	4c 01       	movw	r8, r24
 610:	f3 2d       	mov	r31, r3
 612:	f0 68       	ori	r31, 0x80	; 128
 614:	3f 2e       	mov	r3, r31
 616:	82 01       	movw	r16, r4
 618:	33 fc       	sbrc	r3, 3
 61a:	19 c0       	rjmp	.+50     	; 0x64e <vfprintf+0x1e0>
 61c:	82 2d       	mov	r24, r2
 61e:	90 e0       	ldi	r25, 0x00	; 0
 620:	88 16       	cp	r8, r24
 622:	99 06       	cpc	r9, r25
 624:	a0 f4       	brcc	.+40     	; 0x64e <vfprintf+0x1e0>
 626:	b6 01       	movw	r22, r12
 628:	80 e2       	ldi	r24, 0x20	; 32
 62a:	90 e0       	ldi	r25, 0x00	; 0
 62c:	33 d1       	rcall	.+614    	; 0x894 <fputc>
 62e:	2a 94       	dec	r2
 630:	f5 cf       	rjmp	.-22     	; 0x61c <vfprintf+0x1ae>
 632:	f5 01       	movw	r30, r10
 634:	37 fc       	sbrc	r3, 7
 636:	85 91       	lpm	r24, Z+
 638:	37 fe       	sbrs	r3, 7
 63a:	81 91       	ld	r24, Z+
 63c:	5f 01       	movw	r10, r30
 63e:	b6 01       	movw	r22, r12
 640:	90 e0       	ldi	r25, 0x00	; 0
 642:	28 d1       	rcall	.+592    	; 0x894 <fputc>
 644:	21 10       	cpse	r2, r1
 646:	2a 94       	dec	r2
 648:	21 e0       	ldi	r18, 0x01	; 1
 64a:	82 1a       	sub	r8, r18
 64c:	91 08       	sbc	r9, r1
 64e:	81 14       	cp	r8, r1
 650:	91 04       	cpc	r9, r1
 652:	79 f7       	brne	.-34     	; 0x632 <vfprintf+0x1c4>
 654:	e1 c0       	rjmp	.+450    	; 0x818 <vfprintf+0x3aa>
 656:	84 36       	cpi	r24, 0x64	; 100
 658:	11 f0       	breq	.+4      	; 0x65e <vfprintf+0x1f0>
 65a:	89 36       	cpi	r24, 0x69	; 105
 65c:	39 f5       	brne	.+78     	; 0x6ac <vfprintf+0x23e>
 65e:	f8 01       	movw	r30, r16
 660:	37 fe       	sbrs	r3, 7
 662:	07 c0       	rjmp	.+14     	; 0x672 <vfprintf+0x204>
 664:	60 81       	ld	r22, Z
 666:	71 81       	ldd	r23, Z+1	; 0x01
 668:	82 81       	ldd	r24, Z+2	; 0x02
 66a:	93 81       	ldd	r25, Z+3	; 0x03
 66c:	0c 5f       	subi	r16, 0xFC	; 252
 66e:	1f 4f       	sbci	r17, 0xFF	; 255
 670:	08 c0       	rjmp	.+16     	; 0x682 <vfprintf+0x214>
 672:	60 81       	ld	r22, Z
 674:	71 81       	ldd	r23, Z+1	; 0x01
 676:	07 2e       	mov	r0, r23
 678:	00 0c       	add	r0, r0
 67a:	88 0b       	sbc	r24, r24
 67c:	99 0b       	sbc	r25, r25
 67e:	0e 5f       	subi	r16, 0xFE	; 254
 680:	1f 4f       	sbci	r17, 0xFF	; 255
 682:	f3 2d       	mov	r31, r3
 684:	ff 76       	andi	r31, 0x6F	; 111
 686:	3f 2e       	mov	r3, r31
 688:	97 ff       	sbrs	r25, 7
 68a:	09 c0       	rjmp	.+18     	; 0x69e <vfprintf+0x230>
 68c:	90 95       	com	r25
 68e:	80 95       	com	r24
 690:	70 95       	com	r23
 692:	61 95       	neg	r22
 694:	7f 4f       	sbci	r23, 0xFF	; 255
 696:	8f 4f       	sbci	r24, 0xFF	; 255
 698:	9f 4f       	sbci	r25, 0xFF	; 255
 69a:	f0 68       	ori	r31, 0x80	; 128
 69c:	3f 2e       	mov	r3, r31
 69e:	2a e0       	ldi	r18, 0x0A	; 10
 6a0:	30 e0       	ldi	r19, 0x00	; 0
 6a2:	a3 01       	movw	r20, r6
 6a4:	33 d1       	rcall	.+614    	; 0x90c <__ultoa_invert>
 6a6:	88 2e       	mov	r8, r24
 6a8:	86 18       	sub	r8, r6
 6aa:	44 c0       	rjmp	.+136    	; 0x734 <vfprintf+0x2c6>
 6ac:	85 37       	cpi	r24, 0x75	; 117
 6ae:	31 f4       	brne	.+12     	; 0x6bc <vfprintf+0x24e>
 6b0:	23 2d       	mov	r18, r3
 6b2:	2f 7e       	andi	r18, 0xEF	; 239
 6b4:	b2 2e       	mov	r11, r18
 6b6:	2a e0       	ldi	r18, 0x0A	; 10
 6b8:	30 e0       	ldi	r19, 0x00	; 0
 6ba:	25 c0       	rjmp	.+74     	; 0x706 <vfprintf+0x298>
 6bc:	93 2d       	mov	r25, r3
 6be:	99 7f       	andi	r25, 0xF9	; 249
 6c0:	b9 2e       	mov	r11, r25
 6c2:	8f 36       	cpi	r24, 0x6F	; 111
 6c4:	c1 f0       	breq	.+48     	; 0x6f6 <vfprintf+0x288>
 6c6:	18 f4       	brcc	.+6      	; 0x6ce <vfprintf+0x260>
 6c8:	88 35       	cpi	r24, 0x58	; 88
 6ca:	79 f0       	breq	.+30     	; 0x6ea <vfprintf+0x27c>
 6cc:	ae c0       	rjmp	.+348    	; 0x82a <vfprintf+0x3bc>
 6ce:	80 37       	cpi	r24, 0x70	; 112
 6d0:	19 f0       	breq	.+6      	; 0x6d8 <vfprintf+0x26a>
 6d2:	88 37       	cpi	r24, 0x78	; 120
 6d4:	21 f0       	breq	.+8      	; 0x6de <vfprintf+0x270>
 6d6:	a9 c0       	rjmp	.+338    	; 0x82a <vfprintf+0x3bc>
 6d8:	e9 2f       	mov	r30, r25
 6da:	e0 61       	ori	r30, 0x10	; 16
 6dc:	be 2e       	mov	r11, r30
 6de:	b4 fe       	sbrs	r11, 4
 6e0:	0d c0       	rjmp	.+26     	; 0x6fc <vfprintf+0x28e>
 6e2:	fb 2d       	mov	r31, r11
 6e4:	f4 60       	ori	r31, 0x04	; 4
 6e6:	bf 2e       	mov	r11, r31
 6e8:	09 c0       	rjmp	.+18     	; 0x6fc <vfprintf+0x28e>
 6ea:	34 fe       	sbrs	r3, 4
 6ec:	0a c0       	rjmp	.+20     	; 0x702 <vfprintf+0x294>
 6ee:	29 2f       	mov	r18, r25
 6f0:	26 60       	ori	r18, 0x06	; 6
 6f2:	b2 2e       	mov	r11, r18
 6f4:	06 c0       	rjmp	.+12     	; 0x702 <vfprintf+0x294>
 6f6:	28 e0       	ldi	r18, 0x08	; 8
 6f8:	30 e0       	ldi	r19, 0x00	; 0
 6fa:	05 c0       	rjmp	.+10     	; 0x706 <vfprintf+0x298>
 6fc:	20 e1       	ldi	r18, 0x10	; 16
 6fe:	30 e0       	ldi	r19, 0x00	; 0
 700:	02 c0       	rjmp	.+4      	; 0x706 <vfprintf+0x298>
 702:	20 e1       	ldi	r18, 0x10	; 16
 704:	32 e0       	ldi	r19, 0x02	; 2
 706:	f8 01       	movw	r30, r16
 708:	b7 fe       	sbrs	r11, 7
 70a:	07 c0       	rjmp	.+14     	; 0x71a <vfprintf+0x2ac>
 70c:	60 81       	ld	r22, Z
 70e:	71 81       	ldd	r23, Z+1	; 0x01
 710:	82 81       	ldd	r24, Z+2	; 0x02
 712:	93 81       	ldd	r25, Z+3	; 0x03
 714:	0c 5f       	subi	r16, 0xFC	; 252
 716:	1f 4f       	sbci	r17, 0xFF	; 255
 718:	06 c0       	rjmp	.+12     	; 0x726 <vfprintf+0x2b8>
 71a:	60 81       	ld	r22, Z
 71c:	71 81       	ldd	r23, Z+1	; 0x01
 71e:	80 e0       	ldi	r24, 0x00	; 0
 720:	90 e0       	ldi	r25, 0x00	; 0
 722:	0e 5f       	subi	r16, 0xFE	; 254
 724:	1f 4f       	sbci	r17, 0xFF	; 255
 726:	a3 01       	movw	r20, r6
 728:	f1 d0       	rcall	.+482    	; 0x90c <__ultoa_invert>
 72a:	88 2e       	mov	r8, r24
 72c:	86 18       	sub	r8, r6
 72e:	fb 2d       	mov	r31, r11
 730:	ff 77       	andi	r31, 0x7F	; 127
 732:	3f 2e       	mov	r3, r31
 734:	36 fe       	sbrs	r3, 6
 736:	0d c0       	rjmp	.+26     	; 0x752 <vfprintf+0x2e4>
 738:	23 2d       	mov	r18, r3
 73a:	2e 7f       	andi	r18, 0xFE	; 254
 73c:	a2 2e       	mov	r10, r18
 73e:	89 14       	cp	r8, r9
 740:	58 f4       	brcc	.+22     	; 0x758 <vfprintf+0x2ea>
 742:	34 fe       	sbrs	r3, 4
 744:	0b c0       	rjmp	.+22     	; 0x75c <vfprintf+0x2ee>
 746:	32 fc       	sbrc	r3, 2
 748:	09 c0       	rjmp	.+18     	; 0x75c <vfprintf+0x2ee>
 74a:	83 2d       	mov	r24, r3
 74c:	8e 7e       	andi	r24, 0xEE	; 238
 74e:	a8 2e       	mov	r10, r24
 750:	05 c0       	rjmp	.+10     	; 0x75c <vfprintf+0x2ee>
 752:	b8 2c       	mov	r11, r8
 754:	a3 2c       	mov	r10, r3
 756:	03 c0       	rjmp	.+6      	; 0x75e <vfprintf+0x2f0>
 758:	b8 2c       	mov	r11, r8
 75a:	01 c0       	rjmp	.+2      	; 0x75e <vfprintf+0x2f0>
 75c:	b9 2c       	mov	r11, r9
 75e:	a4 fe       	sbrs	r10, 4
 760:	0f c0       	rjmp	.+30     	; 0x780 <vfprintf+0x312>
 762:	fe 01       	movw	r30, r28
 764:	e8 0d       	add	r30, r8
 766:	f1 1d       	adc	r31, r1
 768:	80 81       	ld	r24, Z
 76a:	80 33       	cpi	r24, 0x30	; 48
 76c:	21 f4       	brne	.+8      	; 0x776 <vfprintf+0x308>
 76e:	9a 2d       	mov	r25, r10
 770:	99 7e       	andi	r25, 0xE9	; 233
 772:	a9 2e       	mov	r10, r25
 774:	09 c0       	rjmp	.+18     	; 0x788 <vfprintf+0x31a>
 776:	a2 fe       	sbrs	r10, 2
 778:	06 c0       	rjmp	.+12     	; 0x786 <vfprintf+0x318>
 77a:	b3 94       	inc	r11
 77c:	b3 94       	inc	r11
 77e:	04 c0       	rjmp	.+8      	; 0x788 <vfprintf+0x31a>
 780:	8a 2d       	mov	r24, r10
 782:	86 78       	andi	r24, 0x86	; 134
 784:	09 f0       	breq	.+2      	; 0x788 <vfprintf+0x31a>
 786:	b3 94       	inc	r11
 788:	a3 fc       	sbrc	r10, 3
 78a:	10 c0       	rjmp	.+32     	; 0x7ac <vfprintf+0x33e>
 78c:	a0 fe       	sbrs	r10, 0
 78e:	06 c0       	rjmp	.+12     	; 0x79c <vfprintf+0x32e>
 790:	b2 14       	cp	r11, r2
 792:	80 f4       	brcc	.+32     	; 0x7b4 <vfprintf+0x346>
 794:	28 0c       	add	r2, r8
 796:	92 2c       	mov	r9, r2
 798:	9b 18       	sub	r9, r11
 79a:	0d c0       	rjmp	.+26     	; 0x7b6 <vfprintf+0x348>
 79c:	b2 14       	cp	r11, r2
 79e:	58 f4       	brcc	.+22     	; 0x7b6 <vfprintf+0x348>
 7a0:	b6 01       	movw	r22, r12
 7a2:	80 e2       	ldi	r24, 0x20	; 32
 7a4:	90 e0       	ldi	r25, 0x00	; 0
 7a6:	76 d0       	rcall	.+236    	; 0x894 <fputc>
 7a8:	b3 94       	inc	r11
 7aa:	f8 cf       	rjmp	.-16     	; 0x79c <vfprintf+0x32e>
 7ac:	b2 14       	cp	r11, r2
 7ae:	18 f4       	brcc	.+6      	; 0x7b6 <vfprintf+0x348>
 7b0:	2b 18       	sub	r2, r11
 7b2:	02 c0       	rjmp	.+4      	; 0x7b8 <vfprintf+0x34a>
 7b4:	98 2c       	mov	r9, r8
 7b6:	21 2c       	mov	r2, r1
 7b8:	a4 fe       	sbrs	r10, 4
 7ba:	0f c0       	rjmp	.+30     	; 0x7da <vfprintf+0x36c>
 7bc:	b6 01       	movw	r22, r12
 7be:	80 e3       	ldi	r24, 0x30	; 48
 7c0:	90 e0       	ldi	r25, 0x00	; 0
 7c2:	68 d0       	rcall	.+208    	; 0x894 <fputc>
 7c4:	a2 fe       	sbrs	r10, 2
 7c6:	16 c0       	rjmp	.+44     	; 0x7f4 <vfprintf+0x386>
 7c8:	a1 fc       	sbrc	r10, 1
 7ca:	03 c0       	rjmp	.+6      	; 0x7d2 <vfprintf+0x364>
 7cc:	88 e7       	ldi	r24, 0x78	; 120
 7ce:	90 e0       	ldi	r25, 0x00	; 0
 7d0:	02 c0       	rjmp	.+4      	; 0x7d6 <vfprintf+0x368>
 7d2:	88 e5       	ldi	r24, 0x58	; 88
 7d4:	90 e0       	ldi	r25, 0x00	; 0
 7d6:	b6 01       	movw	r22, r12
 7d8:	0c c0       	rjmp	.+24     	; 0x7f2 <vfprintf+0x384>
 7da:	8a 2d       	mov	r24, r10
 7dc:	86 78       	andi	r24, 0x86	; 134
 7de:	51 f0       	breq	.+20     	; 0x7f4 <vfprintf+0x386>
 7e0:	a1 fe       	sbrs	r10, 1
 7e2:	02 c0       	rjmp	.+4      	; 0x7e8 <vfprintf+0x37a>
 7e4:	8b e2       	ldi	r24, 0x2B	; 43
 7e6:	01 c0       	rjmp	.+2      	; 0x7ea <vfprintf+0x37c>
 7e8:	80 e2       	ldi	r24, 0x20	; 32
 7ea:	a7 fc       	sbrc	r10, 7
 7ec:	8d e2       	ldi	r24, 0x2D	; 45
 7ee:	b6 01       	movw	r22, r12
 7f0:	90 e0       	ldi	r25, 0x00	; 0
 7f2:	50 d0       	rcall	.+160    	; 0x894 <fputc>
 7f4:	89 14       	cp	r8, r9
 7f6:	30 f4       	brcc	.+12     	; 0x804 <vfprintf+0x396>
 7f8:	b6 01       	movw	r22, r12
 7fa:	80 e3       	ldi	r24, 0x30	; 48
 7fc:	90 e0       	ldi	r25, 0x00	; 0
 7fe:	4a d0       	rcall	.+148    	; 0x894 <fputc>
 800:	9a 94       	dec	r9
 802:	f8 cf       	rjmp	.-16     	; 0x7f4 <vfprintf+0x386>
 804:	8a 94       	dec	r8
 806:	f3 01       	movw	r30, r6
 808:	e8 0d       	add	r30, r8
 80a:	f1 1d       	adc	r31, r1
 80c:	80 81       	ld	r24, Z
 80e:	b6 01       	movw	r22, r12
 810:	90 e0       	ldi	r25, 0x00	; 0
 812:	40 d0       	rcall	.+128    	; 0x894 <fputc>
 814:	81 10       	cpse	r8, r1
 816:	f6 cf       	rjmp	.-20     	; 0x804 <vfprintf+0x396>
 818:	22 20       	and	r2, r2
 81a:	09 f4       	brne	.+2      	; 0x81e <vfprintf+0x3b0>
 81c:	4e ce       	rjmp	.-868    	; 0x4ba <vfprintf+0x4c>
 81e:	b6 01       	movw	r22, r12
 820:	80 e2       	ldi	r24, 0x20	; 32
 822:	90 e0       	ldi	r25, 0x00	; 0
 824:	37 d0       	rcall	.+110    	; 0x894 <fputc>
 826:	2a 94       	dec	r2
 828:	f7 cf       	rjmp	.-18     	; 0x818 <vfprintf+0x3aa>
 82a:	f6 01       	movw	r30, r12
 82c:	86 81       	ldd	r24, Z+6	; 0x06
 82e:	97 81       	ldd	r25, Z+7	; 0x07
 830:	02 c0       	rjmp	.+4      	; 0x836 <vfprintf+0x3c8>
 832:	8f ef       	ldi	r24, 0xFF	; 255
 834:	9f ef       	ldi	r25, 0xFF	; 255
 836:	2b 96       	adiw	r28, 0x0b	; 11
 838:	0f b6       	in	r0, 0x3f	; 63
 83a:	f8 94       	cli
 83c:	de bf       	out	0x3e, r29	; 62
 83e:	0f be       	out	0x3f, r0	; 63
 840:	cd bf       	out	0x3d, r28	; 61
 842:	df 91       	pop	r29
 844:	cf 91       	pop	r28
 846:	1f 91       	pop	r17
 848:	0f 91       	pop	r16
 84a:	ff 90       	pop	r15
 84c:	ef 90       	pop	r14
 84e:	df 90       	pop	r13
 850:	cf 90       	pop	r12
 852:	bf 90       	pop	r11
 854:	af 90       	pop	r10
 856:	9f 90       	pop	r9
 858:	8f 90       	pop	r8
 85a:	7f 90       	pop	r7
 85c:	6f 90       	pop	r6
 85e:	5f 90       	pop	r5
 860:	4f 90       	pop	r4
 862:	3f 90       	pop	r3
 864:	2f 90       	pop	r2
 866:	08 95       	ret

00000868 <strnlen_P>:
 868:	fc 01       	movw	r30, r24
 86a:	05 90       	lpm	r0, Z+
 86c:	61 50       	subi	r22, 0x01	; 1
 86e:	70 40       	sbci	r23, 0x00	; 0
 870:	01 10       	cpse	r0, r1
 872:	d8 f7       	brcc	.-10     	; 0x86a <strnlen_P+0x2>
 874:	80 95       	com	r24
 876:	90 95       	com	r25
 878:	8e 0f       	add	r24, r30
 87a:	9f 1f       	adc	r25, r31
 87c:	08 95       	ret

0000087e <strnlen>:
 87e:	fc 01       	movw	r30, r24
 880:	61 50       	subi	r22, 0x01	; 1
 882:	70 40       	sbci	r23, 0x00	; 0
 884:	01 90       	ld	r0, Z+
 886:	01 10       	cpse	r0, r1
 888:	d8 f7       	brcc	.-10     	; 0x880 <strnlen+0x2>
 88a:	80 95       	com	r24
 88c:	90 95       	com	r25
 88e:	8e 0f       	add	r24, r30
 890:	9f 1f       	adc	r25, r31
 892:	08 95       	ret

00000894 <fputc>:
 894:	0f 93       	push	r16
 896:	1f 93       	push	r17
 898:	cf 93       	push	r28
 89a:	df 93       	push	r29
 89c:	fb 01       	movw	r30, r22
 89e:	23 81       	ldd	r18, Z+3	; 0x03
 8a0:	21 fd       	sbrc	r18, 1
 8a2:	03 c0       	rjmp	.+6      	; 0x8aa <fputc+0x16>
 8a4:	8f ef       	ldi	r24, 0xFF	; 255
 8a6:	9f ef       	ldi	r25, 0xFF	; 255
 8a8:	2c c0       	rjmp	.+88     	; 0x902 <fputc+0x6e>
 8aa:	22 ff       	sbrs	r18, 2
 8ac:	16 c0       	rjmp	.+44     	; 0x8da <fputc+0x46>
 8ae:	46 81       	ldd	r20, Z+6	; 0x06
 8b0:	57 81       	ldd	r21, Z+7	; 0x07
 8b2:	24 81       	ldd	r18, Z+4	; 0x04
 8b4:	35 81       	ldd	r19, Z+5	; 0x05
 8b6:	42 17       	cp	r20, r18
 8b8:	53 07       	cpc	r21, r19
 8ba:	44 f4       	brge	.+16     	; 0x8cc <fputc+0x38>
 8bc:	a0 81       	ld	r26, Z
 8be:	b1 81       	ldd	r27, Z+1	; 0x01
 8c0:	9d 01       	movw	r18, r26
 8c2:	2f 5f       	subi	r18, 0xFF	; 255
 8c4:	3f 4f       	sbci	r19, 0xFF	; 255
 8c6:	31 83       	std	Z+1, r19	; 0x01
 8c8:	20 83       	st	Z, r18
 8ca:	8c 93       	st	X, r24
 8cc:	26 81       	ldd	r18, Z+6	; 0x06
 8ce:	37 81       	ldd	r19, Z+7	; 0x07
 8d0:	2f 5f       	subi	r18, 0xFF	; 255
 8d2:	3f 4f       	sbci	r19, 0xFF	; 255
 8d4:	37 83       	std	Z+7, r19	; 0x07
 8d6:	26 83       	std	Z+6, r18	; 0x06
 8d8:	14 c0       	rjmp	.+40     	; 0x902 <fputc+0x6e>
 8da:	8b 01       	movw	r16, r22
 8dc:	ec 01       	movw	r28, r24
 8de:	fb 01       	movw	r30, r22
 8e0:	00 84       	ldd	r0, Z+8	; 0x08
 8e2:	f1 85       	ldd	r31, Z+9	; 0x09
 8e4:	e0 2d       	mov	r30, r0
 8e6:	09 95       	icall
 8e8:	89 2b       	or	r24, r25
 8ea:	e1 f6       	brne	.-72     	; 0x8a4 <fputc+0x10>
 8ec:	d8 01       	movw	r26, r16
 8ee:	16 96       	adiw	r26, 0x06	; 6
 8f0:	8d 91       	ld	r24, X+
 8f2:	9c 91       	ld	r25, X
 8f4:	17 97       	sbiw	r26, 0x07	; 7
 8f6:	01 96       	adiw	r24, 0x01	; 1
 8f8:	17 96       	adiw	r26, 0x07	; 7
 8fa:	9c 93       	st	X, r25
 8fc:	8e 93       	st	-X, r24
 8fe:	16 97       	sbiw	r26, 0x06	; 6
 900:	ce 01       	movw	r24, r28
 902:	df 91       	pop	r29
 904:	cf 91       	pop	r28
 906:	1f 91       	pop	r17
 908:	0f 91       	pop	r16
 90a:	08 95       	ret

0000090c <__ultoa_invert>:
 90c:	fa 01       	movw	r30, r20
 90e:	aa 27       	eor	r26, r26
 910:	28 30       	cpi	r18, 0x08	; 8
 912:	51 f1       	breq	.+84     	; 0x968 <__ultoa_invert+0x5c>
 914:	20 31       	cpi	r18, 0x10	; 16
 916:	81 f1       	breq	.+96     	; 0x978 <__ultoa_invert+0x6c>
 918:	e8 94       	clt
 91a:	6f 93       	push	r22
 91c:	6e 7f       	andi	r22, 0xFE	; 254
 91e:	6e 5f       	subi	r22, 0xFE	; 254
 920:	7f 4f       	sbci	r23, 0xFF	; 255
 922:	8f 4f       	sbci	r24, 0xFF	; 255
 924:	9f 4f       	sbci	r25, 0xFF	; 255
 926:	af 4f       	sbci	r26, 0xFF	; 255
 928:	b1 e0       	ldi	r27, 0x01	; 1
 92a:	3e d0       	rcall	.+124    	; 0x9a8 <__ultoa_invert+0x9c>
 92c:	b4 e0       	ldi	r27, 0x04	; 4
 92e:	3c d0       	rcall	.+120    	; 0x9a8 <__ultoa_invert+0x9c>
 930:	67 0f       	add	r22, r23
 932:	78 1f       	adc	r23, r24
 934:	89 1f       	adc	r24, r25
 936:	9a 1f       	adc	r25, r26
 938:	a1 1d       	adc	r26, r1
 93a:	68 0f       	add	r22, r24
 93c:	79 1f       	adc	r23, r25
 93e:	8a 1f       	adc	r24, r26
 940:	91 1d       	adc	r25, r1
 942:	a1 1d       	adc	r26, r1
 944:	6a 0f       	add	r22, r26
 946:	71 1d       	adc	r23, r1
 948:	81 1d       	adc	r24, r1
 94a:	91 1d       	adc	r25, r1
 94c:	a1 1d       	adc	r26, r1
 94e:	20 d0       	rcall	.+64     	; 0x990 <__ultoa_invert+0x84>
 950:	09 f4       	brne	.+2      	; 0x954 <__ultoa_invert+0x48>
 952:	68 94       	set
 954:	3f 91       	pop	r19
 956:	2a e0       	ldi	r18, 0x0A	; 10
 958:	26 9f       	mul	r18, r22
 95a:	11 24       	eor	r1, r1
 95c:	30 19       	sub	r19, r0
 95e:	30 5d       	subi	r19, 0xD0	; 208
 960:	31 93       	st	Z+, r19
 962:	de f6       	brtc	.-74     	; 0x91a <__ultoa_invert+0xe>
 964:	cf 01       	movw	r24, r30
 966:	08 95       	ret
 968:	46 2f       	mov	r20, r22
 96a:	47 70       	andi	r20, 0x07	; 7
 96c:	40 5d       	subi	r20, 0xD0	; 208
 96e:	41 93       	st	Z+, r20
 970:	b3 e0       	ldi	r27, 0x03	; 3
 972:	0f d0       	rcall	.+30     	; 0x992 <__ultoa_invert+0x86>
 974:	c9 f7       	brne	.-14     	; 0x968 <__ultoa_invert+0x5c>
 976:	f6 cf       	rjmp	.-20     	; 0x964 <__ultoa_invert+0x58>
 978:	46 2f       	mov	r20, r22
 97a:	4f 70       	andi	r20, 0x0F	; 15
 97c:	40 5d       	subi	r20, 0xD0	; 208
 97e:	4a 33       	cpi	r20, 0x3A	; 58
 980:	18 f0       	brcs	.+6      	; 0x988 <__ultoa_invert+0x7c>
 982:	49 5d       	subi	r20, 0xD9	; 217
 984:	31 fd       	sbrc	r19, 1
 986:	40 52       	subi	r20, 0x20	; 32
 988:	41 93       	st	Z+, r20
 98a:	02 d0       	rcall	.+4      	; 0x990 <__ultoa_invert+0x84>
 98c:	a9 f7       	brne	.-22     	; 0x978 <__ultoa_invert+0x6c>
 98e:	ea cf       	rjmp	.-44     	; 0x964 <__ultoa_invert+0x58>
 990:	b4 e0       	ldi	r27, 0x04	; 4
 992:	a6 95       	lsr	r26
 994:	97 95       	ror	r25
 996:	87 95       	ror	r24
 998:	77 95       	ror	r23
 99a:	67 95       	ror	r22
 99c:	ba 95       	dec	r27
 99e:	c9 f7       	brne	.-14     	; 0x992 <__ultoa_invert+0x86>
 9a0:	00 97       	sbiw	r24, 0x00	; 0
 9a2:	61 05       	cpc	r22, r1
 9a4:	71 05       	cpc	r23, r1
 9a6:	08 95       	ret
 9a8:	9b 01       	movw	r18, r22
 9aa:	ac 01       	movw	r20, r24
 9ac:	0a 2e       	mov	r0, r26
 9ae:	06 94       	lsr	r0
 9b0:	57 95       	ror	r21
 9b2:	47 95       	ror	r20
 9b4:	37 95       	ror	r19
 9b6:	27 95       	ror	r18
 9b8:	ba 95       	dec	r27
 9ba:	c9 f7       	brne	.-14     	; 0x9ae <__ultoa_invert+0xa2>
 9bc:	62 0f       	add	r22, r18
 9be:	73 1f       	adc	r23, r19
 9c0:	84 1f       	adc	r24, r20
 9c2:	95 1f       	adc	r25, r21
 9c4:	a0 1d       	adc	r26, r0
 9c6:	08 95       	ret

000009c8 <_exit>:
 9c8:	f8 94       	cli

000009ca <__stop_program>:
 9ca:	ff cf       	rjmp	.-2      	; 0x9ca <__stop_program>
