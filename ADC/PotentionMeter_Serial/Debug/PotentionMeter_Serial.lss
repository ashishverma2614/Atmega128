
PotentionMeter_Serial.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000022  00800100  000006f4  00000788  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000006f4  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000006  00800122  00800122  000007aa  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000007aa  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000808  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000078  00000000  00000000  00000848  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000c54  00000000  00000000  000008c0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000a54  00000000  00000000  00001514  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000004b2  00000000  00000000  00001f68  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000010c  00000000  00000000  0000241c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004ff  00000000  00000000  00002528  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000283  00000000  00000000  00002a27  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000058  00000000  00000000  00002caa  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	48 c0       	rjmp	.+144    	; 0xc6 <__bad_interrupt>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e4 ef       	ldi	r30, 0xF4	; 244
  a0:	f6 e0       	ldi	r31, 0x06	; 6
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a2 32       	cpi	r26, 0x22	; 34
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	a2 e2       	ldi	r26, 0x22	; 34
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	a8 32       	cpi	r26, 0x28	; 40
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	14 d0       	rcall	.+40     	; 0xec <main>
  c4:	15 c3       	rjmp	.+1578   	; 0x6f0 <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <ADC_init>:
FILE INPUT = FDEV_SETUP_STREAM(NULL, UART1_receive, _FDEV_SETUP_READ);


void ADC_init(unsigned char channel)
{
	ADMUX |= (1 << REFS0); // set AVCC as criteria voltage
  c8:	3e 9a       	sbi	0x07, 6	; 7
	ADCSRA |= 0x07; // pre-scaler:
  ca:	96 b1       	in	r25, 0x06	; 6
  cc:	97 60       	ori	r25, 0x07	; 7
  ce:	96 b9       	out	0x06, r25	; 6
	ADCSRA |= (1 << ADEN); // ADC enable
  d0:	37 9a       	sbi	0x06, 7	; 6
	ADCSRA |= (1 << ADFR); // "free-running" mode
  d2:	35 9a       	sbi	0x06, 5	; 6

	ADMUX = ((ADMUX & 0xE0) | channel);
  d4:	97 b1       	in	r25, 0x07	; 7
  d6:	90 7e       	andi	r25, 0xE0	; 224
  d8:	89 2b       	or	r24, r25
  da:	87 b9       	out	0x07, r24	; 7
	ADCSRA = ( 1 << ADSC); // start conversion
  dc:	80 e4       	ldi	r24, 0x40	; 64
  de:	86 b9       	out	0x06, r24	; 6
  e0:	08 95       	ret

000000e2 <read_ADC>:
}

int read_ADC(void)
{
	while (!(ADCSRA & (1 << ADIF))); // wait for the completion of conversion
  e2:	34 9b       	sbis	0x06, 4	; 6
  e4:	fe cf       	rjmp	.-4      	; 0xe2 <read_ADC>
	return ADC; // once the conversion completes, it returns 10 bit int val
  e6:	84 b1       	in	r24, 0x04	; 4
  e8:	95 b1       	in	r25, 0x05	; 5
}
  ea:	08 95       	ret

000000ec <main>:

int main(void)
{
	int ad_val;

	stdout	= &OUTPUT;
  ec:	e2 e2       	ldi	r30, 0x22	; 34
  ee:	f1 e0       	ldi	r31, 0x01	; 1
  f0:	8e e0       	ldi	r24, 0x0E	; 14
  f2:	91 e0       	ldi	r25, 0x01	; 1
  f4:	93 83       	std	Z+3, r25	; 0x03
  f6:	82 83       	std	Z+2, r24	; 0x02
	stdin = &INPUT;
  f8:	80 e0       	ldi	r24, 0x00	; 0
  fa:	91 e0       	ldi	r25, 0x01	; 1
  fc:	91 83       	std	Z+1, r25	; 0x01
  fe:	80 83       	st	Z, r24

	UART1_init(); // initialize UART1 communiction
 100:	18 d0       	rcall	.+48     	; 0x132 <UART1_init>
	ADC_init (0); // start ADC conversion using channel '0'
 102:	80 e0       	ldi	r24, 0x00	; 0
 104:	e1 df       	rcall	.-62     	; 0xc8 <ADC_init>

	while( 1 )
	{
		ad_val = read_ADC (); // read the analog value of potention meter
		printf ("%d\r\n", ad_val);
 106:	cc e1       	ldi	r28, 0x1C	; 28
	UART1_init(); // initialize UART1 communiction
	ADC_init (0); // start ADC conversion using channel '0'

	while( 1 )
	{
		ad_val = read_ADC (); // read the analog value of potention meter
 108:	d1 e0       	ldi	r29, 0x01	; 1
 10a:	eb df       	rcall	.-42     	; 0xe2 <read_ADC>
		printf ("%d\r\n", ad_val);
 10c:	9f 93       	push	r25
 10e:	8f 93       	push	r24
 110:	df 93       	push	r29
 112:	cf 93       	push	r28
 114:	2d d0       	rcall	.+90     	; 0x170 <printf>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 116:	9f ef       	ldi	r25, 0xFF	; 255
 118:	23 ed       	ldi	r18, 0xD3	; 211
 11a:	80 e3       	ldi	r24, 0x30	; 48
 11c:	91 50       	subi	r25, 0x01	; 1
 11e:	20 40       	sbci	r18, 0x00	; 0
 120:	80 40       	sbci	r24, 0x00	; 0
 122:	e1 f7       	brne	.-8      	; 0x11c <main+0x30>
 124:	00 c0       	rjmp	.+0      	; 0x126 <main+0x3a>
 126:	00 00       	nop
 128:	0f 90       	pop	r0
 12a:	0f 90       	pop	r0
 12c:	0f 90       	pop	r0
 12e:	0f 90       	pop	r0
 130:	ec cf       	rjmp	.-40     	; 0x10a <main+0x1e>

00000132 <UART1_init>:
typedef unsigned char unit8_t;

void UART1_init ()
{
	// Baud Rate set
	UBRR1H = 0x00;
 132:	10 92 98 00 	sts	0x0098, r1	; 0x800098 <__TEXT_REGION_LENGTH__+0x7e0098>
	UBRR1L = 207; // at 2x mode
 136:	8f ec       	ldi	r24, 0xCF	; 207
 138:	80 93 99 00 	sts	0x0099, r24	; 0x800099 <__TEXT_REGION_LENGTH__+0x7e0099>

	UCSR1A = (1 << U2X1); // 2x mode
 13c:	82 e0       	ldi	r24, 0x02	; 2
 13e:	80 93 9b 00 	sts	0x009B, r24	; 0x80009b <__TEXT_REGION_LENGTH__+0x7e009b>
	UCSR1B = (1 << RXEN1) | (0x01 << TXEN1); // RX/TX enable
 142:	88 e1       	ldi	r24, 0x18	; 24
 144:	80 93 9a 00 	sts	0x009A, r24	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
	UCSR1C =  0x06; // 8bit data mode, 1stop bit, no parity
 148:	86 e0       	ldi	r24, 0x06	; 6
 14a:	80 93 9d 00 	sts	0x009D, r24	; 0x80009d <__TEXT_REGION_LENGTH__+0x7e009d>
 14e:	08 95       	ret

00000150 <UART1_transmit>:
}

void UART1_transmit (char data)
{
	while (!(UCSR1A & (0x01 << UDRE1))); // wait for TX enable until UDR is empty
 150:	eb e9       	ldi	r30, 0x9B	; 155
 152:	f0 e0       	ldi	r31, 0x00	; 0
 154:	90 81       	ld	r25, Z
 156:	95 ff       	sbrs	r25, 5
 158:	fd cf       	rjmp	.-6      	; 0x154 <UART1_transmit+0x4>
	UDR1 = data; // writing data means sending data
 15a:	80 93 9c 00 	sts	0x009C, r24	; 0x80009c <__TEXT_REGION_LENGTH__+0x7e009c>
 15e:	08 95       	ret

00000160 <UART1_receive>:
}

unsigned char UART1_receive ()
{
	while(!(UCSR1A & (0x01 < RXC1))); // wait for RX enable
 160:	eb e9       	ldi	r30, 0x9B	; 155
 162:	f0 e0       	ldi	r31, 0x00	; 0
 164:	80 81       	ld	r24, Z
 166:	80 ff       	sbrs	r24, 0
 168:	fd cf       	rjmp	.-6      	; 0x164 <UART1_receive+0x4>
	return UDR1;
 16a:	80 91 9c 00 	lds	r24, 0x009C	; 0x80009c <__TEXT_REGION_LENGTH__+0x7e009c>
}
 16e:	08 95       	ret

00000170 <printf>:
 170:	cf 93       	push	r28
 172:	df 93       	push	r29
 174:	cd b7       	in	r28, 0x3d	; 61
 176:	de b7       	in	r29, 0x3e	; 62
 178:	ae 01       	movw	r20, r28
 17a:	4b 5f       	subi	r20, 0xFB	; 251
 17c:	5f 4f       	sbci	r21, 0xFF	; 255
 17e:	fa 01       	movw	r30, r20
 180:	61 91       	ld	r22, Z+
 182:	71 91       	ld	r23, Z+
 184:	af 01       	movw	r20, r30
 186:	80 91 24 01 	lds	r24, 0x0124	; 0x800124 <__data_end+0x2>
 18a:	90 91 25 01 	lds	r25, 0x0125	; 0x800125 <__data_end+0x3>
 18e:	03 d0       	rcall	.+6      	; 0x196 <vfprintf>
 190:	df 91       	pop	r29
 192:	cf 91       	pop	r28
 194:	08 95       	ret

00000196 <vfprintf>:
 196:	2f 92       	push	r2
 198:	3f 92       	push	r3
 19a:	4f 92       	push	r4
 19c:	5f 92       	push	r5
 19e:	6f 92       	push	r6
 1a0:	7f 92       	push	r7
 1a2:	8f 92       	push	r8
 1a4:	9f 92       	push	r9
 1a6:	af 92       	push	r10
 1a8:	bf 92       	push	r11
 1aa:	cf 92       	push	r12
 1ac:	df 92       	push	r13
 1ae:	ef 92       	push	r14
 1b0:	ff 92       	push	r15
 1b2:	0f 93       	push	r16
 1b4:	1f 93       	push	r17
 1b6:	cf 93       	push	r28
 1b8:	df 93       	push	r29
 1ba:	cd b7       	in	r28, 0x3d	; 61
 1bc:	de b7       	in	r29, 0x3e	; 62
 1be:	2b 97       	sbiw	r28, 0x0b	; 11
 1c0:	0f b6       	in	r0, 0x3f	; 63
 1c2:	f8 94       	cli
 1c4:	de bf       	out	0x3e, r29	; 62
 1c6:	0f be       	out	0x3f, r0	; 63
 1c8:	cd bf       	out	0x3d, r28	; 61
 1ca:	6c 01       	movw	r12, r24
 1cc:	7b 01       	movw	r14, r22
 1ce:	8a 01       	movw	r16, r20
 1d0:	fc 01       	movw	r30, r24
 1d2:	17 82       	std	Z+7, r1	; 0x07
 1d4:	16 82       	std	Z+6, r1	; 0x06
 1d6:	83 81       	ldd	r24, Z+3	; 0x03
 1d8:	81 ff       	sbrs	r24, 1
 1da:	bf c1       	rjmp	.+894    	; 0x55a <__LOCK_REGION_LENGTH__+0x15a>
 1dc:	ce 01       	movw	r24, r28
 1de:	01 96       	adiw	r24, 0x01	; 1
 1e0:	3c 01       	movw	r6, r24
 1e2:	f6 01       	movw	r30, r12
 1e4:	93 81       	ldd	r25, Z+3	; 0x03
 1e6:	f7 01       	movw	r30, r14
 1e8:	93 fd       	sbrc	r25, 3
 1ea:	85 91       	lpm	r24, Z+
 1ec:	93 ff       	sbrs	r25, 3
 1ee:	81 91       	ld	r24, Z+
 1f0:	7f 01       	movw	r14, r30
 1f2:	88 23       	and	r24, r24
 1f4:	09 f4       	brne	.+2      	; 0x1f8 <vfprintf+0x62>
 1f6:	ad c1       	rjmp	.+858    	; 0x552 <__LOCK_REGION_LENGTH__+0x152>
 1f8:	85 32       	cpi	r24, 0x25	; 37
 1fa:	39 f4       	brne	.+14     	; 0x20a <vfprintf+0x74>
 1fc:	93 fd       	sbrc	r25, 3
 1fe:	85 91       	lpm	r24, Z+
 200:	93 ff       	sbrs	r25, 3
 202:	81 91       	ld	r24, Z+
 204:	7f 01       	movw	r14, r30
 206:	85 32       	cpi	r24, 0x25	; 37
 208:	21 f4       	brne	.+8      	; 0x212 <vfprintf+0x7c>
 20a:	b6 01       	movw	r22, r12
 20c:	90 e0       	ldi	r25, 0x00	; 0
 20e:	d6 d1       	rcall	.+940    	; 0x5bc <fputc>
 210:	e8 cf       	rjmp	.-48     	; 0x1e2 <vfprintf+0x4c>
 212:	91 2c       	mov	r9, r1
 214:	21 2c       	mov	r2, r1
 216:	31 2c       	mov	r3, r1
 218:	ff e1       	ldi	r31, 0x1F	; 31
 21a:	f3 15       	cp	r31, r3
 21c:	d8 f0       	brcs	.+54     	; 0x254 <vfprintf+0xbe>
 21e:	8b 32       	cpi	r24, 0x2B	; 43
 220:	79 f0       	breq	.+30     	; 0x240 <vfprintf+0xaa>
 222:	38 f4       	brcc	.+14     	; 0x232 <vfprintf+0x9c>
 224:	80 32       	cpi	r24, 0x20	; 32
 226:	79 f0       	breq	.+30     	; 0x246 <vfprintf+0xb0>
 228:	83 32       	cpi	r24, 0x23	; 35
 22a:	a1 f4       	brne	.+40     	; 0x254 <vfprintf+0xbe>
 22c:	23 2d       	mov	r18, r3
 22e:	20 61       	ori	r18, 0x10	; 16
 230:	1d c0       	rjmp	.+58     	; 0x26c <vfprintf+0xd6>
 232:	8d 32       	cpi	r24, 0x2D	; 45
 234:	61 f0       	breq	.+24     	; 0x24e <vfprintf+0xb8>
 236:	80 33       	cpi	r24, 0x30	; 48
 238:	69 f4       	brne	.+26     	; 0x254 <vfprintf+0xbe>
 23a:	23 2d       	mov	r18, r3
 23c:	21 60       	ori	r18, 0x01	; 1
 23e:	16 c0       	rjmp	.+44     	; 0x26c <vfprintf+0xd6>
 240:	83 2d       	mov	r24, r3
 242:	82 60       	ori	r24, 0x02	; 2
 244:	38 2e       	mov	r3, r24
 246:	e3 2d       	mov	r30, r3
 248:	e4 60       	ori	r30, 0x04	; 4
 24a:	3e 2e       	mov	r3, r30
 24c:	2a c0       	rjmp	.+84     	; 0x2a2 <vfprintf+0x10c>
 24e:	f3 2d       	mov	r31, r3
 250:	f8 60       	ori	r31, 0x08	; 8
 252:	1d c0       	rjmp	.+58     	; 0x28e <vfprintf+0xf8>
 254:	37 fc       	sbrc	r3, 7
 256:	2d c0       	rjmp	.+90     	; 0x2b2 <vfprintf+0x11c>
 258:	20 ed       	ldi	r18, 0xD0	; 208
 25a:	28 0f       	add	r18, r24
 25c:	2a 30       	cpi	r18, 0x0A	; 10
 25e:	40 f0       	brcs	.+16     	; 0x270 <vfprintf+0xda>
 260:	8e 32       	cpi	r24, 0x2E	; 46
 262:	b9 f4       	brne	.+46     	; 0x292 <vfprintf+0xfc>
 264:	36 fc       	sbrc	r3, 6
 266:	75 c1       	rjmp	.+746    	; 0x552 <__LOCK_REGION_LENGTH__+0x152>
 268:	23 2d       	mov	r18, r3
 26a:	20 64       	ori	r18, 0x40	; 64
 26c:	32 2e       	mov	r3, r18
 26e:	19 c0       	rjmp	.+50     	; 0x2a2 <vfprintf+0x10c>
 270:	36 fe       	sbrs	r3, 6
 272:	06 c0       	rjmp	.+12     	; 0x280 <vfprintf+0xea>
 274:	8a e0       	ldi	r24, 0x0A	; 10
 276:	98 9e       	mul	r9, r24
 278:	20 0d       	add	r18, r0
 27a:	11 24       	eor	r1, r1
 27c:	92 2e       	mov	r9, r18
 27e:	11 c0       	rjmp	.+34     	; 0x2a2 <vfprintf+0x10c>
 280:	ea e0       	ldi	r30, 0x0A	; 10
 282:	2e 9e       	mul	r2, r30
 284:	20 0d       	add	r18, r0
 286:	11 24       	eor	r1, r1
 288:	22 2e       	mov	r2, r18
 28a:	f3 2d       	mov	r31, r3
 28c:	f0 62       	ori	r31, 0x20	; 32
 28e:	3f 2e       	mov	r3, r31
 290:	08 c0       	rjmp	.+16     	; 0x2a2 <vfprintf+0x10c>
 292:	8c 36       	cpi	r24, 0x6C	; 108
 294:	21 f4       	brne	.+8      	; 0x29e <vfprintf+0x108>
 296:	83 2d       	mov	r24, r3
 298:	80 68       	ori	r24, 0x80	; 128
 29a:	38 2e       	mov	r3, r24
 29c:	02 c0       	rjmp	.+4      	; 0x2a2 <vfprintf+0x10c>
 29e:	88 36       	cpi	r24, 0x68	; 104
 2a0:	41 f4       	brne	.+16     	; 0x2b2 <vfprintf+0x11c>
 2a2:	f7 01       	movw	r30, r14
 2a4:	93 fd       	sbrc	r25, 3
 2a6:	85 91       	lpm	r24, Z+
 2a8:	93 ff       	sbrs	r25, 3
 2aa:	81 91       	ld	r24, Z+
 2ac:	7f 01       	movw	r14, r30
 2ae:	81 11       	cpse	r24, r1
 2b0:	b3 cf       	rjmp	.-154    	; 0x218 <vfprintf+0x82>
 2b2:	98 2f       	mov	r25, r24
 2b4:	9f 7d       	andi	r25, 0xDF	; 223
 2b6:	95 54       	subi	r25, 0x45	; 69
 2b8:	93 30       	cpi	r25, 0x03	; 3
 2ba:	28 f4       	brcc	.+10     	; 0x2c6 <vfprintf+0x130>
 2bc:	0c 5f       	subi	r16, 0xFC	; 252
 2be:	1f 4f       	sbci	r17, 0xFF	; 255
 2c0:	9f e3       	ldi	r25, 0x3F	; 63
 2c2:	99 83       	std	Y+1, r25	; 0x01
 2c4:	0d c0       	rjmp	.+26     	; 0x2e0 <vfprintf+0x14a>
 2c6:	83 36       	cpi	r24, 0x63	; 99
 2c8:	31 f0       	breq	.+12     	; 0x2d6 <vfprintf+0x140>
 2ca:	83 37       	cpi	r24, 0x73	; 115
 2cc:	71 f0       	breq	.+28     	; 0x2ea <vfprintf+0x154>
 2ce:	83 35       	cpi	r24, 0x53	; 83
 2d0:	09 f0       	breq	.+2      	; 0x2d4 <vfprintf+0x13e>
 2d2:	55 c0       	rjmp	.+170    	; 0x37e <vfprintf+0x1e8>
 2d4:	20 c0       	rjmp	.+64     	; 0x316 <vfprintf+0x180>
 2d6:	f8 01       	movw	r30, r16
 2d8:	80 81       	ld	r24, Z
 2da:	89 83       	std	Y+1, r24	; 0x01
 2dc:	0e 5f       	subi	r16, 0xFE	; 254
 2de:	1f 4f       	sbci	r17, 0xFF	; 255
 2e0:	88 24       	eor	r8, r8
 2e2:	83 94       	inc	r8
 2e4:	91 2c       	mov	r9, r1
 2e6:	53 01       	movw	r10, r6
 2e8:	12 c0       	rjmp	.+36     	; 0x30e <vfprintf+0x178>
 2ea:	28 01       	movw	r4, r16
 2ec:	f2 e0       	ldi	r31, 0x02	; 2
 2ee:	4f 0e       	add	r4, r31
 2f0:	51 1c       	adc	r5, r1
 2f2:	f8 01       	movw	r30, r16
 2f4:	a0 80       	ld	r10, Z
 2f6:	b1 80       	ldd	r11, Z+1	; 0x01
 2f8:	36 fe       	sbrs	r3, 6
 2fa:	03 c0       	rjmp	.+6      	; 0x302 <vfprintf+0x16c>
 2fc:	69 2d       	mov	r22, r9
 2fe:	70 e0       	ldi	r23, 0x00	; 0
 300:	02 c0       	rjmp	.+4      	; 0x306 <vfprintf+0x170>
 302:	6f ef       	ldi	r22, 0xFF	; 255
 304:	7f ef       	ldi	r23, 0xFF	; 255
 306:	c5 01       	movw	r24, r10
 308:	4e d1       	rcall	.+668    	; 0x5a6 <strnlen>
 30a:	4c 01       	movw	r8, r24
 30c:	82 01       	movw	r16, r4
 30e:	f3 2d       	mov	r31, r3
 310:	ff 77       	andi	r31, 0x7F	; 127
 312:	3f 2e       	mov	r3, r31
 314:	15 c0       	rjmp	.+42     	; 0x340 <vfprintf+0x1aa>
 316:	28 01       	movw	r4, r16
 318:	22 e0       	ldi	r18, 0x02	; 2
 31a:	42 0e       	add	r4, r18
 31c:	51 1c       	adc	r5, r1
 31e:	f8 01       	movw	r30, r16
 320:	a0 80       	ld	r10, Z
 322:	b1 80       	ldd	r11, Z+1	; 0x01
 324:	36 fe       	sbrs	r3, 6
 326:	03 c0       	rjmp	.+6      	; 0x32e <vfprintf+0x198>
 328:	69 2d       	mov	r22, r9
 32a:	70 e0       	ldi	r23, 0x00	; 0
 32c:	02 c0       	rjmp	.+4      	; 0x332 <vfprintf+0x19c>
 32e:	6f ef       	ldi	r22, 0xFF	; 255
 330:	7f ef       	ldi	r23, 0xFF	; 255
 332:	c5 01       	movw	r24, r10
 334:	2d d1       	rcall	.+602    	; 0x590 <strnlen_P>
 336:	4c 01       	movw	r8, r24
 338:	f3 2d       	mov	r31, r3
 33a:	f0 68       	ori	r31, 0x80	; 128
 33c:	3f 2e       	mov	r3, r31
 33e:	82 01       	movw	r16, r4
 340:	33 fc       	sbrc	r3, 3
 342:	19 c0       	rjmp	.+50     	; 0x376 <vfprintf+0x1e0>
 344:	82 2d       	mov	r24, r2
 346:	90 e0       	ldi	r25, 0x00	; 0
 348:	88 16       	cp	r8, r24
 34a:	99 06       	cpc	r9, r25
 34c:	a0 f4       	brcc	.+40     	; 0x376 <vfprintf+0x1e0>
 34e:	b6 01       	movw	r22, r12
 350:	80 e2       	ldi	r24, 0x20	; 32
 352:	90 e0       	ldi	r25, 0x00	; 0
 354:	33 d1       	rcall	.+614    	; 0x5bc <fputc>
 356:	2a 94       	dec	r2
 358:	f5 cf       	rjmp	.-22     	; 0x344 <vfprintf+0x1ae>
 35a:	f5 01       	movw	r30, r10
 35c:	37 fc       	sbrc	r3, 7
 35e:	85 91       	lpm	r24, Z+
 360:	37 fe       	sbrs	r3, 7
 362:	81 91       	ld	r24, Z+
 364:	5f 01       	movw	r10, r30
 366:	b6 01       	movw	r22, r12
 368:	90 e0       	ldi	r25, 0x00	; 0
 36a:	28 d1       	rcall	.+592    	; 0x5bc <fputc>
 36c:	21 10       	cpse	r2, r1
 36e:	2a 94       	dec	r2
 370:	21 e0       	ldi	r18, 0x01	; 1
 372:	82 1a       	sub	r8, r18
 374:	91 08       	sbc	r9, r1
 376:	81 14       	cp	r8, r1
 378:	91 04       	cpc	r9, r1
 37a:	79 f7       	brne	.-34     	; 0x35a <vfprintf+0x1c4>
 37c:	e1 c0       	rjmp	.+450    	; 0x540 <__LOCK_REGION_LENGTH__+0x140>
 37e:	84 36       	cpi	r24, 0x64	; 100
 380:	11 f0       	breq	.+4      	; 0x386 <vfprintf+0x1f0>
 382:	89 36       	cpi	r24, 0x69	; 105
 384:	39 f5       	brne	.+78     	; 0x3d4 <vfprintf+0x23e>
 386:	f8 01       	movw	r30, r16
 388:	37 fe       	sbrs	r3, 7
 38a:	07 c0       	rjmp	.+14     	; 0x39a <vfprintf+0x204>
 38c:	60 81       	ld	r22, Z
 38e:	71 81       	ldd	r23, Z+1	; 0x01
 390:	82 81       	ldd	r24, Z+2	; 0x02
 392:	93 81       	ldd	r25, Z+3	; 0x03
 394:	0c 5f       	subi	r16, 0xFC	; 252
 396:	1f 4f       	sbci	r17, 0xFF	; 255
 398:	08 c0       	rjmp	.+16     	; 0x3aa <vfprintf+0x214>
 39a:	60 81       	ld	r22, Z
 39c:	71 81       	ldd	r23, Z+1	; 0x01
 39e:	07 2e       	mov	r0, r23
 3a0:	00 0c       	add	r0, r0
 3a2:	88 0b       	sbc	r24, r24
 3a4:	99 0b       	sbc	r25, r25
 3a6:	0e 5f       	subi	r16, 0xFE	; 254
 3a8:	1f 4f       	sbci	r17, 0xFF	; 255
 3aa:	f3 2d       	mov	r31, r3
 3ac:	ff 76       	andi	r31, 0x6F	; 111
 3ae:	3f 2e       	mov	r3, r31
 3b0:	97 ff       	sbrs	r25, 7
 3b2:	09 c0       	rjmp	.+18     	; 0x3c6 <vfprintf+0x230>
 3b4:	90 95       	com	r25
 3b6:	80 95       	com	r24
 3b8:	70 95       	com	r23
 3ba:	61 95       	neg	r22
 3bc:	7f 4f       	sbci	r23, 0xFF	; 255
 3be:	8f 4f       	sbci	r24, 0xFF	; 255
 3c0:	9f 4f       	sbci	r25, 0xFF	; 255
 3c2:	f0 68       	ori	r31, 0x80	; 128
 3c4:	3f 2e       	mov	r3, r31
 3c6:	2a e0       	ldi	r18, 0x0A	; 10
 3c8:	30 e0       	ldi	r19, 0x00	; 0
 3ca:	a3 01       	movw	r20, r6
 3cc:	33 d1       	rcall	.+614    	; 0x634 <__ultoa_invert>
 3ce:	88 2e       	mov	r8, r24
 3d0:	86 18       	sub	r8, r6
 3d2:	44 c0       	rjmp	.+136    	; 0x45c <__LOCK_REGION_LENGTH__+0x5c>
 3d4:	85 37       	cpi	r24, 0x75	; 117
 3d6:	31 f4       	brne	.+12     	; 0x3e4 <vfprintf+0x24e>
 3d8:	23 2d       	mov	r18, r3
 3da:	2f 7e       	andi	r18, 0xEF	; 239
 3dc:	b2 2e       	mov	r11, r18
 3de:	2a e0       	ldi	r18, 0x0A	; 10
 3e0:	30 e0       	ldi	r19, 0x00	; 0
 3e2:	25 c0       	rjmp	.+74     	; 0x42e <__LOCK_REGION_LENGTH__+0x2e>
 3e4:	93 2d       	mov	r25, r3
 3e6:	99 7f       	andi	r25, 0xF9	; 249
 3e8:	b9 2e       	mov	r11, r25
 3ea:	8f 36       	cpi	r24, 0x6F	; 111
 3ec:	c1 f0       	breq	.+48     	; 0x41e <__LOCK_REGION_LENGTH__+0x1e>
 3ee:	18 f4       	brcc	.+6      	; 0x3f6 <vfprintf+0x260>
 3f0:	88 35       	cpi	r24, 0x58	; 88
 3f2:	79 f0       	breq	.+30     	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
 3f4:	ae c0       	rjmp	.+348    	; 0x552 <__LOCK_REGION_LENGTH__+0x152>
 3f6:	80 37       	cpi	r24, 0x70	; 112
 3f8:	19 f0       	breq	.+6      	; 0x400 <__LOCK_REGION_LENGTH__>
 3fa:	88 37       	cpi	r24, 0x78	; 120
 3fc:	21 f0       	breq	.+8      	; 0x406 <__LOCK_REGION_LENGTH__+0x6>
 3fe:	a9 c0       	rjmp	.+338    	; 0x552 <__LOCK_REGION_LENGTH__+0x152>
 400:	e9 2f       	mov	r30, r25
 402:	e0 61       	ori	r30, 0x10	; 16
 404:	be 2e       	mov	r11, r30
 406:	b4 fe       	sbrs	r11, 4
 408:	0d c0       	rjmp	.+26     	; 0x424 <__LOCK_REGION_LENGTH__+0x24>
 40a:	fb 2d       	mov	r31, r11
 40c:	f4 60       	ori	r31, 0x04	; 4
 40e:	bf 2e       	mov	r11, r31
 410:	09 c0       	rjmp	.+18     	; 0x424 <__LOCK_REGION_LENGTH__+0x24>
 412:	34 fe       	sbrs	r3, 4
 414:	0a c0       	rjmp	.+20     	; 0x42a <__LOCK_REGION_LENGTH__+0x2a>
 416:	29 2f       	mov	r18, r25
 418:	26 60       	ori	r18, 0x06	; 6
 41a:	b2 2e       	mov	r11, r18
 41c:	06 c0       	rjmp	.+12     	; 0x42a <__LOCK_REGION_LENGTH__+0x2a>
 41e:	28 e0       	ldi	r18, 0x08	; 8
 420:	30 e0       	ldi	r19, 0x00	; 0
 422:	05 c0       	rjmp	.+10     	; 0x42e <__LOCK_REGION_LENGTH__+0x2e>
 424:	20 e1       	ldi	r18, 0x10	; 16
 426:	30 e0       	ldi	r19, 0x00	; 0
 428:	02 c0       	rjmp	.+4      	; 0x42e <__LOCK_REGION_LENGTH__+0x2e>
 42a:	20 e1       	ldi	r18, 0x10	; 16
 42c:	32 e0       	ldi	r19, 0x02	; 2
 42e:	f8 01       	movw	r30, r16
 430:	b7 fe       	sbrs	r11, 7
 432:	07 c0       	rjmp	.+14     	; 0x442 <__LOCK_REGION_LENGTH__+0x42>
 434:	60 81       	ld	r22, Z
 436:	71 81       	ldd	r23, Z+1	; 0x01
 438:	82 81       	ldd	r24, Z+2	; 0x02
 43a:	93 81       	ldd	r25, Z+3	; 0x03
 43c:	0c 5f       	subi	r16, 0xFC	; 252
 43e:	1f 4f       	sbci	r17, 0xFF	; 255
 440:	06 c0       	rjmp	.+12     	; 0x44e <__LOCK_REGION_LENGTH__+0x4e>
 442:	60 81       	ld	r22, Z
 444:	71 81       	ldd	r23, Z+1	; 0x01
 446:	80 e0       	ldi	r24, 0x00	; 0
 448:	90 e0       	ldi	r25, 0x00	; 0
 44a:	0e 5f       	subi	r16, 0xFE	; 254
 44c:	1f 4f       	sbci	r17, 0xFF	; 255
 44e:	a3 01       	movw	r20, r6
 450:	f1 d0       	rcall	.+482    	; 0x634 <__ultoa_invert>
 452:	88 2e       	mov	r8, r24
 454:	86 18       	sub	r8, r6
 456:	fb 2d       	mov	r31, r11
 458:	ff 77       	andi	r31, 0x7F	; 127
 45a:	3f 2e       	mov	r3, r31
 45c:	36 fe       	sbrs	r3, 6
 45e:	0d c0       	rjmp	.+26     	; 0x47a <__LOCK_REGION_LENGTH__+0x7a>
 460:	23 2d       	mov	r18, r3
 462:	2e 7f       	andi	r18, 0xFE	; 254
 464:	a2 2e       	mov	r10, r18
 466:	89 14       	cp	r8, r9
 468:	58 f4       	brcc	.+22     	; 0x480 <__LOCK_REGION_LENGTH__+0x80>
 46a:	34 fe       	sbrs	r3, 4
 46c:	0b c0       	rjmp	.+22     	; 0x484 <__LOCK_REGION_LENGTH__+0x84>
 46e:	32 fc       	sbrc	r3, 2
 470:	09 c0       	rjmp	.+18     	; 0x484 <__LOCK_REGION_LENGTH__+0x84>
 472:	83 2d       	mov	r24, r3
 474:	8e 7e       	andi	r24, 0xEE	; 238
 476:	a8 2e       	mov	r10, r24
 478:	05 c0       	rjmp	.+10     	; 0x484 <__LOCK_REGION_LENGTH__+0x84>
 47a:	b8 2c       	mov	r11, r8
 47c:	a3 2c       	mov	r10, r3
 47e:	03 c0       	rjmp	.+6      	; 0x486 <__LOCK_REGION_LENGTH__+0x86>
 480:	b8 2c       	mov	r11, r8
 482:	01 c0       	rjmp	.+2      	; 0x486 <__LOCK_REGION_LENGTH__+0x86>
 484:	b9 2c       	mov	r11, r9
 486:	a4 fe       	sbrs	r10, 4
 488:	0f c0       	rjmp	.+30     	; 0x4a8 <__LOCK_REGION_LENGTH__+0xa8>
 48a:	fe 01       	movw	r30, r28
 48c:	e8 0d       	add	r30, r8
 48e:	f1 1d       	adc	r31, r1
 490:	80 81       	ld	r24, Z
 492:	80 33       	cpi	r24, 0x30	; 48
 494:	21 f4       	brne	.+8      	; 0x49e <__LOCK_REGION_LENGTH__+0x9e>
 496:	9a 2d       	mov	r25, r10
 498:	99 7e       	andi	r25, 0xE9	; 233
 49a:	a9 2e       	mov	r10, r25
 49c:	09 c0       	rjmp	.+18     	; 0x4b0 <__LOCK_REGION_LENGTH__+0xb0>
 49e:	a2 fe       	sbrs	r10, 2
 4a0:	06 c0       	rjmp	.+12     	; 0x4ae <__LOCK_REGION_LENGTH__+0xae>
 4a2:	b3 94       	inc	r11
 4a4:	b3 94       	inc	r11
 4a6:	04 c0       	rjmp	.+8      	; 0x4b0 <__LOCK_REGION_LENGTH__+0xb0>
 4a8:	8a 2d       	mov	r24, r10
 4aa:	86 78       	andi	r24, 0x86	; 134
 4ac:	09 f0       	breq	.+2      	; 0x4b0 <__LOCK_REGION_LENGTH__+0xb0>
 4ae:	b3 94       	inc	r11
 4b0:	a3 fc       	sbrc	r10, 3
 4b2:	10 c0       	rjmp	.+32     	; 0x4d4 <__LOCK_REGION_LENGTH__+0xd4>
 4b4:	a0 fe       	sbrs	r10, 0
 4b6:	06 c0       	rjmp	.+12     	; 0x4c4 <__LOCK_REGION_LENGTH__+0xc4>
 4b8:	b2 14       	cp	r11, r2
 4ba:	80 f4       	brcc	.+32     	; 0x4dc <__LOCK_REGION_LENGTH__+0xdc>
 4bc:	28 0c       	add	r2, r8
 4be:	92 2c       	mov	r9, r2
 4c0:	9b 18       	sub	r9, r11
 4c2:	0d c0       	rjmp	.+26     	; 0x4de <__LOCK_REGION_LENGTH__+0xde>
 4c4:	b2 14       	cp	r11, r2
 4c6:	58 f4       	brcc	.+22     	; 0x4de <__LOCK_REGION_LENGTH__+0xde>
 4c8:	b6 01       	movw	r22, r12
 4ca:	80 e2       	ldi	r24, 0x20	; 32
 4cc:	90 e0       	ldi	r25, 0x00	; 0
 4ce:	76 d0       	rcall	.+236    	; 0x5bc <fputc>
 4d0:	b3 94       	inc	r11
 4d2:	f8 cf       	rjmp	.-16     	; 0x4c4 <__LOCK_REGION_LENGTH__+0xc4>
 4d4:	b2 14       	cp	r11, r2
 4d6:	18 f4       	brcc	.+6      	; 0x4de <__LOCK_REGION_LENGTH__+0xde>
 4d8:	2b 18       	sub	r2, r11
 4da:	02 c0       	rjmp	.+4      	; 0x4e0 <__LOCK_REGION_LENGTH__+0xe0>
 4dc:	98 2c       	mov	r9, r8
 4de:	21 2c       	mov	r2, r1
 4e0:	a4 fe       	sbrs	r10, 4
 4e2:	0f c0       	rjmp	.+30     	; 0x502 <__LOCK_REGION_LENGTH__+0x102>
 4e4:	b6 01       	movw	r22, r12
 4e6:	80 e3       	ldi	r24, 0x30	; 48
 4e8:	90 e0       	ldi	r25, 0x00	; 0
 4ea:	68 d0       	rcall	.+208    	; 0x5bc <fputc>
 4ec:	a2 fe       	sbrs	r10, 2
 4ee:	16 c0       	rjmp	.+44     	; 0x51c <__LOCK_REGION_LENGTH__+0x11c>
 4f0:	a1 fc       	sbrc	r10, 1
 4f2:	03 c0       	rjmp	.+6      	; 0x4fa <__LOCK_REGION_LENGTH__+0xfa>
 4f4:	88 e7       	ldi	r24, 0x78	; 120
 4f6:	90 e0       	ldi	r25, 0x00	; 0
 4f8:	02 c0       	rjmp	.+4      	; 0x4fe <__LOCK_REGION_LENGTH__+0xfe>
 4fa:	88 e5       	ldi	r24, 0x58	; 88
 4fc:	90 e0       	ldi	r25, 0x00	; 0
 4fe:	b6 01       	movw	r22, r12
 500:	0c c0       	rjmp	.+24     	; 0x51a <__LOCK_REGION_LENGTH__+0x11a>
 502:	8a 2d       	mov	r24, r10
 504:	86 78       	andi	r24, 0x86	; 134
 506:	51 f0       	breq	.+20     	; 0x51c <__LOCK_REGION_LENGTH__+0x11c>
 508:	a1 fe       	sbrs	r10, 1
 50a:	02 c0       	rjmp	.+4      	; 0x510 <__LOCK_REGION_LENGTH__+0x110>
 50c:	8b e2       	ldi	r24, 0x2B	; 43
 50e:	01 c0       	rjmp	.+2      	; 0x512 <__LOCK_REGION_LENGTH__+0x112>
 510:	80 e2       	ldi	r24, 0x20	; 32
 512:	a7 fc       	sbrc	r10, 7
 514:	8d e2       	ldi	r24, 0x2D	; 45
 516:	b6 01       	movw	r22, r12
 518:	90 e0       	ldi	r25, 0x00	; 0
 51a:	50 d0       	rcall	.+160    	; 0x5bc <fputc>
 51c:	89 14       	cp	r8, r9
 51e:	30 f4       	brcc	.+12     	; 0x52c <__LOCK_REGION_LENGTH__+0x12c>
 520:	b6 01       	movw	r22, r12
 522:	80 e3       	ldi	r24, 0x30	; 48
 524:	90 e0       	ldi	r25, 0x00	; 0
 526:	4a d0       	rcall	.+148    	; 0x5bc <fputc>
 528:	9a 94       	dec	r9
 52a:	f8 cf       	rjmp	.-16     	; 0x51c <__LOCK_REGION_LENGTH__+0x11c>
 52c:	8a 94       	dec	r8
 52e:	f3 01       	movw	r30, r6
 530:	e8 0d       	add	r30, r8
 532:	f1 1d       	adc	r31, r1
 534:	80 81       	ld	r24, Z
 536:	b6 01       	movw	r22, r12
 538:	90 e0       	ldi	r25, 0x00	; 0
 53a:	40 d0       	rcall	.+128    	; 0x5bc <fputc>
 53c:	81 10       	cpse	r8, r1
 53e:	f6 cf       	rjmp	.-20     	; 0x52c <__LOCK_REGION_LENGTH__+0x12c>
 540:	22 20       	and	r2, r2
 542:	09 f4       	brne	.+2      	; 0x546 <__LOCK_REGION_LENGTH__+0x146>
 544:	4e ce       	rjmp	.-868    	; 0x1e2 <vfprintf+0x4c>
 546:	b6 01       	movw	r22, r12
 548:	80 e2       	ldi	r24, 0x20	; 32
 54a:	90 e0       	ldi	r25, 0x00	; 0
 54c:	37 d0       	rcall	.+110    	; 0x5bc <fputc>
 54e:	2a 94       	dec	r2
 550:	f7 cf       	rjmp	.-18     	; 0x540 <__LOCK_REGION_LENGTH__+0x140>
 552:	f6 01       	movw	r30, r12
 554:	86 81       	ldd	r24, Z+6	; 0x06
 556:	97 81       	ldd	r25, Z+7	; 0x07
 558:	02 c0       	rjmp	.+4      	; 0x55e <__LOCK_REGION_LENGTH__+0x15e>
 55a:	8f ef       	ldi	r24, 0xFF	; 255
 55c:	9f ef       	ldi	r25, 0xFF	; 255
 55e:	2b 96       	adiw	r28, 0x0b	; 11
 560:	0f b6       	in	r0, 0x3f	; 63
 562:	f8 94       	cli
 564:	de bf       	out	0x3e, r29	; 62
 566:	0f be       	out	0x3f, r0	; 63
 568:	cd bf       	out	0x3d, r28	; 61
 56a:	df 91       	pop	r29
 56c:	cf 91       	pop	r28
 56e:	1f 91       	pop	r17
 570:	0f 91       	pop	r16
 572:	ff 90       	pop	r15
 574:	ef 90       	pop	r14
 576:	df 90       	pop	r13
 578:	cf 90       	pop	r12
 57a:	bf 90       	pop	r11
 57c:	af 90       	pop	r10
 57e:	9f 90       	pop	r9
 580:	8f 90       	pop	r8
 582:	7f 90       	pop	r7
 584:	6f 90       	pop	r6
 586:	5f 90       	pop	r5
 588:	4f 90       	pop	r4
 58a:	3f 90       	pop	r3
 58c:	2f 90       	pop	r2
 58e:	08 95       	ret

00000590 <strnlen_P>:
 590:	fc 01       	movw	r30, r24
 592:	05 90       	lpm	r0, Z+
 594:	61 50       	subi	r22, 0x01	; 1
 596:	70 40       	sbci	r23, 0x00	; 0
 598:	01 10       	cpse	r0, r1
 59a:	d8 f7       	brcc	.-10     	; 0x592 <strnlen_P+0x2>
 59c:	80 95       	com	r24
 59e:	90 95       	com	r25
 5a0:	8e 0f       	add	r24, r30
 5a2:	9f 1f       	adc	r25, r31
 5a4:	08 95       	ret

000005a6 <strnlen>:
 5a6:	fc 01       	movw	r30, r24
 5a8:	61 50       	subi	r22, 0x01	; 1
 5aa:	70 40       	sbci	r23, 0x00	; 0
 5ac:	01 90       	ld	r0, Z+
 5ae:	01 10       	cpse	r0, r1
 5b0:	d8 f7       	brcc	.-10     	; 0x5a8 <strnlen+0x2>
 5b2:	80 95       	com	r24
 5b4:	90 95       	com	r25
 5b6:	8e 0f       	add	r24, r30
 5b8:	9f 1f       	adc	r25, r31
 5ba:	08 95       	ret

000005bc <fputc>:
 5bc:	0f 93       	push	r16
 5be:	1f 93       	push	r17
 5c0:	cf 93       	push	r28
 5c2:	df 93       	push	r29
 5c4:	fb 01       	movw	r30, r22
 5c6:	23 81       	ldd	r18, Z+3	; 0x03
 5c8:	21 fd       	sbrc	r18, 1
 5ca:	03 c0       	rjmp	.+6      	; 0x5d2 <fputc+0x16>
 5cc:	8f ef       	ldi	r24, 0xFF	; 255
 5ce:	9f ef       	ldi	r25, 0xFF	; 255
 5d0:	2c c0       	rjmp	.+88     	; 0x62a <fputc+0x6e>
 5d2:	22 ff       	sbrs	r18, 2
 5d4:	16 c0       	rjmp	.+44     	; 0x602 <fputc+0x46>
 5d6:	46 81       	ldd	r20, Z+6	; 0x06
 5d8:	57 81       	ldd	r21, Z+7	; 0x07
 5da:	24 81       	ldd	r18, Z+4	; 0x04
 5dc:	35 81       	ldd	r19, Z+5	; 0x05
 5de:	42 17       	cp	r20, r18
 5e0:	53 07       	cpc	r21, r19
 5e2:	44 f4       	brge	.+16     	; 0x5f4 <fputc+0x38>
 5e4:	a0 81       	ld	r26, Z
 5e6:	b1 81       	ldd	r27, Z+1	; 0x01
 5e8:	9d 01       	movw	r18, r26
 5ea:	2f 5f       	subi	r18, 0xFF	; 255
 5ec:	3f 4f       	sbci	r19, 0xFF	; 255
 5ee:	31 83       	std	Z+1, r19	; 0x01
 5f0:	20 83       	st	Z, r18
 5f2:	8c 93       	st	X, r24
 5f4:	26 81       	ldd	r18, Z+6	; 0x06
 5f6:	37 81       	ldd	r19, Z+7	; 0x07
 5f8:	2f 5f       	subi	r18, 0xFF	; 255
 5fa:	3f 4f       	sbci	r19, 0xFF	; 255
 5fc:	37 83       	std	Z+7, r19	; 0x07
 5fe:	26 83       	std	Z+6, r18	; 0x06
 600:	14 c0       	rjmp	.+40     	; 0x62a <fputc+0x6e>
 602:	8b 01       	movw	r16, r22
 604:	ec 01       	movw	r28, r24
 606:	fb 01       	movw	r30, r22
 608:	00 84       	ldd	r0, Z+8	; 0x08
 60a:	f1 85       	ldd	r31, Z+9	; 0x09
 60c:	e0 2d       	mov	r30, r0
 60e:	09 95       	icall
 610:	89 2b       	or	r24, r25
 612:	e1 f6       	brne	.-72     	; 0x5cc <fputc+0x10>
 614:	d8 01       	movw	r26, r16
 616:	16 96       	adiw	r26, 0x06	; 6
 618:	8d 91       	ld	r24, X+
 61a:	9c 91       	ld	r25, X
 61c:	17 97       	sbiw	r26, 0x07	; 7
 61e:	01 96       	adiw	r24, 0x01	; 1
 620:	17 96       	adiw	r26, 0x07	; 7
 622:	9c 93       	st	X, r25
 624:	8e 93       	st	-X, r24
 626:	16 97       	sbiw	r26, 0x06	; 6
 628:	ce 01       	movw	r24, r28
 62a:	df 91       	pop	r29
 62c:	cf 91       	pop	r28
 62e:	1f 91       	pop	r17
 630:	0f 91       	pop	r16
 632:	08 95       	ret

00000634 <__ultoa_invert>:
 634:	fa 01       	movw	r30, r20
 636:	aa 27       	eor	r26, r26
 638:	28 30       	cpi	r18, 0x08	; 8
 63a:	51 f1       	breq	.+84     	; 0x690 <__ultoa_invert+0x5c>
 63c:	20 31       	cpi	r18, 0x10	; 16
 63e:	81 f1       	breq	.+96     	; 0x6a0 <__ultoa_invert+0x6c>
 640:	e8 94       	clt
 642:	6f 93       	push	r22
 644:	6e 7f       	andi	r22, 0xFE	; 254
 646:	6e 5f       	subi	r22, 0xFE	; 254
 648:	7f 4f       	sbci	r23, 0xFF	; 255
 64a:	8f 4f       	sbci	r24, 0xFF	; 255
 64c:	9f 4f       	sbci	r25, 0xFF	; 255
 64e:	af 4f       	sbci	r26, 0xFF	; 255
 650:	b1 e0       	ldi	r27, 0x01	; 1
 652:	3e d0       	rcall	.+124    	; 0x6d0 <__ultoa_invert+0x9c>
 654:	b4 e0       	ldi	r27, 0x04	; 4
 656:	3c d0       	rcall	.+120    	; 0x6d0 <__ultoa_invert+0x9c>
 658:	67 0f       	add	r22, r23
 65a:	78 1f       	adc	r23, r24
 65c:	89 1f       	adc	r24, r25
 65e:	9a 1f       	adc	r25, r26
 660:	a1 1d       	adc	r26, r1
 662:	68 0f       	add	r22, r24
 664:	79 1f       	adc	r23, r25
 666:	8a 1f       	adc	r24, r26
 668:	91 1d       	adc	r25, r1
 66a:	a1 1d       	adc	r26, r1
 66c:	6a 0f       	add	r22, r26
 66e:	71 1d       	adc	r23, r1
 670:	81 1d       	adc	r24, r1
 672:	91 1d       	adc	r25, r1
 674:	a1 1d       	adc	r26, r1
 676:	20 d0       	rcall	.+64     	; 0x6b8 <__ultoa_invert+0x84>
 678:	09 f4       	brne	.+2      	; 0x67c <__ultoa_invert+0x48>
 67a:	68 94       	set
 67c:	3f 91       	pop	r19
 67e:	2a e0       	ldi	r18, 0x0A	; 10
 680:	26 9f       	mul	r18, r22
 682:	11 24       	eor	r1, r1
 684:	30 19       	sub	r19, r0
 686:	30 5d       	subi	r19, 0xD0	; 208
 688:	31 93       	st	Z+, r19
 68a:	de f6       	brtc	.-74     	; 0x642 <__ultoa_invert+0xe>
 68c:	cf 01       	movw	r24, r30
 68e:	08 95       	ret
 690:	46 2f       	mov	r20, r22
 692:	47 70       	andi	r20, 0x07	; 7
 694:	40 5d       	subi	r20, 0xD0	; 208
 696:	41 93       	st	Z+, r20
 698:	b3 e0       	ldi	r27, 0x03	; 3
 69a:	0f d0       	rcall	.+30     	; 0x6ba <__ultoa_invert+0x86>
 69c:	c9 f7       	brne	.-14     	; 0x690 <__ultoa_invert+0x5c>
 69e:	f6 cf       	rjmp	.-20     	; 0x68c <__ultoa_invert+0x58>
 6a0:	46 2f       	mov	r20, r22
 6a2:	4f 70       	andi	r20, 0x0F	; 15
 6a4:	40 5d       	subi	r20, 0xD0	; 208
 6a6:	4a 33       	cpi	r20, 0x3A	; 58
 6a8:	18 f0       	brcs	.+6      	; 0x6b0 <__ultoa_invert+0x7c>
 6aa:	49 5d       	subi	r20, 0xD9	; 217
 6ac:	31 fd       	sbrc	r19, 1
 6ae:	40 52       	subi	r20, 0x20	; 32
 6b0:	41 93       	st	Z+, r20
 6b2:	02 d0       	rcall	.+4      	; 0x6b8 <__ultoa_invert+0x84>
 6b4:	a9 f7       	brne	.-22     	; 0x6a0 <__ultoa_invert+0x6c>
 6b6:	ea cf       	rjmp	.-44     	; 0x68c <__ultoa_invert+0x58>
 6b8:	b4 e0       	ldi	r27, 0x04	; 4
 6ba:	a6 95       	lsr	r26
 6bc:	97 95       	ror	r25
 6be:	87 95       	ror	r24
 6c0:	77 95       	ror	r23
 6c2:	67 95       	ror	r22
 6c4:	ba 95       	dec	r27
 6c6:	c9 f7       	brne	.-14     	; 0x6ba <__ultoa_invert+0x86>
 6c8:	00 97       	sbiw	r24, 0x00	; 0
 6ca:	61 05       	cpc	r22, r1
 6cc:	71 05       	cpc	r23, r1
 6ce:	08 95       	ret
 6d0:	9b 01       	movw	r18, r22
 6d2:	ac 01       	movw	r20, r24
 6d4:	0a 2e       	mov	r0, r26
 6d6:	06 94       	lsr	r0
 6d8:	57 95       	ror	r21
 6da:	47 95       	ror	r20
 6dc:	37 95       	ror	r19
 6de:	27 95       	ror	r18
 6e0:	ba 95       	dec	r27
 6e2:	c9 f7       	brne	.-14     	; 0x6d6 <__ultoa_invert+0xa2>
 6e4:	62 0f       	add	r22, r18
 6e6:	73 1f       	adc	r23, r19
 6e8:	84 1f       	adc	r24, r20
 6ea:	95 1f       	adc	r25, r21
 6ec:	a0 1d       	adc	r26, r0
 6ee:	08 95       	ret

000006f0 <_exit>:
 6f0:	f8 94       	cli

000006f2 <__stop_program>:
 6f2:	ff cf       	rjmp	.-2      	; 0x6f2 <__stop_program>
