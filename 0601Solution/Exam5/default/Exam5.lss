
Exam5.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000012  00800100  000009b4  00000a48  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000009b4  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000c  00800112  00800112  00000a5a  2**0
                  ALLOC
  3 .stab         00000e70  00000000  00000000  00000a5c  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000275  00000000  00000000  000018cc  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000080  00000000  00000000  00001b41  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 000000ff  00000000  00000000  00001bc1  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00000a1a  00000000  00000000  00001cc0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000004e8  00000000  00000000  000026da  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00000cec  00000000  00000000  00002bc2  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  000000c0  00000000  00000000  000038b0  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    000002ec  00000000  00000000  00003970  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00000855  00000000  00000000  00003c5c  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_pubtypes 000000fc  00000000  00000000  000044b1  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_ranges 00000048  00000000  00000000  000045ad  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 46 00 	jmp	0x8c	; 0x8c <__ctors_end>
   4:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
   8:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
   c:	0c 94 67 00 	jmp	0xce	; 0xce <__vector_3>
  10:	0c 94 7a 00 	jmp	0xf4	; 0xf4 <__vector_4>
  14:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  18:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  1c:	0c 94 93 00 	jmp	0x126	; 0x126 <__vector_7>
  20:	0c 94 d1 00 	jmp	0x1a2	; 0x1a2 <__vector_8>
  24:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  28:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  2c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  30:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  34:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  38:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  3c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  40:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  44:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  48:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  4c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  50:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  54:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  58:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  5c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  60:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  64:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  68:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  6c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  70:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  74:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  78:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  7c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  80:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  84:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  88:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e4 eb       	ldi	r30, 0xB4	; 180
  a0:	f9 e0       	ldi	r31, 0x09	; 9
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a2 31       	cpi	r26, 0x12	; 18
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	11 e0       	ldi	r17, 0x01	; 1
  b4:	a2 e1       	ldi	r26, 0x12	; 18
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	ae 31       	cpi	r26, 0x1E	; 30
  be:	b1 07       	cpc	r27, r17
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <main>
  c6:	0c 94 d8 04 	jmp	0x9b0	; 0x9b0 <_exit>

000000ca <__bad_interrupt>:
  ca:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ce <__vector_3>:
				0b10010000, // 9
				0b11111111, // Blank
				};

ISR(INT2_vect)	// SW1
{
  ce:	1f 92       	push	r1
  d0:	0f 92       	push	r0
  d2:	0f b6       	in	r0, 0x3f	; 63
  d4:	0f 92       	push	r0
  d6:	11 24       	eor	r1, r1
  d8:	8f 93       	push	r24
	blink = 1;
  da:	81 e0       	ldi	r24, 0x01	; 1
  dc:	80 93 15 01 	sts	0x0115, r24
	sel = 0;
  e0:	10 92 14 01 	sts	0x0114, r1
	cnt_up = 0;
  e4:	10 92 16 01 	sts	0x0116, r1
}
  e8:	8f 91       	pop	r24
  ea:	0f 90       	pop	r0
  ec:	0f be       	out	0x3f, r0	; 63
  ee:	0f 90       	pop	r0
  f0:	1f 90       	pop	r1
  f2:	18 95       	reti

000000f4 <__vector_4>:

ISR(INT3_vect) // SW2
{
  f4:	1f 92       	push	r1
  f6:	0f 92       	push	r0
  f8:	0f b6       	in	r0, 0x3f	; 63
  fa:	0f 92       	push	r0
  fc:	11 24       	eor	r1, r1
  fe:	8f 93       	push	r24
	if(blink == 1)
 100:	80 91 15 01 	lds	r24, 0x0115
 104:	81 30       	cpi	r24, 0x01	; 1
 106:	49 f4       	brne	.+18     	; 0x11a <__vector_4+0x26>
		if(++sel == 4)
 108:	80 91 14 01 	lds	r24, 0x0114
 10c:	8f 5f       	subi	r24, 0xFF	; 255
 10e:	80 93 14 01 	sts	0x0114, r24
 112:	84 30       	cpi	r24, 0x04	; 4
 114:	11 f4       	brne	.+4      	; 0x11a <__vector_4+0x26>
			sel = 0;
 116:	10 92 14 01 	sts	0x0114, r1
}
 11a:	8f 91       	pop	r24
 11c:	0f 90       	pop	r0
 11e:	0f be       	out	0x3f, r0	; 63
 120:	0f 90       	pop	r0
 122:	1f 90       	pop	r1
 124:	18 95       	reti

00000126 <__vector_7>:

ISR(INT6_vect) // SW3
{
 126:	1f 92       	push	r1
 128:	0f 92       	push	r0
 12a:	0f b6       	in	r0, 0x3f	; 63
 12c:	0f 92       	push	r0
 12e:	0b b6       	in	r0, 0x3b	; 59
 130:	0f 92       	push	r0
 132:	11 24       	eor	r1, r1
 134:	2f 93       	push	r18
 136:	3f 93       	push	r19
 138:	4f 93       	push	r20
 13a:	5f 93       	push	r21
 13c:	6f 93       	push	r22
 13e:	7f 93       	push	r23
 140:	8f 93       	push	r24
 142:	9f 93       	push	r25
 144:	af 93       	push	r26
 146:	bf 93       	push	r27
 148:	ef 93       	push	r30
 14a:	ff 93       	push	r31
 	int num;

	if(temp[3-sel] == '9') temp[3-sel] = '0';
 14c:	80 91 14 01 	lds	r24, 0x0114
 150:	99 27       	eor	r25, r25
 152:	87 fd       	sbrc	r24, 7
 154:	90 95       	com	r25
 156:	ec e1       	ldi	r30, 0x1C	; 28
 158:	f1 e0       	ldi	r31, 0x01	; 1
 15a:	e8 1b       	sub	r30, r24
 15c:	f9 0b       	sbc	r31, r25
 15e:	80 81       	ld	r24, Z
 160:	89 33       	cpi	r24, 0x39	; 57
 162:	11 f4       	brne	.+4      	; 0x168 <__vector_7+0x42>
 164:	80 e3       	ldi	r24, 0x30	; 48
 166:	01 c0       	rjmp	.+2      	; 0x16a <__vector_7+0x44>
	else temp[3-sel]++;
 168:	8f 5f       	subi	r24, 0xFF	; 255
 16a:	80 83       	st	Z, r24

	count = atoi(temp);
 16c:	89 e1       	ldi	r24, 0x19	; 25
 16e:	91 e0       	ldi	r25, 0x01	; 1
 170:	0e 94 d2 01 	call	0x3a4	; 0x3a4 <atoi>
 174:	90 93 13 01 	sts	0x0113, r25
 178:	80 93 12 01 	sts	0x0112, r24
}
 17c:	ff 91       	pop	r31
 17e:	ef 91       	pop	r30
 180:	bf 91       	pop	r27
 182:	af 91       	pop	r26
 184:	9f 91       	pop	r25
 186:	8f 91       	pop	r24
 188:	7f 91       	pop	r23
 18a:	6f 91       	pop	r22
 18c:	5f 91       	pop	r21
 18e:	4f 91       	pop	r20
 190:	3f 91       	pop	r19
 192:	2f 91       	pop	r18
 194:	0f 90       	pop	r0
 196:	0b be       	out	0x3b, r0	; 59
 198:	0f 90       	pop	r0
 19a:	0f be       	out	0x3f, r0	; 63
 19c:	0f 90       	pop	r0
 19e:	1f 90       	pop	r1
 1a0:	18 95       	reti

000001a2 <__vector_8>:

ISR(INT7_vect) // SW4
{
 1a2:	1f 92       	push	r1
 1a4:	0f 92       	push	r0
 1a6:	0f b6       	in	r0, 0x3f	; 63
 1a8:	0f 92       	push	r0
 1aa:	11 24       	eor	r1, r1
 1ac:	8f 93       	push	r24
	blink = 0;
 1ae:	10 92 15 01 	sts	0x0115, r1
	blink_state = 0;
 1b2:	10 92 17 01 	sts	0x0117, r1

	if(cnt_up == 0) cnt_up = 1;
 1b6:	80 91 16 01 	lds	r24, 0x0116
 1ba:	88 23       	and	r24, r24
 1bc:	21 f4       	brne	.+8      	; 0x1c6 <__vector_8+0x24>
 1be:	81 e0       	ldi	r24, 0x01	; 1
 1c0:	80 93 16 01 	sts	0x0116, r24
 1c4:	02 c0       	rjmp	.+4      	; 0x1ca <__vector_8+0x28>
	else cnt_up = 0;
 1c6:	10 92 16 01 	sts	0x0116, r1
}
 1ca:	8f 91       	pop	r24
 1cc:	0f 90       	pop	r0
 1ce:	0f be       	out	0x3f, r0	; 63
 1d0:	0f 90       	pop	r0
 1d2:	1f 90       	pop	r1
 1d4:	18 95       	reti

000001d6 <main>:

int main(void)
{
 1d6:	af 92       	push	r10
 1d8:	bf 92       	push	r11
 1da:	cf 92       	push	r12
 1dc:	df 92       	push	r13
 1de:	ef 92       	push	r14
 1e0:	ff 92       	push	r15
 1e2:	0f 93       	push	r16
 1e4:	1f 93       	push	r17
 1e6:	df 93       	push	r29
 1e8:	cf 93       	push	r28
 1ea:	0f 92       	push	r0
 1ec:	cd b7       	in	r28, 0x3d	; 61
 1ee:	de b7       	in	r29, 0x3e	; 62
	int i, j;
			
	DDRA = 0xFF;
 1f0:	8f ef       	ldi	r24, 0xFF	; 255
 1f2:	8a bb       	out	0x1a, r24	; 26
	DDRC = 0xFF;
 1f4:	84 bb       	out	0x14, r24	; 20
	DDRD = 0x00;
 1f6:	11 ba       	out	0x11, r1	; 17
	DDRE = 0x00;
 1f8:	12 b8       	out	0x02, r1	; 2

	PORTD = 0x08;
 1fa:	88 e0       	ldi	r24, 0x08	; 8
 1fc:	82 bb       	out	0x12, r24	; 18
	PORTE = 0x80;
 1fe:	80 e8       	ldi	r24, 0x80	; 128
 200:	83 b9       	out	0x03, r24	; 3

	EICRA = 0b10100000;
 202:	80 ea       	ldi	r24, 0xA0	; 160
 204:	80 93 6a 00 	sts	0x006A, r24
	EICRB = 0b10100000;
 208:	8a bf       	out	0x3a, r24	; 58
	EIMSK = 0b11001100;
 20a:	8c ec       	ldi	r24, 0xCC	; 204
 20c:	89 bf       	out	0x39, r24	; 57

	SREG |= 0x80;
 20e:	8f b7       	in	r24, 0x3f	; 63
 210:	80 68       	ori	r24, 0x80	; 128
 212:	8f bf       	out	0x3f, r24	; 63
	
	while(1){
		sprintf(temp,"%04d\0", count);
 214:	09 e1       	ldi	r16, 0x19	; 25
 216:	11 e0       	ldi	r17, 0x01	; 1
 218:	40 e0       	ldi	r20, 0x00	; 0
 21a:	a4 2e       	mov	r10, r20
 21c:	41 e0       	ldi	r20, 0x01	; 1
 21e:	b4 2e       	mov	r11, r20
		
		for(i=0; i< (25 * blink + 1); i++){
 220:	29 e1       	ldi	r18, 0x19	; 25
			FND1;
 222:	cc 24       	eor	r12, r12
 224:	c3 94       	inc	r12
				FND_PORT = fnd[10];
			else 
				FND_PORT = fnd[temp[3] - '0'];
			_delay_ms(5);

			FND2;	
 226:	32 e0       	ldi	r19, 0x02	; 2
 228:	d3 2e       	mov	r13, r19
				FND_PORT = fnd[10];
			else 
				FND_PORT = fnd[temp[2] - '0'];
			_delay_ms(5);

			FND3;
 22a:	94 e0       	ldi	r25, 0x04	; 4
 22c:	e9 2e       	mov	r14, r25
				FND_PORT = fnd[10];
			else 
				FND_PORT = fnd[temp[1] - '0'];
			_delay_ms(5);

			FND4;
 22e:	88 e0       	ldi	r24, 0x08	; 8
 230:	f8 2e       	mov	r15, r24
	EIMSK = 0b11001100;

	SREG |= 0x80;
	
	while(1){
		sprintf(temp,"%04d\0", count);
 232:	00 d0       	rcall	.+0      	; 0x234 <main+0x5e>
 234:	00 d0       	rcall	.+0      	; 0x236 <main+0x60>
 236:	00 d0       	rcall	.+0      	; 0x238 <main+0x62>
 238:	ed b7       	in	r30, 0x3d	; 61
 23a:	fe b7       	in	r31, 0x3e	; 62
 23c:	31 96       	adiw	r30, 0x01	; 1
 23e:	ad b7       	in	r26, 0x3d	; 61
 240:	be b7       	in	r27, 0x3e	; 62
 242:	12 96       	adiw	r26, 0x02	; 2
 244:	1c 93       	st	X, r17
 246:	0e 93       	st	-X, r16
 248:	11 97       	sbiw	r26, 0x01	; 1
 24a:	b3 82       	std	Z+3, r11	; 0x03
 24c:	a2 82       	std	Z+2, r10	; 0x02
 24e:	80 91 12 01 	lds	r24, 0x0112
 252:	90 91 13 01 	lds	r25, 0x0113
 256:	95 83       	std	Z+5, r25	; 0x05
 258:	84 83       	std	Z+4, r24	; 0x04
 25a:	29 83       	std	Y+1, r18	; 0x01
 25c:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <sprintf>
		
		for(i=0; i< (25 * blink + 1); i++){
 260:	ed b7       	in	r30, 0x3d	; 61
 262:	fe b7       	in	r31, 0x3e	; 62
 264:	36 96       	adiw	r30, 0x06	; 6
 266:	0f b6       	in	r0, 0x3f	; 63
 268:	f8 94       	cli
 26a:	fe bf       	out	0x3e, r31	; 62
 26c:	0f be       	out	0x3f, r0	; 63
 26e:	ed bf       	out	0x3d, r30	; 61
 270:	80 e0       	ldi	r24, 0x00	; 0
 272:	90 e0       	ldi	r25, 0x00	; 0
 274:	29 81       	ldd	r18, Y+1	; 0x01
 276:	6d c0       	rjmp	.+218    	; 0x352 <main+0x17c>
			FND1;
 278:	c5 ba       	out	0x15, r12	; 21
			if(blink_state == 1 && sel == 0)
 27a:	30 91 17 01 	lds	r19, 0x0117
 27e:	31 30       	cpi	r19, 0x01	; 1
 280:	39 f4       	brne	.+14     	; 0x290 <main+0xba>
 282:	30 91 14 01 	lds	r19, 0x0114
 286:	33 23       	and	r19, r19
 288:	19 f4       	brne	.+6      	; 0x290 <main+0xba>
				FND_PORT = fnd[10];
 28a:	30 91 10 01 	lds	r19, 0x0110
 28e:	08 c0       	rjmp	.+16     	; 0x2a0 <main+0xca>
			else 
				FND_PORT = fnd[temp[3] - '0'];
 290:	e0 91 1c 01 	lds	r30, 0x011C
 294:	ff 27       	eor	r31, r31
 296:	e7 fd       	sbrc	r30, 7
 298:	f0 95       	com	r31
 29a:	ea 52       	subi	r30, 0x2A	; 42
 29c:	ff 4f       	sbci	r31, 0xFF	; 255
 29e:	30 81       	ld	r19, Z
 2a0:	3b bb       	out	0x1b, r19	; 27
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 2a2:	af e1       	ldi	r26, 0x1F	; 31
 2a4:	be e4       	ldi	r27, 0x4E	; 78
 2a6:	11 97       	sbiw	r26, 0x01	; 1
 2a8:	f1 f7       	brne	.-4      	; 0x2a6 <main+0xd0>
 2aa:	00 c0       	rjmp	.+0      	; 0x2ac <main+0xd6>
 2ac:	00 00       	nop
			_delay_ms(5);

			FND2;	
 2ae:	d5 ba       	out	0x15, r13	; 21
			if(blink_state == 1 && sel == 1)
 2b0:	30 91 17 01 	lds	r19, 0x0117
 2b4:	31 30       	cpi	r19, 0x01	; 1
 2b6:	39 f4       	brne	.+14     	; 0x2c6 <main+0xf0>
 2b8:	30 91 14 01 	lds	r19, 0x0114
 2bc:	31 30       	cpi	r19, 0x01	; 1
 2be:	19 f4       	brne	.+6      	; 0x2c6 <main+0xf0>
				FND_PORT = fnd[10];
 2c0:	30 91 10 01 	lds	r19, 0x0110
 2c4:	08 c0       	rjmp	.+16     	; 0x2d6 <main+0x100>
			else 
				FND_PORT = fnd[temp[2] - '0'];
 2c6:	e0 91 1b 01 	lds	r30, 0x011B
 2ca:	ff 27       	eor	r31, r31
 2cc:	e7 fd       	sbrc	r30, 7
 2ce:	f0 95       	com	r31
 2d0:	ea 52       	subi	r30, 0x2A	; 42
 2d2:	ff 4f       	sbci	r31, 0xFF	; 255
 2d4:	30 81       	ld	r19, Z
 2d6:	3b bb       	out	0x1b, r19	; 27
 2d8:	ef e1       	ldi	r30, 0x1F	; 31
 2da:	fe e4       	ldi	r31, 0x4E	; 78
 2dc:	31 97       	sbiw	r30, 0x01	; 1
 2de:	f1 f7       	brne	.-4      	; 0x2dc <main+0x106>
 2e0:	00 c0       	rjmp	.+0      	; 0x2e2 <main+0x10c>
 2e2:	00 00       	nop
			_delay_ms(5);

			FND3;
 2e4:	e5 ba       	out	0x15, r14	; 21
			if(blink_state == 1 && sel == 2)
 2e6:	30 91 17 01 	lds	r19, 0x0117
 2ea:	31 30       	cpi	r19, 0x01	; 1
 2ec:	39 f4       	brne	.+14     	; 0x2fc <main+0x126>
 2ee:	30 91 14 01 	lds	r19, 0x0114
 2f2:	32 30       	cpi	r19, 0x02	; 2
 2f4:	19 f4       	brne	.+6      	; 0x2fc <main+0x126>
				FND_PORT = fnd[10];
 2f6:	30 91 10 01 	lds	r19, 0x0110
 2fa:	08 c0       	rjmp	.+16     	; 0x30c <main+0x136>
			else 
				FND_PORT = fnd[temp[1] - '0'];
 2fc:	e0 91 1a 01 	lds	r30, 0x011A
 300:	ff 27       	eor	r31, r31
 302:	e7 fd       	sbrc	r30, 7
 304:	f0 95       	com	r31
 306:	ea 52       	subi	r30, 0x2A	; 42
 308:	ff 4f       	sbci	r31, 0xFF	; 255
 30a:	30 81       	ld	r19, Z
 30c:	3b bb       	out	0x1b, r19	; 27
 30e:	af e1       	ldi	r26, 0x1F	; 31
 310:	be e4       	ldi	r27, 0x4E	; 78
 312:	11 97       	sbiw	r26, 0x01	; 1
 314:	f1 f7       	brne	.-4      	; 0x312 <main+0x13c>
 316:	00 c0       	rjmp	.+0      	; 0x318 <main+0x142>
 318:	00 00       	nop
			_delay_ms(5);

			FND4;
 31a:	f5 ba       	out	0x15, r15	; 21
			if(blink_state == 1 && sel == 3)
 31c:	30 91 17 01 	lds	r19, 0x0117
 320:	31 30       	cpi	r19, 0x01	; 1
 322:	39 f4       	brne	.+14     	; 0x332 <main+0x15c>
 324:	30 91 14 01 	lds	r19, 0x0114
 328:	33 30       	cpi	r19, 0x03	; 3
 32a:	19 f4       	brne	.+6      	; 0x332 <main+0x15c>
				FND_PORT = fnd[10];
 32c:	30 91 10 01 	lds	r19, 0x0110
 330:	08 c0       	rjmp	.+16     	; 0x342 <main+0x16c>
			else 
				FND_PORT = fnd[temp[0] - '0'];
 332:	e0 91 19 01 	lds	r30, 0x0119
 336:	ff 27       	eor	r31, r31
 338:	e7 fd       	sbrc	r30, 7
 33a:	f0 95       	com	r31
 33c:	ea 52       	subi	r30, 0x2A	; 42
 33e:	ff 4f       	sbci	r31, 0xFF	; 255
 340:	30 81       	ld	r19, Z
 342:	3b bb       	out	0x1b, r19	; 27
 344:	ef e1       	ldi	r30, 0x1F	; 31
 346:	fe e4       	ldi	r31, 0x4E	; 78
 348:	31 97       	sbiw	r30, 0x01	; 1
 34a:	f1 f7       	brne	.-4      	; 0x348 <main+0x172>
 34c:	00 c0       	rjmp	.+0      	; 0x34e <main+0x178>
 34e:	00 00       	nop
	SREG |= 0x80;
	
	while(1){
		sprintf(temp,"%04d\0", count);
		
		for(i=0; i< (25 * blink + 1); i++){
 350:	01 96       	adiw	r24, 0x01	; 1
 352:	30 91 15 01 	lds	r19, 0x0115
 356:	32 02       	muls	r19, r18
 358:	a0 01       	movw	r20, r0
 35a:	11 24       	eor	r1, r1
 35c:	48 17       	cp	r20, r24
 35e:	59 07       	cpc	r21, r25
 360:	0c f0       	brlt	.+2      	; 0x364 <main+0x18e>
 362:	8a cf       	rjmp	.-236    	; 0x278 <main+0xa2>
			else 
				FND_PORT = fnd[temp[0] - '0'];
			_delay_ms(5);
		}

		if(cnt_up == 1){
 364:	80 91 16 01 	lds	r24, 0x0116
 368:	81 30       	cpi	r24, 0x01	; 1
 36a:	89 f4       	brne	.+34     	; 0x38e <main+0x1b8>
			if(++count == 10000) count = 0;
 36c:	80 91 12 01 	lds	r24, 0x0112
 370:	90 91 13 01 	lds	r25, 0x0113
 374:	01 96       	adiw	r24, 0x01	; 1
 376:	90 93 13 01 	sts	0x0113, r25
 37a:	80 93 12 01 	sts	0x0112, r24
 37e:	f7 e2       	ldi	r31, 0x27	; 39
 380:	80 31       	cpi	r24, 0x10	; 16
 382:	9f 07       	cpc	r25, r31
 384:	21 f4       	brne	.+8      	; 0x38e <main+0x1b8>
 386:	10 92 13 01 	sts	0x0113, r1
 38a:	10 92 12 01 	sts	0x0112, r1
		}

		if(blink == 1){
 38e:	31 30       	cpi	r19, 0x01	; 1
 390:	09 f0       	breq	.+2      	; 0x394 <main+0x1be>
 392:	4f cf       	rjmp	.-354    	; 0x232 <main+0x5c>
			blink_state = !blink_state;
 394:	81 e0       	ldi	r24, 0x01	; 1
 396:	90 91 17 01 	lds	r25, 0x0117
 39a:	91 11       	cpse	r25, r1
 39c:	80 e0       	ldi	r24, 0x00	; 0
 39e:	80 93 17 01 	sts	0x0117, r24
 3a2:	47 cf       	rjmp	.-370    	; 0x232 <main+0x5c>

000003a4 <atoi>:
 3a4:	fc 01       	movw	r30, r24
 3a6:	88 27       	eor	r24, r24
 3a8:	99 27       	eor	r25, r25
 3aa:	e8 94       	clt
 3ac:	21 91       	ld	r18, Z+
 3ae:	20 32       	cpi	r18, 0x20	; 32
 3b0:	e9 f3       	breq	.-6      	; 0x3ac <atoi+0x8>
 3b2:	29 30       	cpi	r18, 0x09	; 9
 3b4:	10 f0       	brcs	.+4      	; 0x3ba <atoi+0x16>
 3b6:	2e 30       	cpi	r18, 0x0E	; 14
 3b8:	c8 f3       	brcs	.-14     	; 0x3ac <atoi+0x8>
 3ba:	2b 32       	cpi	r18, 0x2B	; 43
 3bc:	41 f0       	breq	.+16     	; 0x3ce <atoi+0x2a>
 3be:	2d 32       	cpi	r18, 0x2D	; 45
 3c0:	39 f4       	brne	.+14     	; 0x3d0 <atoi+0x2c>
 3c2:	68 94       	set
 3c4:	04 c0       	rjmp	.+8      	; 0x3ce <atoi+0x2a>
 3c6:	0e 94 f0 01 	call	0x3e0	; 0x3e0 <__mulhi_const_10>
 3ca:	82 0f       	add	r24, r18
 3cc:	91 1d       	adc	r25, r1
 3ce:	21 91       	ld	r18, Z+
 3d0:	20 53       	subi	r18, 0x30	; 48
 3d2:	2a 30       	cpi	r18, 0x0A	; 10
 3d4:	c0 f3       	brcs	.-16     	; 0x3c6 <atoi+0x22>
 3d6:	1e f4       	brtc	.+6      	; 0x3de <atoi+0x3a>
 3d8:	90 95       	com	r25
 3da:	81 95       	neg	r24
 3dc:	9f 4f       	sbci	r25, 0xFF	; 255
 3de:	08 95       	ret

000003e0 <__mulhi_const_10>:
 3e0:	7a e0       	ldi	r23, 0x0A	; 10
 3e2:	97 9f       	mul	r25, r23
 3e4:	90 2d       	mov	r25, r0
 3e6:	87 9f       	mul	r24, r23
 3e8:	80 2d       	mov	r24, r0
 3ea:	91 0d       	add	r25, r1
 3ec:	11 24       	eor	r1, r1
 3ee:	08 95       	ret

000003f0 <sprintf>:
 3f0:	0f 93       	push	r16
 3f2:	1f 93       	push	r17
 3f4:	df 93       	push	r29
 3f6:	cf 93       	push	r28
 3f8:	cd b7       	in	r28, 0x3d	; 61
 3fa:	de b7       	in	r29, 0x3e	; 62
 3fc:	2e 97       	sbiw	r28, 0x0e	; 14
 3fe:	0f b6       	in	r0, 0x3f	; 63
 400:	f8 94       	cli
 402:	de bf       	out	0x3e, r29	; 62
 404:	0f be       	out	0x3f, r0	; 63
 406:	cd bf       	out	0x3d, r28	; 61
 408:	0d 89       	ldd	r16, Y+21	; 0x15
 40a:	1e 89       	ldd	r17, Y+22	; 0x16
 40c:	86 e0       	ldi	r24, 0x06	; 6
 40e:	8c 83       	std	Y+4, r24	; 0x04
 410:	1a 83       	std	Y+2, r17	; 0x02
 412:	09 83       	std	Y+1, r16	; 0x01
 414:	8f ef       	ldi	r24, 0xFF	; 255
 416:	9f e7       	ldi	r25, 0x7F	; 127
 418:	9e 83       	std	Y+6, r25	; 0x06
 41a:	8d 83       	std	Y+5, r24	; 0x05
 41c:	9e 01       	movw	r18, r28
 41e:	27 5e       	subi	r18, 0xE7	; 231
 420:	3f 4f       	sbci	r19, 0xFF	; 255
 422:	ce 01       	movw	r24, r28
 424:	01 96       	adiw	r24, 0x01	; 1
 426:	6f 89       	ldd	r22, Y+23	; 0x17
 428:	78 8d       	ldd	r23, Y+24	; 0x18
 42a:	a9 01       	movw	r20, r18
 42c:	0e 94 28 02 	call	0x450	; 0x450 <vfprintf>
 430:	ef 81       	ldd	r30, Y+7	; 0x07
 432:	f8 85       	ldd	r31, Y+8	; 0x08
 434:	e0 0f       	add	r30, r16
 436:	f1 1f       	adc	r31, r17
 438:	10 82       	st	Z, r1
 43a:	2e 96       	adiw	r28, 0x0e	; 14
 43c:	0f b6       	in	r0, 0x3f	; 63
 43e:	f8 94       	cli
 440:	de bf       	out	0x3e, r29	; 62
 442:	0f be       	out	0x3f, r0	; 63
 444:	cd bf       	out	0x3d, r28	; 61
 446:	cf 91       	pop	r28
 448:	df 91       	pop	r29
 44a:	1f 91       	pop	r17
 44c:	0f 91       	pop	r16
 44e:	08 95       	ret

00000450 <vfprintf>:
 450:	2f 92       	push	r2
 452:	3f 92       	push	r3
 454:	4f 92       	push	r4
 456:	5f 92       	push	r5
 458:	6f 92       	push	r6
 45a:	7f 92       	push	r7
 45c:	8f 92       	push	r8
 45e:	9f 92       	push	r9
 460:	af 92       	push	r10
 462:	bf 92       	push	r11
 464:	cf 92       	push	r12
 466:	df 92       	push	r13
 468:	ef 92       	push	r14
 46a:	ff 92       	push	r15
 46c:	0f 93       	push	r16
 46e:	1f 93       	push	r17
 470:	df 93       	push	r29
 472:	cf 93       	push	r28
 474:	cd b7       	in	r28, 0x3d	; 61
 476:	de b7       	in	r29, 0x3e	; 62
 478:	2c 97       	sbiw	r28, 0x0c	; 12
 47a:	0f b6       	in	r0, 0x3f	; 63
 47c:	f8 94       	cli
 47e:	de bf       	out	0x3e, r29	; 62
 480:	0f be       	out	0x3f, r0	; 63
 482:	cd bf       	out	0x3d, r28	; 61
 484:	6c 01       	movw	r12, r24
 486:	1b 01       	movw	r2, r22
 488:	8a 01       	movw	r16, r20
 48a:	fc 01       	movw	r30, r24
 48c:	17 82       	std	Z+7, r1	; 0x07
 48e:	16 82       	std	Z+6, r1	; 0x06
 490:	83 81       	ldd	r24, Z+3	; 0x03
 492:	81 ff       	sbrs	r24, 1
 494:	d1 c1       	rjmp	.+930    	; 0x838 <vfprintf+0x3e8>
 496:	2e 01       	movw	r4, r28
 498:	08 94       	sec
 49a:	41 1c       	adc	r4, r1
 49c:	51 1c       	adc	r5, r1
 49e:	f6 01       	movw	r30, r12
 4a0:	93 81       	ldd	r25, Z+3	; 0x03
 4a2:	f1 01       	movw	r30, r2
 4a4:	93 fd       	sbrc	r25, 3
 4a6:	85 91       	lpm	r24, Z+
 4a8:	93 ff       	sbrs	r25, 3
 4aa:	81 91       	ld	r24, Z+
 4ac:	1f 01       	movw	r2, r30
 4ae:	88 23       	and	r24, r24
 4b0:	09 f4       	brne	.+2      	; 0x4b4 <vfprintf+0x64>
 4b2:	be c1       	rjmp	.+892    	; 0x830 <vfprintf+0x3e0>
 4b4:	85 32       	cpi	r24, 0x25	; 37
 4b6:	39 f4       	brne	.+14     	; 0x4c6 <vfprintf+0x76>
 4b8:	93 fd       	sbrc	r25, 3
 4ba:	85 91       	lpm	r24, Z+
 4bc:	93 ff       	sbrs	r25, 3
 4be:	81 91       	ld	r24, Z+
 4c0:	1f 01       	movw	r2, r30
 4c2:	85 32       	cpi	r24, 0x25	; 37
 4c4:	29 f4       	brne	.+10     	; 0x4d0 <vfprintf+0x80>
 4c6:	90 e0       	ldi	r25, 0x00	; 0
 4c8:	b6 01       	movw	r22, r12
 4ca:	0e 94 4e 04 	call	0x89c	; 0x89c <fputc>
 4ce:	e7 cf       	rjmp	.-50     	; 0x49e <vfprintf+0x4e>
 4d0:	ee 24       	eor	r14, r14
 4d2:	ff 24       	eor	r15, r15
 4d4:	20 e0       	ldi	r18, 0x00	; 0
 4d6:	20 32       	cpi	r18, 0x20	; 32
 4d8:	b0 f4       	brcc	.+44     	; 0x506 <vfprintf+0xb6>
 4da:	8b 32       	cpi	r24, 0x2B	; 43
 4dc:	69 f0       	breq	.+26     	; 0x4f8 <vfprintf+0xa8>
 4de:	8c 32       	cpi	r24, 0x2C	; 44
 4e0:	28 f4       	brcc	.+10     	; 0x4ec <vfprintf+0x9c>
 4e2:	80 32       	cpi	r24, 0x20	; 32
 4e4:	51 f0       	breq	.+20     	; 0x4fa <vfprintf+0xaa>
 4e6:	83 32       	cpi	r24, 0x23	; 35
 4e8:	71 f4       	brne	.+28     	; 0x506 <vfprintf+0xb6>
 4ea:	0b c0       	rjmp	.+22     	; 0x502 <vfprintf+0xb2>
 4ec:	8d 32       	cpi	r24, 0x2D	; 45
 4ee:	39 f0       	breq	.+14     	; 0x4fe <vfprintf+0xae>
 4f0:	80 33       	cpi	r24, 0x30	; 48
 4f2:	49 f4       	brne	.+18     	; 0x506 <vfprintf+0xb6>
 4f4:	21 60       	ori	r18, 0x01	; 1
 4f6:	2c c0       	rjmp	.+88     	; 0x550 <vfprintf+0x100>
 4f8:	22 60       	ori	r18, 0x02	; 2
 4fa:	24 60       	ori	r18, 0x04	; 4
 4fc:	29 c0       	rjmp	.+82     	; 0x550 <vfprintf+0x100>
 4fe:	28 60       	ori	r18, 0x08	; 8
 500:	27 c0       	rjmp	.+78     	; 0x550 <vfprintf+0x100>
 502:	20 61       	ori	r18, 0x10	; 16
 504:	25 c0       	rjmp	.+74     	; 0x550 <vfprintf+0x100>
 506:	27 fd       	sbrc	r18, 7
 508:	2c c0       	rjmp	.+88     	; 0x562 <vfprintf+0x112>
 50a:	38 2f       	mov	r19, r24
 50c:	30 53       	subi	r19, 0x30	; 48
 50e:	3a 30       	cpi	r19, 0x0A	; 10
 510:	98 f4       	brcc	.+38     	; 0x538 <vfprintf+0xe8>
 512:	26 ff       	sbrs	r18, 6
 514:	08 c0       	rjmp	.+16     	; 0x526 <vfprintf+0xd6>
 516:	8e 2d       	mov	r24, r14
 518:	88 0f       	add	r24, r24
 51a:	e8 2e       	mov	r14, r24
 51c:	ee 0c       	add	r14, r14
 51e:	ee 0c       	add	r14, r14
 520:	e8 0e       	add	r14, r24
 522:	e3 0e       	add	r14, r19
 524:	15 c0       	rjmp	.+42     	; 0x550 <vfprintf+0x100>
 526:	8f 2d       	mov	r24, r15
 528:	88 0f       	add	r24, r24
 52a:	f8 2e       	mov	r15, r24
 52c:	ff 0c       	add	r15, r15
 52e:	ff 0c       	add	r15, r15
 530:	f8 0e       	add	r15, r24
 532:	f3 0e       	add	r15, r19
 534:	20 62       	ori	r18, 0x20	; 32
 536:	0c c0       	rjmp	.+24     	; 0x550 <vfprintf+0x100>
 538:	8e 32       	cpi	r24, 0x2E	; 46
 53a:	21 f4       	brne	.+8      	; 0x544 <vfprintf+0xf4>
 53c:	26 fd       	sbrc	r18, 6
 53e:	78 c1       	rjmp	.+752    	; 0x830 <vfprintf+0x3e0>
 540:	20 64       	ori	r18, 0x40	; 64
 542:	06 c0       	rjmp	.+12     	; 0x550 <vfprintf+0x100>
 544:	8c 36       	cpi	r24, 0x6C	; 108
 546:	11 f4       	brne	.+4      	; 0x54c <vfprintf+0xfc>
 548:	20 68       	ori	r18, 0x80	; 128
 54a:	02 c0       	rjmp	.+4      	; 0x550 <vfprintf+0x100>
 54c:	88 36       	cpi	r24, 0x68	; 104
 54e:	49 f4       	brne	.+18     	; 0x562 <vfprintf+0x112>
 550:	f1 01       	movw	r30, r2
 552:	93 fd       	sbrc	r25, 3
 554:	85 91       	lpm	r24, Z+
 556:	93 ff       	sbrs	r25, 3
 558:	81 91       	ld	r24, Z+
 55a:	1f 01       	movw	r2, r30
 55c:	88 23       	and	r24, r24
 55e:	09 f0       	breq	.+2      	; 0x562 <vfprintf+0x112>
 560:	ba cf       	rjmp	.-140    	; 0x4d6 <vfprintf+0x86>
 562:	98 2f       	mov	r25, r24
 564:	95 54       	subi	r25, 0x45	; 69
 566:	93 30       	cpi	r25, 0x03	; 3
 568:	18 f0       	brcs	.+6      	; 0x570 <vfprintf+0x120>
 56a:	90 52       	subi	r25, 0x20	; 32
 56c:	93 30       	cpi	r25, 0x03	; 3
 56e:	28 f4       	brcc	.+10     	; 0x57a <vfprintf+0x12a>
 570:	0c 5f       	subi	r16, 0xFC	; 252
 572:	1f 4f       	sbci	r17, 0xFF	; 255
 574:	ff e3       	ldi	r31, 0x3F	; 63
 576:	f9 83       	std	Y+1, r31	; 0x01
 578:	0d c0       	rjmp	.+26     	; 0x594 <vfprintf+0x144>
 57a:	83 36       	cpi	r24, 0x63	; 99
 57c:	31 f0       	breq	.+12     	; 0x58a <vfprintf+0x13a>
 57e:	83 37       	cpi	r24, 0x73	; 115
 580:	71 f0       	breq	.+28     	; 0x59e <vfprintf+0x14e>
 582:	83 35       	cpi	r24, 0x53	; 83
 584:	09 f0       	breq	.+2      	; 0x588 <vfprintf+0x138>
 586:	60 c0       	rjmp	.+192    	; 0x648 <vfprintf+0x1f8>
 588:	22 c0       	rjmp	.+68     	; 0x5ce <vfprintf+0x17e>
 58a:	f8 01       	movw	r30, r16
 58c:	80 81       	ld	r24, Z
 58e:	89 83       	std	Y+1, r24	; 0x01
 590:	0e 5f       	subi	r16, 0xFE	; 254
 592:	1f 4f       	sbci	r17, 0xFF	; 255
 594:	42 01       	movw	r8, r4
 596:	71 e0       	ldi	r23, 0x01	; 1
 598:	a7 2e       	mov	r10, r23
 59a:	b1 2c       	mov	r11, r1
 59c:	16 c0       	rjmp	.+44     	; 0x5ca <vfprintf+0x17a>
 59e:	62 e0       	ldi	r22, 0x02	; 2
 5a0:	66 2e       	mov	r6, r22
 5a2:	71 2c       	mov	r7, r1
 5a4:	60 0e       	add	r6, r16
 5a6:	71 1e       	adc	r7, r17
 5a8:	f8 01       	movw	r30, r16
 5aa:	80 80       	ld	r8, Z
 5ac:	91 80       	ldd	r9, Z+1	; 0x01
 5ae:	26 ff       	sbrs	r18, 6
 5b0:	03 c0       	rjmp	.+6      	; 0x5b8 <vfprintf+0x168>
 5b2:	6e 2d       	mov	r22, r14
 5b4:	70 e0       	ldi	r23, 0x00	; 0
 5b6:	02 c0       	rjmp	.+4      	; 0x5bc <vfprintf+0x16c>
 5b8:	6f ef       	ldi	r22, 0xFF	; 255
 5ba:	7f ef       	ldi	r23, 0xFF	; 255
 5bc:	c4 01       	movw	r24, r8
 5be:	2c 87       	std	Y+12, r18	; 0x0c
 5c0:	0e 94 43 04 	call	0x886	; 0x886 <strnlen>
 5c4:	5c 01       	movw	r10, r24
 5c6:	83 01       	movw	r16, r6
 5c8:	2c 85       	ldd	r18, Y+12	; 0x0c
 5ca:	2f 77       	andi	r18, 0x7F	; 127
 5cc:	17 c0       	rjmp	.+46     	; 0x5fc <vfprintf+0x1ac>
 5ce:	52 e0       	ldi	r21, 0x02	; 2
 5d0:	65 2e       	mov	r6, r21
 5d2:	71 2c       	mov	r7, r1
 5d4:	60 0e       	add	r6, r16
 5d6:	71 1e       	adc	r7, r17
 5d8:	f8 01       	movw	r30, r16
 5da:	80 80       	ld	r8, Z
 5dc:	91 80       	ldd	r9, Z+1	; 0x01
 5de:	26 ff       	sbrs	r18, 6
 5e0:	03 c0       	rjmp	.+6      	; 0x5e8 <vfprintf+0x198>
 5e2:	6e 2d       	mov	r22, r14
 5e4:	70 e0       	ldi	r23, 0x00	; 0
 5e6:	02 c0       	rjmp	.+4      	; 0x5ec <vfprintf+0x19c>
 5e8:	6f ef       	ldi	r22, 0xFF	; 255
 5ea:	7f ef       	ldi	r23, 0xFF	; 255
 5ec:	c4 01       	movw	r24, r8
 5ee:	2c 87       	std	Y+12, r18	; 0x0c
 5f0:	0e 94 38 04 	call	0x870	; 0x870 <strnlen_P>
 5f4:	5c 01       	movw	r10, r24
 5f6:	2c 85       	ldd	r18, Y+12	; 0x0c
 5f8:	20 68       	ori	r18, 0x80	; 128
 5fa:	83 01       	movw	r16, r6
 5fc:	23 fd       	sbrc	r18, 3
 5fe:	20 c0       	rjmp	.+64     	; 0x640 <vfprintf+0x1f0>
 600:	08 c0       	rjmp	.+16     	; 0x612 <vfprintf+0x1c2>
 602:	80 e2       	ldi	r24, 0x20	; 32
 604:	90 e0       	ldi	r25, 0x00	; 0
 606:	b6 01       	movw	r22, r12
 608:	2c 87       	std	Y+12, r18	; 0x0c
 60a:	0e 94 4e 04 	call	0x89c	; 0x89c <fputc>
 60e:	fa 94       	dec	r15
 610:	2c 85       	ldd	r18, Y+12	; 0x0c
 612:	8f 2d       	mov	r24, r15
 614:	90 e0       	ldi	r25, 0x00	; 0
 616:	a8 16       	cp	r10, r24
 618:	b9 06       	cpc	r11, r25
 61a:	98 f3       	brcs	.-26     	; 0x602 <vfprintf+0x1b2>
 61c:	11 c0       	rjmp	.+34     	; 0x640 <vfprintf+0x1f0>
 61e:	f4 01       	movw	r30, r8
 620:	27 fd       	sbrc	r18, 7
 622:	85 91       	lpm	r24, Z+
 624:	27 ff       	sbrs	r18, 7
 626:	81 91       	ld	r24, Z+
 628:	4f 01       	movw	r8, r30
 62a:	90 e0       	ldi	r25, 0x00	; 0
 62c:	b6 01       	movw	r22, r12
 62e:	2c 87       	std	Y+12, r18	; 0x0c
 630:	0e 94 4e 04 	call	0x89c	; 0x89c <fputc>
 634:	2c 85       	ldd	r18, Y+12	; 0x0c
 636:	f1 10       	cpse	r15, r1
 638:	fa 94       	dec	r15
 63a:	08 94       	sec
 63c:	a1 08       	sbc	r10, r1
 63e:	b1 08       	sbc	r11, r1
 640:	a1 14       	cp	r10, r1
 642:	b1 04       	cpc	r11, r1
 644:	61 f7       	brne	.-40     	; 0x61e <vfprintf+0x1ce>
 646:	f1 c0       	rjmp	.+482    	; 0x82a <vfprintf+0x3da>
 648:	84 36       	cpi	r24, 0x64	; 100
 64a:	11 f0       	breq	.+4      	; 0x650 <vfprintf+0x200>
 64c:	89 36       	cpi	r24, 0x69	; 105
 64e:	49 f5       	brne	.+82     	; 0x6a2 <vfprintf+0x252>
 650:	27 ff       	sbrs	r18, 7
 652:	08 c0       	rjmp	.+16     	; 0x664 <vfprintf+0x214>
 654:	f8 01       	movw	r30, r16
 656:	60 81       	ld	r22, Z
 658:	71 81       	ldd	r23, Z+1	; 0x01
 65a:	82 81       	ldd	r24, Z+2	; 0x02
 65c:	93 81       	ldd	r25, Z+3	; 0x03
 65e:	0c 5f       	subi	r16, 0xFC	; 252
 660:	1f 4f       	sbci	r17, 0xFF	; 255
 662:	09 c0       	rjmp	.+18     	; 0x676 <vfprintf+0x226>
 664:	f8 01       	movw	r30, r16
 666:	60 81       	ld	r22, Z
 668:	71 81       	ldd	r23, Z+1	; 0x01
 66a:	88 27       	eor	r24, r24
 66c:	77 fd       	sbrc	r23, 7
 66e:	80 95       	com	r24
 670:	98 2f       	mov	r25, r24
 672:	0e 5f       	subi	r16, 0xFE	; 254
 674:	1f 4f       	sbci	r17, 0xFF	; 255
 676:	4f e6       	ldi	r20, 0x6F	; 111
 678:	b4 2e       	mov	r11, r20
 67a:	b2 22       	and	r11, r18
 67c:	97 ff       	sbrs	r25, 7
 67e:	09 c0       	rjmp	.+18     	; 0x692 <vfprintf+0x242>
 680:	90 95       	com	r25
 682:	80 95       	com	r24
 684:	70 95       	com	r23
 686:	61 95       	neg	r22
 688:	7f 4f       	sbci	r23, 0xFF	; 255
 68a:	8f 4f       	sbci	r24, 0xFF	; 255
 68c:	9f 4f       	sbci	r25, 0xFF	; 255
 68e:	f0 e8       	ldi	r31, 0x80	; 128
 690:	bf 2a       	or	r11, r31
 692:	a2 01       	movw	r20, r4
 694:	2a e0       	ldi	r18, 0x0A	; 10
 696:	30 e0       	ldi	r19, 0x00	; 0
 698:	0e 94 7a 04 	call	0x8f4	; 0x8f4 <__ultoa_invert>
 69c:	78 2e       	mov	r7, r24
 69e:	74 18       	sub	r7, r4
 6a0:	45 c0       	rjmp	.+138    	; 0x72c <vfprintf+0x2dc>
 6a2:	85 37       	cpi	r24, 0x75	; 117
 6a4:	31 f4       	brne	.+12     	; 0x6b2 <vfprintf+0x262>
 6a6:	3f ee       	ldi	r19, 0xEF	; 239
 6a8:	b3 2e       	mov	r11, r19
 6aa:	b2 22       	and	r11, r18
 6ac:	2a e0       	ldi	r18, 0x0A	; 10
 6ae:	30 e0       	ldi	r19, 0x00	; 0
 6b0:	25 c0       	rjmp	.+74     	; 0x6fc <vfprintf+0x2ac>
 6b2:	99 ef       	ldi	r25, 0xF9	; 249
 6b4:	b9 2e       	mov	r11, r25
 6b6:	b2 22       	and	r11, r18
 6b8:	8f 36       	cpi	r24, 0x6F	; 111
 6ba:	c1 f0       	breq	.+48     	; 0x6ec <vfprintf+0x29c>
 6bc:	80 37       	cpi	r24, 0x70	; 112
 6be:	20 f4       	brcc	.+8      	; 0x6c8 <vfprintf+0x278>
 6c0:	88 35       	cpi	r24, 0x58	; 88
 6c2:	09 f0       	breq	.+2      	; 0x6c6 <vfprintf+0x276>
 6c4:	b5 c0       	rjmp	.+362    	; 0x830 <vfprintf+0x3e0>
 6c6:	0d c0       	rjmp	.+26     	; 0x6e2 <vfprintf+0x292>
 6c8:	80 37       	cpi	r24, 0x70	; 112
 6ca:	21 f0       	breq	.+8      	; 0x6d4 <vfprintf+0x284>
 6cc:	88 37       	cpi	r24, 0x78	; 120
 6ce:	09 f0       	breq	.+2      	; 0x6d2 <vfprintf+0x282>
 6d0:	af c0       	rjmp	.+350    	; 0x830 <vfprintf+0x3e0>
 6d2:	02 c0       	rjmp	.+4      	; 0x6d8 <vfprintf+0x288>
 6d4:	20 e1       	ldi	r18, 0x10	; 16
 6d6:	b2 2a       	or	r11, r18
 6d8:	b4 fe       	sbrs	r11, 4
 6da:	0b c0       	rjmp	.+22     	; 0x6f2 <vfprintf+0x2a2>
 6dc:	84 e0       	ldi	r24, 0x04	; 4
 6de:	b8 2a       	or	r11, r24
 6e0:	08 c0       	rjmp	.+16     	; 0x6f2 <vfprintf+0x2a2>
 6e2:	b4 fe       	sbrs	r11, 4
 6e4:	09 c0       	rjmp	.+18     	; 0x6f8 <vfprintf+0x2a8>
 6e6:	e6 e0       	ldi	r30, 0x06	; 6
 6e8:	be 2a       	or	r11, r30
 6ea:	06 c0       	rjmp	.+12     	; 0x6f8 <vfprintf+0x2a8>
 6ec:	28 e0       	ldi	r18, 0x08	; 8
 6ee:	30 e0       	ldi	r19, 0x00	; 0
 6f0:	05 c0       	rjmp	.+10     	; 0x6fc <vfprintf+0x2ac>
 6f2:	20 e1       	ldi	r18, 0x10	; 16
 6f4:	30 e0       	ldi	r19, 0x00	; 0
 6f6:	02 c0       	rjmp	.+4      	; 0x6fc <vfprintf+0x2ac>
 6f8:	20 e1       	ldi	r18, 0x10	; 16
 6fa:	32 e0       	ldi	r19, 0x02	; 2
 6fc:	b7 fe       	sbrs	r11, 7
 6fe:	08 c0       	rjmp	.+16     	; 0x710 <vfprintf+0x2c0>
 700:	f8 01       	movw	r30, r16
 702:	60 81       	ld	r22, Z
 704:	71 81       	ldd	r23, Z+1	; 0x01
 706:	82 81       	ldd	r24, Z+2	; 0x02
 708:	93 81       	ldd	r25, Z+3	; 0x03
 70a:	0c 5f       	subi	r16, 0xFC	; 252
 70c:	1f 4f       	sbci	r17, 0xFF	; 255
 70e:	07 c0       	rjmp	.+14     	; 0x71e <vfprintf+0x2ce>
 710:	f8 01       	movw	r30, r16
 712:	60 81       	ld	r22, Z
 714:	71 81       	ldd	r23, Z+1	; 0x01
 716:	80 e0       	ldi	r24, 0x00	; 0
 718:	90 e0       	ldi	r25, 0x00	; 0
 71a:	0e 5f       	subi	r16, 0xFE	; 254
 71c:	1f 4f       	sbci	r17, 0xFF	; 255
 71e:	a2 01       	movw	r20, r4
 720:	0e 94 7a 04 	call	0x8f4	; 0x8f4 <__ultoa_invert>
 724:	78 2e       	mov	r7, r24
 726:	74 18       	sub	r7, r4
 728:	ff e7       	ldi	r31, 0x7F	; 127
 72a:	bf 22       	and	r11, r31
 72c:	b6 fe       	sbrs	r11, 6
 72e:	0b c0       	rjmp	.+22     	; 0x746 <vfprintf+0x2f6>
 730:	2e ef       	ldi	r18, 0xFE	; 254
 732:	b2 22       	and	r11, r18
 734:	7e 14       	cp	r7, r14
 736:	38 f4       	brcc	.+14     	; 0x746 <vfprintf+0x2f6>
 738:	b4 fe       	sbrs	r11, 4
 73a:	07 c0       	rjmp	.+14     	; 0x74a <vfprintf+0x2fa>
 73c:	b2 fc       	sbrc	r11, 2
 73e:	05 c0       	rjmp	.+10     	; 0x74a <vfprintf+0x2fa>
 740:	8f ee       	ldi	r24, 0xEF	; 239
 742:	b8 22       	and	r11, r24
 744:	02 c0       	rjmp	.+4      	; 0x74a <vfprintf+0x2fa>
 746:	a7 2c       	mov	r10, r7
 748:	01 c0       	rjmp	.+2      	; 0x74c <vfprintf+0x2fc>
 74a:	ae 2c       	mov	r10, r14
 74c:	8b 2d       	mov	r24, r11
 74e:	90 e0       	ldi	r25, 0x00	; 0
 750:	b4 fe       	sbrs	r11, 4
 752:	0d c0       	rjmp	.+26     	; 0x76e <vfprintf+0x31e>
 754:	fe 01       	movw	r30, r28
 756:	e7 0d       	add	r30, r7
 758:	f1 1d       	adc	r31, r1
 75a:	20 81       	ld	r18, Z
 75c:	20 33       	cpi	r18, 0x30	; 48
 75e:	19 f4       	brne	.+6      	; 0x766 <vfprintf+0x316>
 760:	e9 ee       	ldi	r30, 0xE9	; 233
 762:	be 22       	and	r11, r30
 764:	09 c0       	rjmp	.+18     	; 0x778 <vfprintf+0x328>
 766:	a3 94       	inc	r10
 768:	b2 fe       	sbrs	r11, 2
 76a:	06 c0       	rjmp	.+12     	; 0x778 <vfprintf+0x328>
 76c:	04 c0       	rjmp	.+8      	; 0x776 <vfprintf+0x326>
 76e:	86 78       	andi	r24, 0x86	; 134
 770:	90 70       	andi	r25, 0x00	; 0
 772:	00 97       	sbiw	r24, 0x00	; 0
 774:	09 f0       	breq	.+2      	; 0x778 <vfprintf+0x328>
 776:	a3 94       	inc	r10
 778:	8b 2c       	mov	r8, r11
 77a:	99 24       	eor	r9, r9
 77c:	b3 fc       	sbrc	r11, 3
 77e:	14 c0       	rjmp	.+40     	; 0x7a8 <vfprintf+0x358>
 780:	b0 fe       	sbrs	r11, 0
 782:	0f c0       	rjmp	.+30     	; 0x7a2 <vfprintf+0x352>
 784:	af 14       	cp	r10, r15
 786:	28 f4       	brcc	.+10     	; 0x792 <vfprintf+0x342>
 788:	e7 2c       	mov	r14, r7
 78a:	ef 0c       	add	r14, r15
 78c:	ea 18       	sub	r14, r10
 78e:	af 2c       	mov	r10, r15
 790:	08 c0       	rjmp	.+16     	; 0x7a2 <vfprintf+0x352>
 792:	e7 2c       	mov	r14, r7
 794:	06 c0       	rjmp	.+12     	; 0x7a2 <vfprintf+0x352>
 796:	80 e2       	ldi	r24, 0x20	; 32
 798:	90 e0       	ldi	r25, 0x00	; 0
 79a:	b6 01       	movw	r22, r12
 79c:	0e 94 4e 04 	call	0x89c	; 0x89c <fputc>
 7a0:	a3 94       	inc	r10
 7a2:	af 14       	cp	r10, r15
 7a4:	c0 f3       	brcs	.-16     	; 0x796 <vfprintf+0x346>
 7a6:	04 c0       	rjmp	.+8      	; 0x7b0 <vfprintf+0x360>
 7a8:	af 14       	cp	r10, r15
 7aa:	10 f4       	brcc	.+4      	; 0x7b0 <vfprintf+0x360>
 7ac:	fa 18       	sub	r15, r10
 7ae:	01 c0       	rjmp	.+2      	; 0x7b2 <vfprintf+0x362>
 7b0:	ff 24       	eor	r15, r15
 7b2:	84 fe       	sbrs	r8, 4
 7b4:	0f c0       	rjmp	.+30     	; 0x7d4 <vfprintf+0x384>
 7b6:	80 e3       	ldi	r24, 0x30	; 48
 7b8:	90 e0       	ldi	r25, 0x00	; 0
 7ba:	b6 01       	movw	r22, r12
 7bc:	0e 94 4e 04 	call	0x89c	; 0x89c <fputc>
 7c0:	82 fe       	sbrs	r8, 2
 7c2:	1f c0       	rjmp	.+62     	; 0x802 <vfprintf+0x3b2>
 7c4:	81 fe       	sbrs	r8, 1
 7c6:	03 c0       	rjmp	.+6      	; 0x7ce <vfprintf+0x37e>
 7c8:	88 e5       	ldi	r24, 0x58	; 88
 7ca:	90 e0       	ldi	r25, 0x00	; 0
 7cc:	10 c0       	rjmp	.+32     	; 0x7ee <vfprintf+0x39e>
 7ce:	88 e7       	ldi	r24, 0x78	; 120
 7d0:	90 e0       	ldi	r25, 0x00	; 0
 7d2:	0d c0       	rjmp	.+26     	; 0x7ee <vfprintf+0x39e>
 7d4:	c4 01       	movw	r24, r8
 7d6:	86 78       	andi	r24, 0x86	; 134
 7d8:	90 70       	andi	r25, 0x00	; 0
 7da:	00 97       	sbiw	r24, 0x00	; 0
 7dc:	91 f0       	breq	.+36     	; 0x802 <vfprintf+0x3b2>
 7de:	81 fc       	sbrc	r8, 1
 7e0:	02 c0       	rjmp	.+4      	; 0x7e6 <vfprintf+0x396>
 7e2:	80 e2       	ldi	r24, 0x20	; 32
 7e4:	01 c0       	rjmp	.+2      	; 0x7e8 <vfprintf+0x398>
 7e6:	8b e2       	ldi	r24, 0x2B	; 43
 7e8:	b7 fc       	sbrc	r11, 7
 7ea:	8d e2       	ldi	r24, 0x2D	; 45
 7ec:	90 e0       	ldi	r25, 0x00	; 0
 7ee:	b6 01       	movw	r22, r12
 7f0:	0e 94 4e 04 	call	0x89c	; 0x89c <fputc>
 7f4:	06 c0       	rjmp	.+12     	; 0x802 <vfprintf+0x3b2>
 7f6:	80 e3       	ldi	r24, 0x30	; 48
 7f8:	90 e0       	ldi	r25, 0x00	; 0
 7fa:	b6 01       	movw	r22, r12
 7fc:	0e 94 4e 04 	call	0x89c	; 0x89c <fputc>
 800:	ea 94       	dec	r14
 802:	7e 14       	cp	r7, r14
 804:	c0 f3       	brcs	.-16     	; 0x7f6 <vfprintf+0x3a6>
 806:	7a 94       	dec	r7
 808:	f2 01       	movw	r30, r4
 80a:	e7 0d       	add	r30, r7
 80c:	f1 1d       	adc	r31, r1
 80e:	80 81       	ld	r24, Z
 810:	90 e0       	ldi	r25, 0x00	; 0
 812:	b6 01       	movw	r22, r12
 814:	0e 94 4e 04 	call	0x89c	; 0x89c <fputc>
 818:	77 20       	and	r7, r7
 81a:	a9 f7       	brne	.-22     	; 0x806 <vfprintf+0x3b6>
 81c:	06 c0       	rjmp	.+12     	; 0x82a <vfprintf+0x3da>
 81e:	80 e2       	ldi	r24, 0x20	; 32
 820:	90 e0       	ldi	r25, 0x00	; 0
 822:	b6 01       	movw	r22, r12
 824:	0e 94 4e 04 	call	0x89c	; 0x89c <fputc>
 828:	fa 94       	dec	r15
 82a:	ff 20       	and	r15, r15
 82c:	c1 f7       	brne	.-16     	; 0x81e <vfprintf+0x3ce>
 82e:	37 ce       	rjmp	.-914    	; 0x49e <vfprintf+0x4e>
 830:	f6 01       	movw	r30, r12
 832:	26 81       	ldd	r18, Z+6	; 0x06
 834:	37 81       	ldd	r19, Z+7	; 0x07
 836:	02 c0       	rjmp	.+4      	; 0x83c <vfprintf+0x3ec>
 838:	2f ef       	ldi	r18, 0xFF	; 255
 83a:	3f ef       	ldi	r19, 0xFF	; 255
 83c:	c9 01       	movw	r24, r18
 83e:	2c 96       	adiw	r28, 0x0c	; 12
 840:	0f b6       	in	r0, 0x3f	; 63
 842:	f8 94       	cli
 844:	de bf       	out	0x3e, r29	; 62
 846:	0f be       	out	0x3f, r0	; 63
 848:	cd bf       	out	0x3d, r28	; 61
 84a:	cf 91       	pop	r28
 84c:	df 91       	pop	r29
 84e:	1f 91       	pop	r17
 850:	0f 91       	pop	r16
 852:	ff 90       	pop	r15
 854:	ef 90       	pop	r14
 856:	df 90       	pop	r13
 858:	cf 90       	pop	r12
 85a:	bf 90       	pop	r11
 85c:	af 90       	pop	r10
 85e:	9f 90       	pop	r9
 860:	8f 90       	pop	r8
 862:	7f 90       	pop	r7
 864:	6f 90       	pop	r6
 866:	5f 90       	pop	r5
 868:	4f 90       	pop	r4
 86a:	3f 90       	pop	r3
 86c:	2f 90       	pop	r2
 86e:	08 95       	ret

00000870 <strnlen_P>:
 870:	fc 01       	movw	r30, r24
 872:	05 90       	lpm	r0, Z+
 874:	61 50       	subi	r22, 0x01	; 1
 876:	70 40       	sbci	r23, 0x00	; 0
 878:	01 10       	cpse	r0, r1
 87a:	d8 f7       	brcc	.-10     	; 0x872 <strnlen_P+0x2>
 87c:	80 95       	com	r24
 87e:	90 95       	com	r25
 880:	8e 0f       	add	r24, r30
 882:	9f 1f       	adc	r25, r31
 884:	08 95       	ret

00000886 <strnlen>:
 886:	fc 01       	movw	r30, r24
 888:	61 50       	subi	r22, 0x01	; 1
 88a:	70 40       	sbci	r23, 0x00	; 0
 88c:	01 90       	ld	r0, Z+
 88e:	01 10       	cpse	r0, r1
 890:	d8 f7       	brcc	.-10     	; 0x888 <strnlen+0x2>
 892:	80 95       	com	r24
 894:	90 95       	com	r25
 896:	8e 0f       	add	r24, r30
 898:	9f 1f       	adc	r25, r31
 89a:	08 95       	ret

0000089c <fputc>:
 89c:	0f 93       	push	r16
 89e:	1f 93       	push	r17
 8a0:	cf 93       	push	r28
 8a2:	df 93       	push	r29
 8a4:	8c 01       	movw	r16, r24
 8a6:	eb 01       	movw	r28, r22
 8a8:	8b 81       	ldd	r24, Y+3	; 0x03
 8aa:	81 ff       	sbrs	r24, 1
 8ac:	1b c0       	rjmp	.+54     	; 0x8e4 <fputc+0x48>
 8ae:	82 ff       	sbrs	r24, 2
 8b0:	0d c0       	rjmp	.+26     	; 0x8cc <fputc+0x30>
 8b2:	2e 81       	ldd	r18, Y+6	; 0x06
 8b4:	3f 81       	ldd	r19, Y+7	; 0x07
 8b6:	8c 81       	ldd	r24, Y+4	; 0x04
 8b8:	9d 81       	ldd	r25, Y+5	; 0x05
 8ba:	28 17       	cp	r18, r24
 8bc:	39 07       	cpc	r19, r25
 8be:	64 f4       	brge	.+24     	; 0x8d8 <fputc+0x3c>
 8c0:	e8 81       	ld	r30, Y
 8c2:	f9 81       	ldd	r31, Y+1	; 0x01
 8c4:	01 93       	st	Z+, r16
 8c6:	f9 83       	std	Y+1, r31	; 0x01
 8c8:	e8 83       	st	Y, r30
 8ca:	06 c0       	rjmp	.+12     	; 0x8d8 <fputc+0x3c>
 8cc:	e8 85       	ldd	r30, Y+8	; 0x08
 8ce:	f9 85       	ldd	r31, Y+9	; 0x09
 8d0:	80 2f       	mov	r24, r16
 8d2:	09 95       	icall
 8d4:	00 97       	sbiw	r24, 0x00	; 0
 8d6:	31 f4       	brne	.+12     	; 0x8e4 <fputc+0x48>
 8d8:	8e 81       	ldd	r24, Y+6	; 0x06
 8da:	9f 81       	ldd	r25, Y+7	; 0x07
 8dc:	01 96       	adiw	r24, 0x01	; 1
 8de:	9f 83       	std	Y+7, r25	; 0x07
 8e0:	8e 83       	std	Y+6, r24	; 0x06
 8e2:	02 c0       	rjmp	.+4      	; 0x8e8 <fputc+0x4c>
 8e4:	0f ef       	ldi	r16, 0xFF	; 255
 8e6:	1f ef       	ldi	r17, 0xFF	; 255
 8e8:	c8 01       	movw	r24, r16
 8ea:	df 91       	pop	r29
 8ec:	cf 91       	pop	r28
 8ee:	1f 91       	pop	r17
 8f0:	0f 91       	pop	r16
 8f2:	08 95       	ret

000008f4 <__ultoa_invert>:
 8f4:	fa 01       	movw	r30, r20
 8f6:	aa 27       	eor	r26, r26
 8f8:	28 30       	cpi	r18, 0x08	; 8
 8fa:	51 f1       	breq	.+84     	; 0x950 <__ultoa_invert+0x5c>
 8fc:	20 31       	cpi	r18, 0x10	; 16
 8fe:	81 f1       	breq	.+96     	; 0x960 <__ultoa_invert+0x6c>
 900:	e8 94       	clt
 902:	6f 93       	push	r22
 904:	6e 7f       	andi	r22, 0xFE	; 254
 906:	6e 5f       	subi	r22, 0xFE	; 254
 908:	7f 4f       	sbci	r23, 0xFF	; 255
 90a:	8f 4f       	sbci	r24, 0xFF	; 255
 90c:	9f 4f       	sbci	r25, 0xFF	; 255
 90e:	af 4f       	sbci	r26, 0xFF	; 255
 910:	b1 e0       	ldi	r27, 0x01	; 1
 912:	3e d0       	rcall	.+124    	; 0x990 <__ultoa_invert+0x9c>
 914:	b4 e0       	ldi	r27, 0x04	; 4
 916:	3c d0       	rcall	.+120    	; 0x990 <__ultoa_invert+0x9c>
 918:	67 0f       	add	r22, r23
 91a:	78 1f       	adc	r23, r24
 91c:	89 1f       	adc	r24, r25
 91e:	9a 1f       	adc	r25, r26
 920:	a1 1d       	adc	r26, r1
 922:	68 0f       	add	r22, r24
 924:	79 1f       	adc	r23, r25
 926:	8a 1f       	adc	r24, r26
 928:	91 1d       	adc	r25, r1
 92a:	a1 1d       	adc	r26, r1
 92c:	6a 0f       	add	r22, r26
 92e:	71 1d       	adc	r23, r1
 930:	81 1d       	adc	r24, r1
 932:	91 1d       	adc	r25, r1
 934:	a1 1d       	adc	r26, r1
 936:	20 d0       	rcall	.+64     	; 0x978 <__ultoa_invert+0x84>
 938:	09 f4       	brne	.+2      	; 0x93c <__ultoa_invert+0x48>
 93a:	68 94       	set
 93c:	3f 91       	pop	r19
 93e:	2a e0       	ldi	r18, 0x0A	; 10
 940:	26 9f       	mul	r18, r22
 942:	11 24       	eor	r1, r1
 944:	30 19       	sub	r19, r0
 946:	30 5d       	subi	r19, 0xD0	; 208
 948:	31 93       	st	Z+, r19
 94a:	de f6       	brtc	.-74     	; 0x902 <__ultoa_invert+0xe>
 94c:	cf 01       	movw	r24, r30
 94e:	08 95       	ret
 950:	46 2f       	mov	r20, r22
 952:	47 70       	andi	r20, 0x07	; 7
 954:	40 5d       	subi	r20, 0xD0	; 208
 956:	41 93       	st	Z+, r20
 958:	b3 e0       	ldi	r27, 0x03	; 3
 95a:	0f d0       	rcall	.+30     	; 0x97a <__ultoa_invert+0x86>
 95c:	c9 f7       	brne	.-14     	; 0x950 <__ultoa_invert+0x5c>
 95e:	f6 cf       	rjmp	.-20     	; 0x94c <__ultoa_invert+0x58>
 960:	46 2f       	mov	r20, r22
 962:	4f 70       	andi	r20, 0x0F	; 15
 964:	40 5d       	subi	r20, 0xD0	; 208
 966:	4a 33       	cpi	r20, 0x3A	; 58
 968:	18 f0       	brcs	.+6      	; 0x970 <__ultoa_invert+0x7c>
 96a:	49 5d       	subi	r20, 0xD9	; 217
 96c:	31 fd       	sbrc	r19, 1
 96e:	40 52       	subi	r20, 0x20	; 32
 970:	41 93       	st	Z+, r20
 972:	02 d0       	rcall	.+4      	; 0x978 <__ultoa_invert+0x84>
 974:	a9 f7       	brne	.-22     	; 0x960 <__ultoa_invert+0x6c>
 976:	ea cf       	rjmp	.-44     	; 0x94c <__ultoa_invert+0x58>
 978:	b4 e0       	ldi	r27, 0x04	; 4
 97a:	a6 95       	lsr	r26
 97c:	97 95       	ror	r25
 97e:	87 95       	ror	r24
 980:	77 95       	ror	r23
 982:	67 95       	ror	r22
 984:	ba 95       	dec	r27
 986:	c9 f7       	brne	.-14     	; 0x97a <__ultoa_invert+0x86>
 988:	00 97       	sbiw	r24, 0x00	; 0
 98a:	61 05       	cpc	r22, r1
 98c:	71 05       	cpc	r23, r1
 98e:	08 95       	ret
 990:	9b 01       	movw	r18, r22
 992:	ac 01       	movw	r20, r24
 994:	0a 2e       	mov	r0, r26
 996:	06 94       	lsr	r0
 998:	57 95       	ror	r21
 99a:	47 95       	ror	r20
 99c:	37 95       	ror	r19
 99e:	27 95       	ror	r18
 9a0:	ba 95       	dec	r27
 9a2:	c9 f7       	brne	.-14     	; 0x996 <__ultoa_invert+0xa2>
 9a4:	62 0f       	add	r22, r18
 9a6:	73 1f       	adc	r23, r19
 9a8:	84 1f       	adc	r24, r20
 9aa:	95 1f       	adc	r25, r21
 9ac:	a0 1d       	adc	r26, r0
 9ae:	08 95       	ret

000009b0 <_exit>:
 9b0:	f8 94       	cli

000009b2 <__stop_program>:
 9b2:	ff cf       	rjmp	.-2      	; 0x9b2 <__stop_program>
