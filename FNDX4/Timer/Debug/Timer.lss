
Timer.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000a  00800100  000004f8  0000058c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000004f8  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000c  0080010a  0080010a  00000596  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000596  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000005c8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000030  00000000  00000000  00000608  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000ab4  00000000  00000000  00000638  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000008a0  00000000  00000000  000010ec  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000353  00000000  00000000  0000198c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000d0  00000000  00000000  00001ce0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000481  00000000  00000000  00001db0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000002a4  00000000  00000000  00002231  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000020  00000000  00000000  000024d5  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	48 c0       	rjmp	.+144    	; 0xc6 <__bad_interrupt>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	43 c0       	rjmp	.+134    	; 0xc8 <__vector_16>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e8 ef       	ldi	r30, 0xF8	; 248
  a0:	f4 e0       	ldi	r31, 0x04	; 4
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	aa 30       	cpi	r26, 0x0A	; 10
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	aa e0       	ldi	r26, 0x0A	; 10
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	a6 31       	cpi	r26, 0x16	; 22
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	e2 d0       	rcall	.+452    	; 0x288 <main>
  c4:	17 c2       	rjmp	.+1070   	; 0x4f4 <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <__vector_16>:
unit8_t numbers[] = { 0x3F, 0x06, 0x5B, 0x4F, 0x66, 0x6D, 0x7D, 0x27, 0x7F, 0x67 };
volatile unit32_t millis = 0;
volatile unit16_t micros = 0;	

ISR(TIMER0_OVF_vect)
{
  c8:	1f 92       	push	r1
  ca:	0f 92       	push	r0
  cc:	0f b6       	in	r0, 0x3f	; 63
  ce:	0f 92       	push	r0
  d0:	11 24       	eor	r1, r1
  d2:	0b b6       	in	r0, 0x3b	; 59
  d4:	0f 92       	push	r0
  d6:	4f 92       	push	r4
  d8:	5f 92       	push	r5
  da:	6f 92       	push	r6
  dc:	7f 92       	push	r7
  de:	af 92       	push	r10
  e0:	bf 92       	push	r11
  e2:	cf 92       	push	r12
  e4:	df 92       	push	r13
  e6:	ef 92       	push	r14
  e8:	ff 92       	push	r15
  ea:	0f 93       	push	r16
  ec:	1f 93       	push	r17
  ee:	2f 93       	push	r18
  f0:	3f 93       	push	r19
  f2:	4f 93       	push	r20
  f4:	5f 93       	push	r21
  f6:	6f 93       	push	r22
  f8:	7f 93       	push	r23
  fa:	8f 93       	push	r24
  fc:	9f 93       	push	r25
  fe:	af 93       	push	r26
 100:	bf 93       	push	r27
 102:	cf 93       	push	r28
 104:	df 93       	push	r29
 106:	ef 93       	push	r30
 108:	ff 93       	push	r31
	micros += MICROS_PER_OVF;
 10a:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <__data_end>
 10e:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <__data_end+0x1>
 112:	a0 91 0c 01 	lds	r26, 0x010C	; 0x80010c <__data_end+0x2>
 116:	b0 91 0d 01 	lds	r27, 0x010D	; 0x80010d <__data_end+0x3>
 11a:	80 58       	subi	r24, 0x80	; 128
 11c:	9e 4f       	sbci	r25, 0xFE	; 254
 11e:	af 4f       	sbci	r26, 0xFF	; 255
 120:	bf 4f       	sbci	r27, 0xFF	; 255
 122:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <__data_end>
 126:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <__data_end+0x1>
 12a:	a0 93 0c 01 	sts	0x010C, r26	; 0x80010c <__data_end+0x2>
 12e:	b0 93 0d 01 	sts	0x010D, r27	; 0x80010d <__data_end+0x3>
	millis += MILLIS_PER_OVF;
 132:	20 91 0e 01 	lds	r18, 0x010E	; 0x80010e <millis>
 136:	30 91 0f 01 	lds	r19, 0x010F	; 0x80010f <millis+0x1>
 13a:	40 91 10 01 	lds	r20, 0x0110	; 0x800110 <millis+0x2>
 13e:	50 91 11 01 	lds	r21, 0x0111	; 0x800111 <millis+0x3>
 142:	60 91 12 01 	lds	r22, 0x0112	; 0x800112 <millis+0x4>
 146:	70 91 13 01 	lds	r23, 0x0113	; 0x800113 <millis+0x5>
 14a:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <millis+0x6>
 14e:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <millis+0x7>
 152:	a0 e1       	ldi	r26, 0x10	; 16
 154:	af d1       	rcall	.+862    	; 0x4b4 <__adddi3_s8>
 156:	20 93 0e 01 	sts	0x010E, r18	; 0x80010e <millis>
 15a:	30 93 0f 01 	sts	0x010F, r19	; 0x80010f <millis+0x1>
 15e:	40 93 10 01 	sts	0x0110, r20	; 0x800110 <millis+0x2>
 162:	50 93 11 01 	sts	0x0111, r21	; 0x800111 <millis+0x3>
 166:	60 93 12 01 	sts	0x0112, r22	; 0x800112 <millis+0x4>
 16a:	70 93 13 01 	sts	0x0113, r23	; 0x800113 <millis+0x5>
 16e:	80 93 14 01 	sts	0x0114, r24	; 0x800114 <millis+0x6>
 172:	90 93 15 01 	sts	0x0115, r25	; 0x800115 <millis+0x7>
	
	millis += (micros / 1000);
 176:	60 91 0a 01 	lds	r22, 0x010A	; 0x80010a <__data_end>
 17a:	70 91 0b 01 	lds	r23, 0x010B	; 0x80010b <__data_end+0x1>
 17e:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <__data_end+0x2>
 182:	90 91 0d 01 	lds	r25, 0x010D	; 0x80010d <__data_end+0x3>
 186:	a0 90 0e 01 	lds	r10, 0x010E	; 0x80010e <millis>
 18a:	b0 90 0f 01 	lds	r11, 0x010F	; 0x80010f <millis+0x1>
 18e:	c0 90 10 01 	lds	r12, 0x0110	; 0x800110 <millis+0x2>
 192:	d0 90 11 01 	lds	r13, 0x0111	; 0x800111 <millis+0x3>
 196:	e0 90 12 01 	lds	r14, 0x0112	; 0x800112 <millis+0x4>
 19a:	f0 90 13 01 	lds	r15, 0x0113	; 0x800113 <millis+0x5>
 19e:	00 91 14 01 	lds	r16, 0x0114	; 0x800114 <millis+0x6>
 1a2:	10 91 15 01 	lds	r17, 0x0115	; 0x800115 <millis+0x7>
 1a6:	0f 2e       	mov	r0, r31
 1a8:	f8 ee       	ldi	r31, 0xE8	; 232
 1aa:	4f 2e       	mov	r4, r31
 1ac:	f3 e0       	ldi	r31, 0x03	; 3
 1ae:	5f 2e       	mov	r5, r31
 1b0:	61 2c       	mov	r6, r1
 1b2:	71 2c       	mov	r7, r1
 1b4:	f0 2d       	mov	r31, r0
 1b6:	a3 01       	movw	r20, r6
 1b8:	92 01       	movw	r18, r4
 1ba:	f3 d0       	rcall	.+486    	; 0x3a2 <__udivmodsi4>
 1bc:	da 01       	movw	r26, r20
 1be:	c9 01       	movw	r24, r18
 1c0:	39 2f       	mov	r19, r25
 1c2:	4a 2f       	mov	r20, r26
 1c4:	5b 2f       	mov	r21, r27
 1c6:	60 e0       	ldi	r22, 0x00	; 0
 1c8:	70 e0       	ldi	r23, 0x00	; 0
 1ca:	80 e0       	ldi	r24, 0x00	; 0
 1cc:	90 e0       	ldi	r25, 0x00	; 0
 1ce:	69 d1       	rcall	.+722    	; 0x4a2 <__adddi3>
 1d0:	20 93 0e 01 	sts	0x010E, r18	; 0x80010e <millis>
 1d4:	30 93 0f 01 	sts	0x010F, r19	; 0x80010f <millis+0x1>
 1d8:	40 93 10 01 	sts	0x0110, r20	; 0x800110 <millis+0x2>
 1dc:	50 93 11 01 	sts	0x0111, r21	; 0x800111 <millis+0x3>
 1e0:	60 93 12 01 	sts	0x0112, r22	; 0x800112 <millis+0x4>
 1e4:	70 93 13 01 	sts	0x0113, r23	; 0x800113 <millis+0x5>
 1e8:	80 93 14 01 	sts	0x0114, r24	; 0x800114 <millis+0x6>
 1ec:	90 93 15 01 	sts	0x0115, r25	; 0x800115 <millis+0x7>
	micros %= 1000;
 1f0:	60 91 0a 01 	lds	r22, 0x010A	; 0x80010a <__data_end>
 1f4:	70 91 0b 01 	lds	r23, 0x010B	; 0x80010b <__data_end+0x1>
 1f8:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <__data_end+0x2>
 1fc:	90 91 0d 01 	lds	r25, 0x010D	; 0x80010d <__data_end+0x3>
 200:	a3 01       	movw	r20, r6
 202:	92 01       	movw	r18, r4
 204:	ce d0       	rcall	.+412    	; 0x3a2 <__udivmodsi4>
 206:	60 93 0a 01 	sts	0x010A, r22	; 0x80010a <__data_end>
 20a:	70 93 0b 01 	sts	0x010B, r23	; 0x80010b <__data_end+0x1>
 20e:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <__data_end+0x2>
 212:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <__data_end+0x3>
}
 216:	ff 91       	pop	r31
 218:	ef 91       	pop	r30
 21a:	df 91       	pop	r29
 21c:	cf 91       	pop	r28
 21e:	bf 91       	pop	r27
 220:	af 91       	pop	r26
 222:	9f 91       	pop	r25
 224:	8f 91       	pop	r24
 226:	7f 91       	pop	r23
 228:	6f 91       	pop	r22
 22a:	5f 91       	pop	r21
 22c:	4f 91       	pop	r20
 22e:	3f 91       	pop	r19
 230:	2f 91       	pop	r18
 232:	1f 91       	pop	r17
 234:	0f 91       	pop	r16
 236:	ff 90       	pop	r15
 238:	ef 90       	pop	r14
 23a:	df 90       	pop	r13
 23c:	cf 90       	pop	r12
 23e:	bf 90       	pop	r11
 240:	af 90       	pop	r10
 242:	7f 90       	pop	r7
 244:	6f 90       	pop	r6
 246:	5f 90       	pop	r5
 248:	4f 90       	pop	r4
 24a:	0f 90       	pop	r0
 24c:	0b be       	out	0x3b, r0	; 59
 24e:	0f 90       	pop	r0
 250:	0f be       	out	0x3f, r0	; 63
 252:	0f 90       	pop	r0
 254:	1f 90       	pop	r1
 256:	18 95       	reti

00000258 <display_digit>:

void display_digit(int position, int number)
{
	// position: 0 ~ 3
	// number: 0 ~ 9
	PORTE |= 0x0F;
 258:	23 b1       	in	r18, 0x03	; 3
 25a:	2f 60       	ori	r18, 0x0F	; 15
 25c:	23 b9       	out	0x03, r18	; 3
	PORTE &= ~(1 << (position - 1));
 25e:	43 b1       	in	r20, 0x03	; 3
 260:	01 97       	sbiw	r24, 0x01	; 1
 262:	21 e0       	ldi	r18, 0x01	; 1
 264:	30 e0       	ldi	r19, 0x00	; 0
 266:	f9 01       	movw	r30, r18
 268:	02 c0       	rjmp	.+4      	; 0x26e <display_digit+0x16>
 26a:	ee 0f       	add	r30, r30
 26c:	ff 1f       	adc	r31, r31
 26e:	8a 95       	dec	r24
 270:	e2 f7       	brpl	.-8      	; 0x26a <display_digit+0x12>
 272:	cf 01       	movw	r24, r30
 274:	80 95       	com	r24
 276:	84 23       	and	r24, r20
 278:	83 b9       	out	0x03, r24	; 3
	PORTF = numbers[number];
 27a:	fb 01       	movw	r30, r22
 27c:	e0 50       	subi	r30, 0x00	; 0
 27e:	ff 4f       	sbci	r31, 0xFF	; 255
 280:	80 81       	ld	r24, Z
 282:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <__TEXT_REGION_LENGTH__+0x7e0062>
 286:	08 95       	ret

00000288 <main>:
}

int main(void)
{
    DDRE = 0x0F; // control pin
 288:	8f e0       	ldi	r24, 0x0F	; 15
 28a:	82 b9       	out	0x02, r24	; 2
    DDRF = 0xFF; // segment pin
 28c:	8f ef       	ldi	r24, 0xFF	; 255
 28e:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <__TEXT_REGION_LENGTH__+0x7e0061>
	
	TCCR0 |= (1 << CS02) | (1 << CS01) | (1 << CS00); // pre-scaler ratio 1024
 292:	83 b7       	in	r24, 0x33	; 51
 294:	87 60       	ori	r24, 0x07	; 7
 296:	83 bf       	out	0x33, r24	; 51
	TIMSK |= (1 << TOIE0); // OVF INT enable
 298:	87 b7       	in	r24, 0x37	; 55
 29a:	81 60       	ori	r24, 0x01	; 1
 29c:	87 bf       	out	0x37, r24	; 55
	sei();
 29e:	78 94       	sei
		int thousands = temp / 1000;
		int hundreds = temp / 100 % 10;
		int tens = temp / 10 % 10;
		int ones = temp % 10;
		
		display_digit(1, thousands);
 2a0:	0f 2e       	mov	r0, r31
 2a2:	f8 ee       	ldi	r31, 0xE8	; 232
 2a4:	6f 2e       	mov	r6, r31
 2a6:	f3 e0       	ldi	r31, 0x03	; 3
 2a8:	7f 2e       	mov	r7, r31
 2aa:	f0 2d       	mov	r31, r0
		_delay_ms(SEGMENT_DELAY);
		display_digit(2, hundreds);
 2ac:	0f 2e       	mov	r0, r31
 2ae:	f4 e6       	ldi	r31, 0x64	; 100
 2b0:	8f 2e       	mov	r8, r31
 2b2:	91 2c       	mov	r9, r1
 2b4:	f0 2d       	mov	r31, r0
 2b6:	ca e0       	ldi	r28, 0x0A	; 10
 2b8:	d0 e0       	ldi	r29, 0x00	; 0
	TIMSK |= (1 << TOIE0); // OVF INT enable
	sei();
	
    while (1) 
    {
		int temp = (millis / 100) % 10000;
 2ba:	20 91 0e 01 	lds	r18, 0x010E	; 0x80010e <millis>
 2be:	30 91 0f 01 	lds	r19, 0x010F	; 0x80010f <millis+0x1>
 2c2:	40 91 10 01 	lds	r20, 0x0110	; 0x800110 <millis+0x2>
 2c6:	50 91 11 01 	lds	r21, 0x0111	; 0x800111 <millis+0x3>
 2ca:	60 91 12 01 	lds	r22, 0x0112	; 0x800112 <millis+0x4>
 2ce:	70 91 13 01 	lds	r23, 0x0113	; 0x800113 <millis+0x5>
 2d2:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <millis+0x6>
 2d6:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <millis+0x7>
 2da:	0f 2e       	mov	r0, r31
 2dc:	f4 e6       	ldi	r31, 0x64	; 100
 2de:	af 2e       	mov	r10, r31
 2e0:	f0 2d       	mov	r31, r0
 2e2:	b1 2c       	mov	r11, r1
 2e4:	c1 2c       	mov	r12, r1
 2e6:	d1 2c       	mov	r13, r1
 2e8:	e1 2c       	mov	r14, r1
 2ea:	f1 2c       	mov	r15, r1
 2ec:	00 e0       	ldi	r16, 0x00	; 0
 2ee:	10 e0       	ldi	r17, 0x00	; 0
 2f0:	7c d0       	rcall	.+248    	; 0x3ea <__udivdi3>
 2f2:	68 94       	set
 2f4:	aa 24       	eor	r10, r10
 2f6:	a4 f8       	bld	r10, 4
 2f8:	0f 2e       	mov	r0, r31
 2fa:	f7 e2       	ldi	r31, 0x27	; 39
 2fc:	bf 2e       	mov	r11, r31
 2fe:	f0 2d       	mov	r31, r0
 300:	72 d0       	rcall	.+228    	; 0x3e6 <__umoddi3>
 302:	02 2f       	mov	r16, r18
 304:	13 2f       	mov	r17, r19
		int thousands = temp / 1000;
		int hundreds = temp / 100 % 10;
		int tens = temp / 10 % 10;
		int ones = temp % 10;
		
		display_digit(1, thousands);
 306:	82 2f       	mov	r24, r18
 308:	91 2f       	mov	r25, r17
 30a:	b3 01       	movw	r22, r6
 30c:	37 d0       	rcall	.+110    	; 0x37c <__divmodhi4>
 30e:	81 e0       	ldi	r24, 0x01	; 1
 310:	90 e0       	ldi	r25, 0x00	; 0
 312:	a2 df       	rcall	.-188    	; 0x258 <display_digit>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 314:	8f e1       	ldi	r24, 0x1F	; 31
 316:	9e e4       	ldi	r25, 0x4E	; 78
 318:	01 97       	sbiw	r24, 0x01	; 1
 31a:	f1 f7       	brne	.-4      	; 0x318 <main+0x90>
 31c:	00 c0       	rjmp	.+0      	; 0x31e <main+0x96>
		_delay_ms(SEGMENT_DELAY);
		display_digit(2, hundreds);
 31e:	00 00       	nop
 320:	80 2f       	mov	r24, r16
 322:	91 2f       	mov	r25, r17
 324:	b4 01       	movw	r22, r8
 326:	2a d0       	rcall	.+84     	; 0x37c <__divmodhi4>
 328:	cb 01       	movw	r24, r22
 32a:	be 01       	movw	r22, r28
 32c:	27 d0       	rcall	.+78     	; 0x37c <__divmodhi4>
 32e:	bc 01       	movw	r22, r24
 330:	82 e0       	ldi	r24, 0x02	; 2
 332:	90 e0       	ldi	r25, 0x00	; 0
 334:	91 df       	rcall	.-222    	; 0x258 <display_digit>
 336:	8f e1       	ldi	r24, 0x1F	; 31
 338:	9e e4       	ldi	r25, 0x4E	; 78
 33a:	01 97       	sbiw	r24, 0x01	; 1
 33c:	f1 f7       	brne	.-4      	; 0x33a <main+0xb2>
 33e:	00 c0       	rjmp	.+0      	; 0x340 <main+0xb8>
		_delay_ms(SEGMENT_DELAY);
		display_digit(3, tens);
 340:	00 00       	nop
 342:	80 2f       	mov	r24, r16
 344:	91 2f       	mov	r25, r17
 346:	be 01       	movw	r22, r28
 348:	19 d0       	rcall	.+50     	; 0x37c <__divmodhi4>
 34a:	8c 01       	movw	r16, r24
 34c:	cb 01       	movw	r24, r22
 34e:	be 01       	movw	r22, r28
 350:	15 d0       	rcall	.+42     	; 0x37c <__divmodhi4>
 352:	bc 01       	movw	r22, r24
 354:	83 e0       	ldi	r24, 0x03	; 3
 356:	90 e0       	ldi	r25, 0x00	; 0
 358:	7f df       	rcall	.-258    	; 0x258 <display_digit>
 35a:	8f e1       	ldi	r24, 0x1F	; 31
 35c:	9e e4       	ldi	r25, 0x4E	; 78
 35e:	01 97       	sbiw	r24, 0x01	; 1
 360:	f1 f7       	brne	.-4      	; 0x35e <main+0xd6>
 362:	00 c0       	rjmp	.+0      	; 0x364 <main+0xdc>
 364:	00 00       	nop
		_delay_ms(SEGMENT_DELAY);
		display_digit(4, ones);
 366:	b8 01       	movw	r22, r16
 368:	84 e0       	ldi	r24, 0x04	; 4
 36a:	90 e0       	ldi	r25, 0x00	; 0
 36c:	75 df       	rcall	.-278    	; 0x258 <display_digit>
 36e:	8f e1       	ldi	r24, 0x1F	; 31
 370:	9e e4       	ldi	r25, 0x4E	; 78
 372:	01 97       	sbiw	r24, 0x01	; 1
 374:	f1 f7       	brne	.-4      	; 0x372 <main+0xea>
 376:	00 c0       	rjmp	.+0      	; 0x378 <main+0xf0>
 378:	00 00       	nop
 37a:	9f cf       	rjmp	.-194    	; 0x2ba <main+0x32>

0000037c <__divmodhi4>:
 37c:	97 fb       	bst	r25, 7
 37e:	07 2e       	mov	r0, r23
 380:	16 f4       	brtc	.+4      	; 0x386 <__divmodhi4+0xa>
 382:	00 94       	com	r0
 384:	06 d0       	rcall	.+12     	; 0x392 <__divmodhi4_neg1>
 386:	77 fd       	sbrc	r23, 7
 388:	08 d0       	rcall	.+16     	; 0x39a <__divmodhi4_neg2>
 38a:	a0 d0       	rcall	.+320    	; 0x4cc <__udivmodhi4>
 38c:	07 fc       	sbrc	r0, 7
 38e:	05 d0       	rcall	.+10     	; 0x39a <__divmodhi4_neg2>
 390:	3e f4       	brtc	.+14     	; 0x3a0 <__divmodhi4_exit>

00000392 <__divmodhi4_neg1>:
 392:	90 95       	com	r25
 394:	81 95       	neg	r24
 396:	9f 4f       	sbci	r25, 0xFF	; 255
 398:	08 95       	ret

0000039a <__divmodhi4_neg2>:
 39a:	70 95       	com	r23
 39c:	61 95       	neg	r22
 39e:	7f 4f       	sbci	r23, 0xFF	; 255

000003a0 <__divmodhi4_exit>:
 3a0:	08 95       	ret

000003a2 <__udivmodsi4>:
 3a2:	a1 e2       	ldi	r26, 0x21	; 33
 3a4:	1a 2e       	mov	r1, r26
 3a6:	aa 1b       	sub	r26, r26
 3a8:	bb 1b       	sub	r27, r27
 3aa:	fd 01       	movw	r30, r26
 3ac:	0d c0       	rjmp	.+26     	; 0x3c8 <__udivmodsi4_ep>

000003ae <__udivmodsi4_loop>:
 3ae:	aa 1f       	adc	r26, r26
 3b0:	bb 1f       	adc	r27, r27
 3b2:	ee 1f       	adc	r30, r30
 3b4:	ff 1f       	adc	r31, r31
 3b6:	a2 17       	cp	r26, r18
 3b8:	b3 07       	cpc	r27, r19
 3ba:	e4 07       	cpc	r30, r20
 3bc:	f5 07       	cpc	r31, r21
 3be:	20 f0       	brcs	.+8      	; 0x3c8 <__udivmodsi4_ep>
 3c0:	a2 1b       	sub	r26, r18
 3c2:	b3 0b       	sbc	r27, r19
 3c4:	e4 0b       	sbc	r30, r20
 3c6:	f5 0b       	sbc	r31, r21

000003c8 <__udivmodsi4_ep>:
 3c8:	66 1f       	adc	r22, r22
 3ca:	77 1f       	adc	r23, r23
 3cc:	88 1f       	adc	r24, r24
 3ce:	99 1f       	adc	r25, r25
 3d0:	1a 94       	dec	r1
 3d2:	69 f7       	brne	.-38     	; 0x3ae <__udivmodsi4_loop>
 3d4:	60 95       	com	r22
 3d6:	70 95       	com	r23
 3d8:	80 95       	com	r24
 3da:	90 95       	com	r25
 3dc:	9b 01       	movw	r18, r22
 3de:	ac 01       	movw	r20, r24
 3e0:	bd 01       	movw	r22, r26
 3e2:	cf 01       	movw	r24, r30
 3e4:	08 95       	ret

000003e6 <__umoddi3>:
 3e6:	68 94       	set
 3e8:	01 c0       	rjmp	.+2      	; 0x3ec <__udivdi3_umoddi3>

000003ea <__udivdi3>:
 3ea:	e8 94       	clt

000003ec <__udivdi3_umoddi3>:
 3ec:	8f 92       	push	r8
 3ee:	9f 92       	push	r9
 3f0:	cf 93       	push	r28
 3f2:	df 93       	push	r29
 3f4:	05 d0       	rcall	.+10     	; 0x400 <__udivmod64>
 3f6:	df 91       	pop	r29
 3f8:	cf 91       	pop	r28
 3fa:	9f 90       	pop	r9
 3fc:	8f 90       	pop	r8
 3fe:	08 95       	ret

00000400 <__udivmod64>:
 400:	88 24       	eor	r8, r8
 402:	99 24       	eor	r9, r9
 404:	f4 01       	movw	r30, r8
 406:	e4 01       	movw	r28, r8
 408:	b0 e4       	ldi	r27, 0x40	; 64
 40a:	9f 93       	push	r25
 40c:	aa 27       	eor	r26, r26
 40e:	9a 15       	cp	r25, r10
 410:	8b 04       	cpc	r8, r11
 412:	9c 04       	cpc	r9, r12
 414:	ed 05       	cpc	r30, r13
 416:	fe 05       	cpc	r31, r14
 418:	cf 05       	cpc	r28, r15
 41a:	d0 07       	cpc	r29, r16
 41c:	a1 07       	cpc	r26, r17
 41e:	98 f4       	brcc	.+38     	; 0x446 <__udivmod64+0x46>
 420:	ad 2f       	mov	r26, r29
 422:	dc 2f       	mov	r29, r28
 424:	cf 2f       	mov	r28, r31
 426:	fe 2f       	mov	r31, r30
 428:	e9 2d       	mov	r30, r9
 42a:	98 2c       	mov	r9, r8
 42c:	89 2e       	mov	r8, r25
 42e:	98 2f       	mov	r25, r24
 430:	87 2f       	mov	r24, r23
 432:	76 2f       	mov	r23, r22
 434:	65 2f       	mov	r22, r21
 436:	54 2f       	mov	r21, r20
 438:	43 2f       	mov	r20, r19
 43a:	32 2f       	mov	r19, r18
 43c:	22 27       	eor	r18, r18
 43e:	b8 50       	subi	r27, 0x08	; 8
 440:	31 f7       	brne	.-52     	; 0x40e <__udivmod64+0xe>
 442:	bf 91       	pop	r27
 444:	27 c0       	rjmp	.+78     	; 0x494 <__udivmod64+0x94>
 446:	1b 2e       	mov	r1, r27
 448:	bf 91       	pop	r27
 44a:	bb 27       	eor	r27, r27
 44c:	22 0f       	add	r18, r18
 44e:	33 1f       	adc	r19, r19
 450:	44 1f       	adc	r20, r20
 452:	55 1f       	adc	r21, r21
 454:	66 1f       	adc	r22, r22
 456:	77 1f       	adc	r23, r23
 458:	88 1f       	adc	r24, r24
 45a:	99 1f       	adc	r25, r25
 45c:	88 1c       	adc	r8, r8
 45e:	99 1c       	adc	r9, r9
 460:	ee 1f       	adc	r30, r30
 462:	ff 1f       	adc	r31, r31
 464:	cc 1f       	adc	r28, r28
 466:	dd 1f       	adc	r29, r29
 468:	aa 1f       	adc	r26, r26
 46a:	bb 1f       	adc	r27, r27
 46c:	8a 14       	cp	r8, r10
 46e:	9b 04       	cpc	r9, r11
 470:	ec 05       	cpc	r30, r12
 472:	fd 05       	cpc	r31, r13
 474:	ce 05       	cpc	r28, r14
 476:	df 05       	cpc	r29, r15
 478:	a0 07       	cpc	r26, r16
 47a:	b1 07       	cpc	r27, r17
 47c:	48 f0       	brcs	.+18     	; 0x490 <__udivmod64+0x90>
 47e:	8a 18       	sub	r8, r10
 480:	9b 08       	sbc	r9, r11
 482:	ec 09       	sbc	r30, r12
 484:	fd 09       	sbc	r31, r13
 486:	ce 09       	sbc	r28, r14
 488:	df 09       	sbc	r29, r15
 48a:	a0 0b       	sbc	r26, r16
 48c:	b1 0b       	sbc	r27, r17
 48e:	21 60       	ori	r18, 0x01	; 1
 490:	1a 94       	dec	r1
 492:	e1 f6       	brne	.-72     	; 0x44c <__udivmod64+0x4c>
 494:	2e f4       	brtc	.+10     	; 0x4a0 <__udivmod64+0xa0>
 496:	94 01       	movw	r18, r8
 498:	af 01       	movw	r20, r30
 49a:	be 01       	movw	r22, r28
 49c:	cd 01       	movw	r24, r26
 49e:	00 0c       	add	r0, r0
 4a0:	08 95       	ret

000004a2 <__adddi3>:
 4a2:	2a 0d       	add	r18, r10
 4a4:	3b 1d       	adc	r19, r11
 4a6:	4c 1d       	adc	r20, r12
 4a8:	5d 1d       	adc	r21, r13
 4aa:	6e 1d       	adc	r22, r14
 4ac:	7f 1d       	adc	r23, r15
 4ae:	80 1f       	adc	r24, r16
 4b0:	91 1f       	adc	r25, r17
 4b2:	08 95       	ret

000004b4 <__adddi3_s8>:
 4b4:	00 24       	eor	r0, r0
 4b6:	a7 fd       	sbrc	r26, 7
 4b8:	00 94       	com	r0
 4ba:	2a 0f       	add	r18, r26
 4bc:	30 1d       	adc	r19, r0
 4be:	40 1d       	adc	r20, r0
 4c0:	50 1d       	adc	r21, r0
 4c2:	60 1d       	adc	r22, r0
 4c4:	70 1d       	adc	r23, r0
 4c6:	80 1d       	adc	r24, r0
 4c8:	90 1d       	adc	r25, r0
 4ca:	08 95       	ret

000004cc <__udivmodhi4>:
 4cc:	aa 1b       	sub	r26, r26
 4ce:	bb 1b       	sub	r27, r27
 4d0:	51 e1       	ldi	r21, 0x11	; 17
 4d2:	07 c0       	rjmp	.+14     	; 0x4e2 <__udivmodhi4_ep>

000004d4 <__udivmodhi4_loop>:
 4d4:	aa 1f       	adc	r26, r26
 4d6:	bb 1f       	adc	r27, r27
 4d8:	a6 17       	cp	r26, r22
 4da:	b7 07       	cpc	r27, r23
 4dc:	10 f0       	brcs	.+4      	; 0x4e2 <__udivmodhi4_ep>
 4de:	a6 1b       	sub	r26, r22
 4e0:	b7 0b       	sbc	r27, r23

000004e2 <__udivmodhi4_ep>:
 4e2:	88 1f       	adc	r24, r24
 4e4:	99 1f       	adc	r25, r25
 4e6:	5a 95       	dec	r21
 4e8:	a9 f7       	brne	.-22     	; 0x4d4 <__udivmodhi4_loop>
 4ea:	80 95       	com	r24
 4ec:	90 95       	com	r25
 4ee:	bc 01       	movw	r22, r24
 4f0:	cd 01       	movw	r24, r26
 4f2:	08 95       	ret

000004f4 <_exit>:
 4f4:	f8 94       	cli

000004f6 <__stop_program>:
 4f6:	ff cf       	rjmp	.-2      	; 0x4f6 <__stop_program>
