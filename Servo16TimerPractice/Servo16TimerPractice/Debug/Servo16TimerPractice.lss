
Servo16TimerPractice.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000152  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000000fe  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000152  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000184  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000028  00000000  00000000  000001c4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000008f2  00000000  00000000  000001ec  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000814  00000000  00000000  00000ade  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000002e7  00000000  00000000  000012f2  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000034  00000000  00000000  000015dc  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000042f  00000000  00000000  00001610  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000048  00000000  00000000  00001a3f  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000018  00000000  00000000  00001a87  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	4b c0       	rjmp	.+150    	; 0x9c <__bad_interrupt>
   6:	00 00       	nop
   8:	49 c0       	rjmp	.+146    	; 0x9c <__bad_interrupt>
   a:	00 00       	nop
   c:	47 c0       	rjmp	.+142    	; 0x9c <__bad_interrupt>
   e:	00 00       	nop
  10:	45 c0       	rjmp	.+138    	; 0x9c <__bad_interrupt>
  12:	00 00       	nop
  14:	43 c0       	rjmp	.+134    	; 0x9c <__bad_interrupt>
  16:	00 00       	nop
  18:	41 c0       	rjmp	.+130    	; 0x9c <__bad_interrupt>
  1a:	00 00       	nop
  1c:	3f c0       	rjmp	.+126    	; 0x9c <__bad_interrupt>
  1e:	00 00       	nop
  20:	3d c0       	rjmp	.+122    	; 0x9c <__bad_interrupt>
  22:	00 00       	nop
  24:	3b c0       	rjmp	.+118    	; 0x9c <__bad_interrupt>
  26:	00 00       	nop
  28:	39 c0       	rjmp	.+114    	; 0x9c <__bad_interrupt>
  2a:	00 00       	nop
  2c:	37 c0       	rjmp	.+110    	; 0x9c <__bad_interrupt>
  2e:	00 00       	nop
  30:	35 c0       	rjmp	.+106    	; 0x9c <__bad_interrupt>
  32:	00 00       	nop
  34:	33 c0       	rjmp	.+102    	; 0x9c <__bad_interrupt>
  36:	00 00       	nop
  38:	31 c0       	rjmp	.+98     	; 0x9c <__bad_interrupt>
  3a:	00 00       	nop
  3c:	2f c0       	rjmp	.+94     	; 0x9c <__bad_interrupt>
  3e:	00 00       	nop
  40:	2d c0       	rjmp	.+90     	; 0x9c <__bad_interrupt>
  42:	00 00       	nop
  44:	2b c0       	rjmp	.+86     	; 0x9c <__bad_interrupt>
  46:	00 00       	nop
  48:	29 c0       	rjmp	.+82     	; 0x9c <__bad_interrupt>
  4a:	00 00       	nop
  4c:	27 c0       	rjmp	.+78     	; 0x9c <__bad_interrupt>
  4e:	00 00       	nop
  50:	25 c0       	rjmp	.+74     	; 0x9c <__bad_interrupt>
  52:	00 00       	nop
  54:	23 c0       	rjmp	.+70     	; 0x9c <__bad_interrupt>
  56:	00 00       	nop
  58:	21 c0       	rjmp	.+66     	; 0x9c <__bad_interrupt>
  5a:	00 00       	nop
  5c:	1f c0       	rjmp	.+62     	; 0x9c <__bad_interrupt>
  5e:	00 00       	nop
  60:	1d c0       	rjmp	.+58     	; 0x9c <__bad_interrupt>
  62:	00 00       	nop
  64:	1b c0       	rjmp	.+54     	; 0x9c <__bad_interrupt>
  66:	00 00       	nop
  68:	19 c0       	rjmp	.+50     	; 0x9c <__bad_interrupt>
  6a:	00 00       	nop
  6c:	17 c0       	rjmp	.+46     	; 0x9c <__bad_interrupt>
  6e:	00 00       	nop
  70:	15 c0       	rjmp	.+42     	; 0x9c <__bad_interrupt>
  72:	00 00       	nop
  74:	13 c0       	rjmp	.+38     	; 0x9c <__bad_interrupt>
  76:	00 00       	nop
  78:	11 c0       	rjmp	.+34     	; 0x9c <__bad_interrupt>
  7a:	00 00       	nop
  7c:	0f c0       	rjmp	.+30     	; 0x9c <__bad_interrupt>
  7e:	00 00       	nop
  80:	0d c0       	rjmp	.+26     	; 0x9c <__bad_interrupt>
  82:	00 00       	nop
  84:	0b c0       	rjmp	.+22     	; 0x9c <__bad_interrupt>
  86:	00 00       	nop
  88:	09 c0       	rjmp	.+18     	; 0x9c <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61
  98:	11 d0       	rcall	.+34     	; 0xbc <main>
  9a:	2f c0       	rjmp	.+94     	; 0xfa <_exit>

0000009c <__bad_interrupt>:
  9c:	b1 cf       	rjmp	.-158    	; 0x0 <__vectors>

0000009e <timer1_init>:
#define P_90_DEG 625

void timer1_init(void)
{
    // mode 14
    TCCR1A = (0x01 << COM1A1) | (0x01 << WGM11);
  9e:	82 e8       	ldi	r24, 0x82	; 130
  a0:	8f bd       	out	0x2f, r24	; 47
    TCCR1B = (0x01 << WGM13) | (0x01 << WGM12) | (0x01 << CS11) | (0x01 << CS10);
  a2:	8b e1       	ldi	r24, 0x1B	; 27
  a4:	8e bd       	out	0x2e, r24	; 46
    ICR1 = 4999; // TOP value
  a6:	87 e8       	ldi	r24, 0x87	; 135
  a8:	93 e1       	ldi	r25, 0x13	; 19
  aa:	97 bd       	out	0x27, r25	; 39
  ac:	86 bd       	out	0x26, r24	; 38
    OCR1A = P_90_DEG; // 0 degree
  ae:	81 e7       	ldi	r24, 0x71	; 113
  b0:	92 e0       	ldi	r25, 0x02	; 2
  b2:	9b bd       	out	0x2b, r25	; 43
  b4:	8a bd       	out	0x2a, r24	; 42
    TCNT1 = 0x00; // start point
  b6:	1d bc       	out	0x2d, r1	; 45
  b8:	1c bc       	out	0x2c, r1	; 44
  ba:	08 95       	ret

000000bc <main>:
}

int main(void)
{
    DDRB = 0xFF;
  bc:	8f ef       	ldi	r24, 0xFF	; 255
  be:	87 bb       	out	0x17, r24	; 23
    PORTB = 0xFF;
  c0:	88 bb       	out	0x18, r24	; 24
    timer1_init();
  c2:	ed df       	rcall	.-38     	; 0x9e <timer1_init>
    while(1)
    {
        OCR1A = N_90_DEG;
  c4:	2d e7       	ldi	r18, 0x7D	; 125
  c6:	30 e0       	ldi	r19, 0x00	; 0
        _delay_ms(500);
        OCR1A = P_90_DEG;
  c8:	81 e7       	ldi	r24, 0x71	; 113
  ca:	92 e0       	ldi	r25, 0x02	; 2
    DDRB = 0xFF;
    PORTB = 0xFF;
    timer1_init();
    while(1)
    {
        OCR1A = N_90_DEG;
  cc:	3b bd       	out	0x2b, r19	; 43
  ce:	2a bd       	out	0x2a, r18	; 42
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  d0:	4f ef       	ldi	r20, 0xFF	; 255
  d2:	59 e6       	ldi	r21, 0x69	; 105
  d4:	68 e1       	ldi	r22, 0x18	; 24
  d6:	41 50       	subi	r20, 0x01	; 1
  d8:	50 40       	sbci	r21, 0x00	; 0
  da:	60 40       	sbci	r22, 0x00	; 0
  dc:	e1 f7       	brne	.-8      	; 0xd6 <main+0x1a>
  de:	00 c0       	rjmp	.+0      	; 0xe0 <main+0x24>
  e0:	00 00       	nop
        _delay_ms(500);
        OCR1A = P_90_DEG;
  e2:	9b bd       	out	0x2b, r25	; 43
  e4:	8a bd       	out	0x2a, r24	; 42
  e6:	4f ef       	ldi	r20, 0xFF	; 255
  e8:	59 e6       	ldi	r21, 0x69	; 105
  ea:	68 e1       	ldi	r22, 0x18	; 24
  ec:	41 50       	subi	r20, 0x01	; 1
  ee:	50 40       	sbci	r21, 0x00	; 0
  f0:	60 40       	sbci	r22, 0x00	; 0
  f2:	e1 f7       	brne	.-8      	; 0xec <main+0x30>
  f4:	00 c0       	rjmp	.+0      	; 0xf6 <main+0x3a>
  f6:	00 00       	nop
  f8:	e9 cf       	rjmp	.-46     	; 0xcc <main+0x10>

000000fa <_exit>:
  fa:	f8 94       	cli

000000fc <__stop_program>:
  fc:	ff cf       	rjmp	.-2      	; 0xfc <__stop_program>
